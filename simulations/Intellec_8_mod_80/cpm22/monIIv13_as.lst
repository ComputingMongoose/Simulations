 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 1 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


       1/       0 :                     ; Changes for assembling with MacroAssembler AS 1.42Beta
       2/       0 :                     ; - change "DATE" to "DATC" ("DATE" is a reserved symbol)
       3/       0 :                     ; - change "OR" to "|"
       4/       0 :                     ; - change "NOT" to "~"
       5/       0 :                     ; - change "AND" to "&"
       6/       0 :                     ; - change NOT CMSK to NCMSK (the symbol was added)
       7/       0 :                     ; - change NOT RMSK to NRMSK (the symbol was added)
       8/       0 :                     ; - change NOT PMSK to NPMSK (the symbol was added)
       9/       0 :                     ; - change "MOD" to "#"
      10/       0 :                     ; - change "TRUE"/"FALSE" to "MTRUE"/"MFALSE" (TRUE and FALSE are predefined symbols)
      11/       0 :                     ;
      12/       0 :                     ; - change USCS and USCC to F7 (otherwise it was the same as TTY; in the original listing it was F7)
      13/       0 :                     
      14/       0 :                     
      15/       0 :                     		;************************************************************************
      16/       0 :                     		;*                                                                      *
      17/       0 :                     		;*                  INTELLEC SERIES II BOOT/MONITOR        9800605B     *
      18/       0 :                     		;*                                 VERSION 1.3                          *
      19/       0 :                     		;*                                                                      *
      20/       0 :                     		;* COPYRIGHT (C) 1978, 1979 INTEL CORPORATION. ALL RIGHTS               *
      21/       0 :                     		;* RESERVED. NO PART OF THIS PROGRAM OR PUBLICATION                     *
      22/       0 :                     		;* MAY BE REPRODUCED, TRANSMITTED, TRANSCRIBED,                         *
      23/       0 :                     		;* STORED IN A RETRIEVAL SYSTEM, OR TRANSLATED INTO                     *
      24/       0 :                     		;* ANY LANGUAGE OR COMPUTER LANGUAGE, IN ANY FORM                       *
      25/       0 :                     		;* OR BY ANY MEANS, ELECTRONIC, MECHANICAL, MAGNETIC,                   *
      26/       0 :                     		;* OPTICAL, CHEMICAL, MANUAL OR OTHERWISE, WITHOUT                      *
      27/       0 :                     		;* THE PRIOR WRITTEN PERMISSION OF INTEL CORPORATION,                   *
      28/       0 :                     		;* 3065 BOWERS AVENUE, SANTA CLARA, CALIFORNIA 95051.                   *
      29/       0 :                     		;*                                                                      *
      30/       0 :                     		;************************************************************************
      31/       0 :                     		; <LEGAL COMMAND> ::=   <ASSIGN I/O COMMAND>
      32/       0 :                     		;                       <DISPLAY MEMORY COMMAND>
      33/       0 :                     		;                       <ENDFILE COMMAND>
      34/       0 :                     		;                       <FILL MEMORY COMMAND>
      35/       0 :                     		;                       <PROGRAM EXECUTE COMMAND>
      36/       0 :                     		;                       <HEXADECIMAL ARITHMETIC COMMAND>
      37/       0 :                     		;                       <MOVE MEMORY COMMAND>
      38/       0 :                     		;                       <LEADER COMMAND>
      39/       0 :                     		;                       <QUERY STATUS COMMAND>
      40/       0 :                     		;                       <READ HEXADECIMAL FILE COMMAND>
      41/       0 :                     		;                       <SUBSTITUTE MEMORY COMMAND>
      42/       0 :                     		;                       <WRITE HEXADECIMAL RECORD COMMAND>
      43/       0 :                     		;                       <REGISTER MODIFY COMMAND>
      44/       0 :                     		;                       <TRANSFER CONTROL TO DIAGNOSTIC PROGRAM COMMAND>
      45/       0 :                     		; <ASSIGN I/O COMMAND> ::= A<LOGICAL DEVICE>=<PHYSICAL DEVICE>
      46/       0 :                     		; <DISPLAY MEMORY COMMAND> ::= D<NUMBER>,<NUMBER>
      47/       0 :                     		; <ENDFILE COMMAND> ::= E<NUMBER>
      48/       0 :                     		; <FILL MEMORY COMMAND> ::= F<NUMBER>,<NUMBER>,<NUMBER>
      49/       0 :                     		; <PROGRAM EXECUTE COMMAND> ::= G<NUMBER>,<NUMBER>,<NUMBER>
      50/       0 :                     		; <HEXADECIMAL ARITHMETIC COMMAND> ::= H<NUMBER>,<NUMBER>
      51/       0 :                     		; <MOVE MEMORY COMMAND> ::= M<NUMBER>,<NUMBER>,<NUMBER>
      52/       0 :                     		; <LEADER COMMAND> ::= N
      53/       0 :                     		; <QUERY STATUS COMMAND> ::= Q
      54/       0 :                     		; <READ HEXADECIMAL FILE COMMAND> ::= R<NUMBER>
      55/       0 :                     		; <SUBSTITUTE MEMORY COMMAND> ::= S<NUMBER><COMMA>...
      56/       0 :                     		; <WRITE HEXADECIMAL RECORD COMMAND> ::= W<NUMBER>,<NUMBER>
      57/       0 :                     		; <REGISTER MODIFY COMMAND> ::= X<REGISTER IDENTIFIER><NUMBER>...
      58/       0 :                     		; <TRANSFER CONTROL TO DIAGNOSTIC PROGRAM COMMAND> ::= Z$
      59/       0 :                     		; <LOGICAL DEVICE> ::= LOCAL CONSOLE!READER!LIST!PUNCH
      60/       0 :                     		; <PHYSICAL DEVICE> ::= CRT!TTY!PTR!PTP!LPT!BATCH!1!2
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 2 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


      61/       0 :                     		; <REGISTER IDENTIFIER> ::= A!B!C!D!E!F!H!I!L!M!P!S
      62/       0 :                     		; <NUMBER> ::= <HEX DIGIT>
      63/       0 :                     		;              <NUMBER><HEX DIGIT>
      64/       0 :                     		; <HEX DIGIT> ::= 0!1!2!3!4!5!6!7!8!9!A!B!C!D!E!F
      65/       0 :                     		;*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
      66/       0 :                     		;$       TITLE   (' INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 ')
      67/       0 :                     		        TITLE   " INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 "
      68/       0 : =0DH                 VER     EQU     13      ; VERSION 1.3
      69/       0 : =13H                 VERH    EQU     13H     ; STORAGE REPRESENTATION OF VERSION
      70/       0 : =103H                DATC    EQU     0103H   ; CREATION DATE, 01 MARCH 1979
      71/       0 :                     		; NOTE:
      72/       0 :                     		; THE DATE SHOWN ABOVE IS ENCODED IN A TWO BYTE FIELD IN BOTH THE BOOTSTRAP
      73/       0 :                     		; PROM AND THE MONITOR PROM IN ORDER TO CONTROL NEW RELEASES OF THIS PROGRAM.
      74/       0 :                     		; THE DATE CODE IS LOCATED AT ADDRESSES 0E804H AND 0E805H IN THE BOOTSTRAP
      75/       0 :                     		; AND AT ADDRESSES 0F824H AND 0F825H IN THE MONITOR.
      76/       0 :                     		; THE VERSION CODE IS LOCATED IN THE MONITOR ROM AT ADDRESS 0F82FH.
      77/       0 :                     		; WHEN A NEW RELEASE IS ISSUED, PLEASE CHANGE THE DATE AND VERSION CODES.
      78/       0 :                     		; THE COPYRIGHT NOTICE IS LOCATED IN THE MONITOR ROM BEGINNING AT 0F830H.
      79/       0 :                     		;********************************************************************************
      80/       0 :                     		;*                                                                              *
      81/       0 :                     		;*                      SYMBOL DEFINITIONS                                      *
      82/       0 :                     		;*                                                                              *
      83/       0 :                     		;********************************************************************************
      84/       0 :                     		;
      85/       0 :                     		; INTELLEC SERIES II SYSTEM CONSTANTS
      86/       0 :                     		;
      87/       0 :                     		; INTEGRATED CONSOLE I/O PORTS
      88/       0 :                     		;
      89/       0 : =0C0H                CONI    EQU     0C0H            ; CONSOLE INPUT DATA PORT
      90/       0 : =0C0H                CONO    EQU     0C0H            ; CONSOLE OUTPUT DATA PORT
      91/       0 : =0C1H                CONS    EQU     0C1H            ; CONSOLE STATUS PORT
      92/       0 : =0C1H                CONC    EQU     0C1H            ; CONSOLE CONTROL PORT
      93/       0 :                     		;
      94/       0 :                     		; SYSTEM BOOTSTRAP CONSTANTS (ISSUED TO PORT CPUC)
      95/       0 :                     		;
      96/       0 : =0DH                 DISABL  EQU     0DH             ; DISABLE INTERRUPTS
      97/       0 : =5H                  ENABL   EQU     05H             ; ENABLE INTERRUPTS
      98/       0 : =0H                  DISAXP  EQU     00H             ; DISABLE AUXILIARY PROM
      99/       0 :                     		
     100/       0 : =8H                  ENAXP   EQU     08H             ; ENABLE AUXILIARY PROM
     101/       0 : =1H                  BOVROF  EQU     01H             ; TURN OFF BUS OVERRIDE
     102/       0 : =9H                  BOVRON  EQU     09H             ; TURN ON BUS OVERRIDE
     103/       0 : =4H                  BTDGOF  EQU     04H             ; TURN OFF BOOT/DIAGNOSTIC
     104/       0 : =0CH                 BTDGON  EQU     0CH             ; TURN ON BOOT/DIAGNOSTIC
     105/       0 : =2H                  MOVBOT  EQU     02H             ; MOVE BOOT TO 0E800H
     106/       0 :                     		;
     107/       0 :                     		; SYSTEM I/O PORTS
     108/       0 :                     		;
     109/       0 : =0FEH                CPUS    EQU     0FEH            ; CPU STATUS PORT
     110/       0 : =0FFH                CPUC    EQU     0FFH            ; CPU CONTROL PORT (CONTROLS BOOT & AUX.PROM)
     111/       0 :                     		;
     112/       0 :                     		; SYSTEM INTERRUPT CONSTANTS
     113/       0 :                     		;
     114/       0 : =12H                 ICW1    EQU     00010010B       ; INITIALIZATION COMMAND WORD 1
     115/       0 : =0H                  ICW2    EQU     00000000B       ; INITIALIZATION COMMAND WORD 2
     116/       0 : =0BH                 OCW3    EQU     00001011B       ; OPERATION COMMAND WORD 3
     117/       0 : =20H                 EOI     EQU     00100000B       ; END OF INTERRUPT
     118/       0 :                     		;
     119/       0 :                     		; SYSTEM INTERRUPT MASKS AND VALUES
     120/       0 :                     		;
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 3 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     121/       0 : =1H                  INT0    EQU     00000001B       ; MASK FOR INTERRUPT LEVEL 0
     122/       0 : =2H                  INT1    EQU     00000010B
     123/       0 : =4H                  INT2    EQU     00000100B
     124/       0 : =8H                  INT3    EQU     00001000B
     125/       0 : =10H                 INT4    EQU     00010000B
     126/       0 : =20H                 INT5    EQU     00100000B
     127/       0 : =40H                 INT6    EQU     01000000B
     128/       0 : =80H                 INT7    EQU     10000000B
     129/       0 : =0H                  INTA    EQU     00000000B       ; NO INTERRUPTS ALLOWED AT ALL
     130/       0 :                     		;
     131/       0 :                     		; SYSTEM INTERRUPT I/O PORTS
     132/       0 :                     		;
     133/       0 : =0FDH                SICP0   EQU     0FDH            ; INITIALIZATION COMMAND PORT 0
     134/       0 : =0FCH                SICP1   EQU     0FCH            ; INITIALIZATION COMMAND PORT 1
     135/       0 : =0FDH                SOCP0   EQU     0FDH            ; OPERATION COMMAND PORT 0
     136/       0 : =0FCH                SOCP1   EQU     0FCH            ; OPERATION COMMAND PORT 1
     137/       0 :                     		;
     138/       0 :                     		; DEDICATED PROM PROGRAMMER CONSTANTS (USED IN C,P,T COMMANDS)
     139/       0 :                     		;
     140/       0 : =2H                  PCOMP   EQU     00000010B       ; PROGRAMMING COMPLETE
     141/       0 : =1H                  PGRDY   EQU     00000001B       ; PROM READY
     142/       0 : =20H                 PSOCK   EQU     00100000B       ; 16 PIN SOCKET SELECTED
     143/       0 : =10H                 PNIB    EQU     00010000B       ; SELECT UPPER NIBBLE
     144/       0 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     145/       0 :                     		;
     146/       0 :                     		; INTELLEC SERIES II I/O SUBSYSTEM CONSTANTS
     147/       0 :                     		;
     148/       0 :                     		; TTY AND CRT MODE INSTRUCTION DEFINITIONS, I.E. USART MODE CONTROL
     149/       0 :                     		; WORD (FIRST CONTROL BYTE AFTER RESET)
     150/       0 :                     		;
     151/       0 : =3H                  R64X    EQU     00000011B       ; 64 X BAUD RATE
     152/       0 : =2H                  R16X    EQU     00000010B       ; 16 X BAUD RATE
     153/       0 : =1H                  R1X     EQU     00000001B       ; 1 X BAUD RATE
     154/       0 : =0H                  SYNC    EQU     00000000B       ; SYNC MODE
     155/       0 : =0CH                 CL8     EQU     00001100B       ; CHARACTER LENGTH = 8
     156/       0 : =8H                  CL7     EQU     00001000B       ; CHARACTER LENGTH = 7
     157/       0 : =4H                  CL6     EQU     00000100B       ; CHARACTER LENGTH = 6
     158/       0 : =0H                  CL5     EQU     00000000B       ; CHARACTER LENGTH = 5
     159/       0 : =10H                 PENB    EQU     00010000B       ; PARITY ENABLE
     160/       0 : =20H                 PEVEN   EQU     00100000B       ; EVEN PARITY
     161/       0 : =0C0H                ST2     EQU     11000000B       ; 2 STOP BITS
     162/       0 : =80H                 ST15    EQU     10000000B       ; 1.5 STOP BITS
     163/       0 : =40H                 ST1     EQU     01000000B       ; 1 STOP BIT
     164/       0 :                     		;
     165/       0 :                     		
     166/       0 :                     		; TTY AND CRT COMMAND INSTRUCTION DEFINITIONS (USART COMMAND CONTROL WORD)
     167/       0 :                     		;
     168/       0 : =1H                  TXEN    EQU     00000001B       ; TRANSMITTER ENABLE
     169/       0 : =2H                  DTR     EQU     00000010B       ; DATA TERMINAL READY
     170/       0 : =4H                  RXEN    EQU     00000100B       ; ENABLE RECEIVER
     171/       0 : =8H                  SBCH    EQU     00001000B       ; SEND BREAK CHARACTER
     172/       0 : =10H                 CLERR   EQU     00010000B       ; CLEAR ERROR
     173/       0 : =20H                 RTS     EQU     00100000B       ; SET REQUEST TO SEND OUTPUT  
     174/       0 : =40H                 USRST   EQU     01000000B       ; USART RESET - RETURN TO MODE CONTROL CYCLE
     175/       0 : =80H                 ENHM    EQU     10000000B       ; ENABLE HUNT MODE
     176/       0 :                     		;
     177/       0 :                     		; TTY/CRT STATUS WORD BIT DEFINITIONS
     178/       0 :                     		;
     179/       0 : =1H                  TRDY    EQU     00000001B       ; TRANSMIT READY
     180/       0 : =2H                  RRDY    EQU     00000010B       ; RECEIVE BUFFER READY
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 4 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     181/       0 : =4H                  TXBE    EQU     00000100B       ; TRANSMIT BUFFER EMPTY
     182/       0 : =8H                  RPAR    EQU     00001000B       ; RECEIVE PARITY ERROR
     183/       0 : =10H                 ROV     EQU     00010000B       ; RECEIVE OVERRUN ERROR
     184/       0 : =20H                 RFR     EQU     00100000B       ; RECEIVE FRAMING ERROR 
     185/       0 : =40H                 SYND    EQU     01000000B       ; SYNC DETECTED
     186/       0 : =80H                 DSR     EQU     10000000B       ; DATA SET READY INPUT
     187/       0 :                     		;
     188/       0 :                     		; TTY TAPE READER CONSTANTS
     189/       0 :                     		;
     190/       0 : =30H                 RADCT   EQU     48              ; TTY TAPE READER ADVANCE TIMER COUNT
     191/       0 : =0FAH                RTOCT   EQU     250             ; TTY TAPE READER TIMEOUT COUNT
     192/       0 : =27H                 TADV    EQU     TXEN | RXEN | RTS | DTR
     193/       0 : =25H                 COMD    EQU     TXEN | RXEN | RTS
     194/       0 :                     		;
     195/       0 :                     		; TTY I/O PORTS
     196/       0 :                     		;
     197/       0 : =0F4H                TTYI    EQU     0F4H            ; TTY INPUT DATA PORT
     198/       0 : =0F4H                TTYO    EQU     0F4H            ; TTY OUTPUT DATA PORT
     199/       0 : =0F5H                TTYS    EQU     0F5H            ; TTY INPUT STATUS PORT
     200/       0 : =0F5H                TTYC    EQU     0F5H            ; TTY OUTPUT CONTROL PORT
     201/       0 :                     		;
     202/       0 :                     		; USER I/O PORTS
     203/       0 :                     		;
     204/       0 : =0F6H                USCI    EQU     0F6H            ; USER INPUT DATA PORT 
     205/       0 : =0F7H                USCS    EQU     0F7H            ; USER INPUT STATUS PORT
     206/       0 : =0F6H                USCO    EQU     0F6H            ; USER OUTPUT DATA PORT     
     207/       0 : =0F7H                USCC    EQU     0F7H            ; USER OUTPUT CONTROL PORT
     208/       0 :                     		;
     209/       0 :                     		; INTERVAL TIMER CONSTANTS
     210/       0 :                     		;
     211/       0 : =0H                  CTR0S   EQU     00000000B       ; COUNTER 0 SELECT
     212/       0 : =40H                 CTR1S   EQU     01000000B       ; COUNTER 1 SELECT
     213/       0 : =80H                 CTR2S   EQU     10000000B       ; COUNTER 2 SELECT
     214/       0 : =0H                  LCTR    EQU     00000000B       ; LATCHING COUNTER
     215/       0 : =20H                 RLMB    EQU     00100000B       ; READ/LOAD MSB ONLY
     216/       0 : =10H                 RLLB    EQU     00010000B       ; READ/LOAD LSB ONLY
     217/       0 : =30H                 RLLM    EQU     00110000B       ; READ/LOAD LSB,MSB
     218/       0 : =0H                  MODE0   EQU     00000000B       ; MODE 0
     219/       0 : =2H                  MODEl   EQU     00000010B       ; MODE 1
     220/       0 : =4H                  MODE2   EQU     00000100B       ; MODE 2
     221/       0 : =6H                  MODE3   EQU     00000110B       ; MODE 3
     222/       0 : =8H                  MODE4   EQU     00001000B       ; MODE 4
     223/       0 : =0AH                 MODE5   EQU     00001010B       ; MODE 5
     224/       0 : =1H                  BCDC    EQU     00000001B       ; BCD COUNTER
     225/       0 : =7H                  B9600   EQU     7               ; 9600 BAUD RATE FACTOR
     226/       0 : =20H                 B2400   EQU     32              ; 2400 BAUD RATE FACTOR
     227/       0 : =2BAH                B0110   EQU     698             ; 110 BAUD RATE FACTOR
     228/       0 :                     		;
     229/       0 :                     		; INTERVAL TIMER (8253) I/O PORTS
     230/       0 :                     		;
     231/       0 : =0F0H                CTR0P   EQU     0F0H            ; LOAD COUNTER 0 OUTPUT COMMAND PORT
     232/       0 : =0F1H                CTR1P   EQU     0F1H            ; LOAD COUNTER 1 OUTPUT COMMAND PORT
     233/       0 : =0F2H                CTR2P   EQU     0F2H            ; LOAD COUNTER 2 OUTPUT COMMAND PORT
     234/       0 : =0F3H                ITCP    EQU     0F3H            ; INTERVAL TIMER OUTPUT COMMAND PORT
     235/       0 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     236/       0 :                     		;
     237/       0 :                     		; I/O CONTROLLER SYSTEM CONSTANTS
     238/       0 :                     		;
     239/       0 :                     		; I/O CONTROLLER PORTS
     240/       0 :                     		;
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 5 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     241/       0 : =0C0H                IOCI    EQU     0C0H            ; I/O CONTROLLER INPUT DATA (FROM DBB) PORT
     242/       0 : =0C0H                IOCO    EQU     0C0H            ; I/O CONTROLLER OUTPUT DATA (TO DBB) PORT
     243/       0 : =0C1H                IOCS    EQU     0C1H            ; I/O CONTROLLER INPUT DBB STATUS PORT
     244/       0 : =0C1H                IOCC    EQU     0C1H            ; I/O CONTROLLER OUTPUT CONTROL COMMAND PORT
     245/       0 :                     		;
     246/       0 :                     		; CRT, KEYBOARD, AND FLOPPY DISK COMMANDS
     247/       0 :                     		;
     248/       0 : =10H                 CRTC    EQU     10H             ; CRT OUTPUT DATA COMMAND
     249/       0 : =11H                 CRTS    EQU     11H             ; CRT DEVICE STATUS COMMAND     
     250/       0 : =12H                 KEYC    EQU     12H             ; KEYBOARD. INPUT DATA COMMAND     
     251/       0 : =13H                 KSTS    EQU     13H             ; KEYBOARD DEVICE STATUS COMMAND
     252/       0 : =14H                 KINT    EQU     14H             ; RESERVED
     253/       0 : =15H                 WPBC    EQU     15H             ; FLOPPY PARAMETER BLOCK TRANSFER COMMAND
     254/       0 : =16H                 WPBCC   EQU     16H             ; FLOPPY PARAMETER BLOCK(CONT) TRANSFER COMMAND
     255/       0 : =17H                 WDBC    EQU     17H             ; FLOPPY DATA BLOCK OUTPUT COMMAND
     256/       0 : =18H                 WDBCC   EQU     18H             ; RESERVED
     257/       0 : =19H                 RDBC    EQU     19H             ; FLOPPY INPUT DATA BLOCK COMMAND
     258/       0 : =1AH                 RDBCC   EQU     1AH             ; RESERVED
     259/       0 : =1BH                 RRSTS   EQU     1BH             ; FLOPPY RESULT STATUS COMMAND
     260/       0 : =1CH                 RDSTS   EQU     1CH             ; FLOPPY DEVICE STATUS COMMAND
     261/       0 :                     		;
     262/       0 :                     		; CRT, KEYBOARD, AND FLOPPY STATUS BITS
     263/       0 :                     		;
     264/       0 : =1H                  KRDY    EQU     00000001B       ; KEYBOARD READY WITH DATA
     265/       0 : =1H                  FRDY    EQU     00000001B       ; FLOPPY READY FOR DATA
     266/       0 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     267/       0 :                     		;
     268/       0 :                     		; PARALLEL I/O SYSTEM CONSTANTS
     269/       0 :                     		;
     270/       0 :                     		; PARALLEL I/O PORTS
     271/       0 :                     		;
     272/       0 : =0F8H                PIOI    EQU     0F8H            ; PARALLEL I/O INPUT DATA (FROM DBB) PORT
     273/       0 : =0F8H                PIOO    EQU     0F8H            ; PARALLEL I/O OUTPUT DATA (TO DBB) PORT
     274/       0 : =0F9H                PIOS    EQU     0F9H            ; PARALLEL I/O INPUT DBB STATUS PORT
     275/       0 : =0F9H                PIOC    EQU     0F9H            ; PARALLEL I/O OUTPUT CONTROL COMMAND PORT
     276/       0 :                     		;
     277/       0 :                     		; PTR, PTP, LPT AND UPP COMMANDS
     278/       0 :                     		;
     279/       0 : =10H                 RDRC    EQU     010H            ; READER DATA TRANSFER COMMAND
     280/       0 : =60H                 PTRREV  EQU     01100000B       ; READER REVERSE DIRECTION 1 FRAME OPTION
     281/       0 : =40H                 PTRADV  EQU     01000000B       ; READER ADVANCE DIRECTION 1 FRAME OPTION
     282/       0 : =11H                 RSTC    EQU     011H            ; READER DEVICE STATUS COMMAND
     283/       0 : =12H                 PUNC    EQU     012H            ; PUNCH DATA TRANSFER COMMAND
     284/       0 : =13H                 PSTC    EQU     013H            ; PUNCH DEVICE STATUS COMMAND
     285/       0 : =14H                 LPTC    EQU     014H            ; LINE PRINTER DATA TRANSFER COMMAND
     286/       0 : =15H                 LSTC    EQU     015H            ; LINE PRINTER STATUS COMMAND
     287/       0 : =16H                 WPPC    EQU     016H            ; WRITE TO UPP COMMAND
     288/       0 : =17H                 RPPC    EQU     017H            ; READ FROM UPP COMMAND
     289/       0 : =18H                 RPSTC   EQU     018H            ; READ UPP STATUS COMMAND
     290/       0 :                     		;
     291/       0 :                     		; LPT, PTR AND PTP STATUS BITS
     292/       0 :                     		;
     293/       0 : =1H                  LPTRY   EQU    00000001B        ; LPT READY
     294/       0 : =1H                  PTRDY   EQU    00000001B        ; PTR READY WITH DATA
     295/       0 : =1H                  PTPRY   EQU    00000001B        ; PTP READY FOR DATA
     296/       0 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     297/       0 :                     		;
     298/       0 :                     		; PARALLEL I/O AND I/O CONTROLLER SYSTEM COMMANDS
     299/       0 :                     		;
     300/       0 : =0H                  PACIFY  EQU     00H             ; REINITIALIZE SYSTEM
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 6 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     301/       0 : =1H                  ERESET  EQU     01H             ; ERROR RESET    
     302/       0 : =2H                  SYSTAT  EQU     02H             ; SYSTEM STATUS     
     303/       0 : =3H                  DSTAT   EQU     03H             ; DEVICE STATUS     
     304/       0 : =4H                  SRQDAK  EQU     04H             ; DEVICE SERVICE REQUEST ACK     
     305/       0 : =5H                  SRQACK  EQU     05H             ; SYSTEM SERVICE REQUEST ACK     
     306/       0 : =6H                  SRQ     EQU     06H             ; SERVICE REQUEST     
     307/       0 :                     		;
     308/       0 :                     		; PARALLEL I/O AND I/O CONTROLLER DIAGNOSTIC COMMANDS
     309/       0 :                     		;
     310/       0 : =7H                  DECHO   EQU     07H             ; DATA ECHO TEST
     311/       0 : =8H                  CSMEM   EQU     08H             ; CHECKSUM MEMORY
     312/       0 : =9H                  TRAM    EQU     09H             ; TEST RAM
     313/       0 : =0AH                 SINT    EQU     0AH             ; SYSTEM INTERRUPT CONTROL
     314/       0 :                     		;
     315/       0 :                     		;
     316/       0 :                     		; PARALLEL I/O AND I/O CONTROLLER STATUS CONSTANTS
     317/       0 :                     		;
     318/       0 : =1H                  OBF     EQU     00000001B       ; SLAVE OUTPUT BUFFER IS FULL
     319/       0 : =2H                  IBF     EQU     00000010B       ; SLAVE INPUT BUFFER IS FULL
     320/       0 : =4H                  F0      EQU     00000100B       ; FLAG 0 - SLAVE IS BUSY, MASTER IS LOCKED OUT
     321/       0 : =8H                  CNOTD   EQU     00001000B       ; DBB CONTAINS CONTROL INFO NOT DATA
     322/       0 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     323/       0 :                     		;
     324/       0 :                     		; FDCC (FLOPPY DISKETTE CHANNEL COMMAND) CONSTANTS
     325/       0 :                     		;
     326/       0 : =4H                  OPCPL   EQU     4               ; DISK COMPLETION STATUS
     327/       0 : =79H                 LOWW    EQU     79H             ; LOW(IOPB)
     328/       0 : =7AH                 HI      EQU     7AH             ; HIGH(IOPB)
     329/       0 : =7BH                 RSTS    EQU     7BH             ; DISK RESULT STATUS INPUT PORT
     330/       0 : =78H                 DSTS    EQU     78H             ; DISK STATUS INPUT PORT
     331/       0 : =3000H               TRK0    EQU     3000H           ; FIRST ADDRESS OF DISK BOOTSTRAP
     332/       0 :                     		;
     333/       0 :                     		;       CONDITIONAL ASSEMBLY SWITCHES
     334/       0 :                     		;
     335/       0 : =0H                  MFALSE   EQU     0
     336/       0 : =0FFFFFFFFH          MTRUE    EQU     ~ MFALSE
     337/       0 : =0FFH                HMSK    EQU     0FFH            ; SAFE MOVE OF 16 BITS INTO 8 8 BIT REGISTER
     338/       0 :                     		;
     339/       0 :                     		; GLOBAL CONSTANTS
     340/       0 :                     		;
     341/       0 : =70H                 ONEMS   EQU     112             ; 1 MILLISECOND TIME CONSTANT
     342/       0 : =0FAH                TOUT    EQU     250             ; 250 MS. COUNTER FOR READER TIMEOUT
     343/       0 : =0DH                 CR      EQU     0DH             ; ASCII VALUE OF CARRIAGE RETURN
     344/       0 : =0AH                 LF      EQU     0AH             ; ASCII VALUE OF LINE FEED
     345/       0 : =3H                  ETX     EQU     03H             ; MONITOR 8REAK CHARACTER (CONTROL C)
     346/       0 :                     		;
     347/       0 :                     		; MONITOR I/O STATUS BYTE MASKS AND VALUES
     348/       0 :                     		;
     349/       0 : =0FCH                CMSK    EQU     11111100B       ; MASK FOR LOCAL CONSOLE I/O
     350/       0 : =3H                  NCMSK   EQU     00000011B       ; ~ CMSK
     351/       0 : =0F3H                RMSK    EQU     11110011B       ; MASK FOR READER INPUT
     352/       0 : =0CH                 NRMSK    EQU    00001100B       ; ~ RMSK
     353/       0 : =0CFH                PMSK    EQU     11001111B       ; MASK FOR PUNCH OUTPUT
     354/       0 : =30H                 NPMSK    EQU    00110000B       ; ~ PMSK
     355/       0 : =3FH                 LMSK    EQU     00111111B       ; MASK FOR LIST OUTPUT
     356/       0 :                     		;-----
     357/       0 : =0H                  CTTY    EQU     00000000B       ; LOCAL CONSOLE TTY
     358/       0 : =1H                  CCRT    EQU     00000001B       ; LOCAL CONSOLE CRT
     359/       0 : =2H                  BATCH   EQU     00000010B       ; BATCH MODE:
     360/       0 :                     		                                ; CONSOLE INPUT READER, CONSOLE OUTPUT 
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 7 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     361/       0 : =3H                  CUSE    EQU     00000011B       ; USER DEFINED LOCAL CONSOLE I/O
     362/       0 :                     		;-----
     363/       0 : =0H                  RTTY    EQU     00000000B       ; READER = TTY
     364/       0 : =4H                  RPTR    EQU     00000100B       ; READER = PTR
     365/       0 : =8H                  RUSE1   EQU     00001000B       ; USER DEFINED READER (1)
     366/       0 : =0CH                 RUSE2   EQU     00001100B       ; USER DEFINED READER (2)
     367/       0 :                     		;-----
     368/       0 : =0H                  PTTY    EQU     00000000B       ; PUNCH = TTY
     369/       0 : =10H                 PPTP    EQU     00010000B       ; PUNCH = PTP
     370/       0 : =20H                 PUSE1   EQU     00100000B       ; USER DEFINED PUNCH (1)
     371/       0 : =30H                 PUSE2   EQU     00110000B       ; USER DEFINED PUNCH (2)
     372/       0 :                     		;-----
     373/       0 : =0H                  LTTY    EQU     00000000B       ; LIST = TTY
     374/       0 : =40H                 LCRT    EQU     01000000B       ; LIST = CRT
     375/       0 : =80H                 LLPT    EQU     10000000B       ; LIST = LPT
     376/       0 : =0C0H                LUSE    EQU     11000000B       ; USER DEFINED LIST
     377/       0 :                     		;
     378/       0 :                     		; LOCAL I/O SUBSYSTEM INTERRUPT PORTS
     379/       0 :                     		;
     380/       0 : =0F8H                IICP0   EQU     0F8H            ; INITIALIZATION COMMAND PORT 0
     381/       0 : =0FAH                IICP1   EQU     0FAH            ; INITIALIZATION COMMAND PORT 1
     382/       0 : =0FBH                IOCP0   EQU     0FBH            ; OPERATION COMMAND PORT 0
     383/       0 : =0FAH                IOCP1   EQU     0FAH            ; OPERATION COMMAND PORT 1
     384/       0 :                     		;
     385/       0 :                     		; LOCAL INTERRUPT STATUS AND CONTROL BITS
     386/       0 :                     		;
     387/       0 : =1H                  ITTYO   EQU     00000001B       ; TTY OUTPUT INTERRUPT
     388/       0 : =2H                  ITTYI   EQU     00000010B       ; TTY INPUT INTERRUPT
     389/       0 : =4H                  IPTP    EQU     00000100B       ; PTP OUTPUT INTERRUPT
     390/       0 : =8H                  IPTR    EQU     00001000B       ; PTR INPUT INTERRUPT
     391/       0 : =10H                 ICRTO   EQU     00010000B       ; CRT OUTPUT INTERRUPT
     392/       0 : =20H                 ICRTI   EQU     00100000B       ; CRT INPUT INTERRUPT
     393/       0 : =40H                 ILPT    EQU     01000000B       ; LPT OUTPUT INTERRUPT
     394/       0 : =80H                 MENB    EQU     10000000B       ; ENABLE MONITOR INTERRUPTS EXCEPT LEVEL 7
     395/       0 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     396/       0 :                     		;
     397/       0 :                     		; BOOTSTRAP CONSTANTS
     398/       0 :                     		;
     399/       0 : =0E7H                FSTOP   EQU     0E7H            ; FULL SYSTEM TOP OF MEMORY ADDRESS
     400/       0 : =0F7H                FSTP    EQU     0F7H            ; FULL SYSTEM TOP PAGE ADDRESS
     401/       0 : =4H                  FDOC    EQU     004H            ; FLOPPY DISK OPERATION COMPLETE
     402/       0 : =7FH                 ACHRM   EQU     07FH            ; ASCII CHARACTER MASK
     403/       0 : =0FFH                ITIMO   EQU     0FFH            ; IOC TIMEOUT CONSTANT
     404/       0 : =0FFH                LBMK    EQU     0FFH            ; LOWER BYTE MASK
     405/       0 : =41H                 ICFG    EQU     041H            ; CONSOLE CONFIGURATION STATUS
     406/       0 : =1H                  ICNP    EQU     001H            ; INTEGRATED CONSOLE NOT PRESENT STATUS
     407/       0 : =40H                 LSTE    EQU     040H            ; LIST DEVICE VALUE FOR CONSOLE
     408/       0 : =4CDH                RTCC    EQU     1229            ; REAL TIME CLOCK IMS CONSTANT
     409/       0 : =8H                  DPRNT   EQU     08H             ; DISK READY MASK
     410/       0 : =0D00H               TRKL    EQU     26*128          ; TRACK LENGTH
     411/       0 : =4H                  PARML   EQU     4               ; PARAMETER LENGTH - 1
     412/       0 : =0F809H              COP     EQU     0F809H          ; ENTRY�POINT FOR CONSOLE OUT
     413/       0 : =0F821H              IOCDP1  EQU     0F821H          ; ENTRY POINT FOR IOC DRIVER 1
     414/       0 : =0F844H              IOCDP2  EQU     0F844H          ; ENTRY POINT FOR IOC DRIVER 2
     415/       0 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     416/       0 :                     		;
     417/       0 :                     		; PAGE 0 DEDICATED RAM LOCATIONS, INITIALIZED BY BOOTSTRAP PROM CODE.
     418/       0 :                     		;
     419/       0 :                             ORG     0
     420/       0 :                     		RESET:
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 8 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     421/       0 :                             DS      3               ; TRAP TO MONITOR RESTART
     422/       3 :                     		IOBYT:
     423/       3 :                             DS      1               ; I/O SYSTEM STATUS BYTE
     424/       4 :                     		MEMTOP:
     425/       4 :                             DS      2               ; TOP OF RAM, ONLY H SAVED
     426/       6 :                     		INITIO:
     427/       6 :                             DS      1               ; INITIAL I/O CONFIGURATION
     428/       7 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     429/       7 :                     		;
     430/       7 :                     		; BOOTSTRAP PROM CODE
     431/       7 :                     		;
     432/       7 :                     		;BBASE   SET     0E800H
     433/       7 : =0E800H              BBASE   EQU     0E800H
     434/    E800 :                             ORG     BBASE
     435/    E800 : C3 06 E8                    JMP     BS0             ; BRANCH AROUND DATE CODE BYTE
     436/    E803 :                     		INIT:
     437/    E803 : 00                  	        DB      0               ; INITIALLY
     438/    E804 :                     		                                ; CONSOLE = TTY,
     439/    E804 :                     		                                ; READER = TTY,
     440/    E804 :                     		                                ; PUNCH = TTY,
     441/    E804 :                     		                                ; LIST = TTY
     442/    E804 : 03 01                       DW      DATC            ; DATE STAMP FOR BOOTSTRAP PROM
     443/    E806 :                     		;
     444/    E806 :                     		; FUNCTIONS:
     445/    E806 :                     		;
     446/    E806 :                     		;       A. INITIALIZE INTERRUPT SYSTEM AND REAL TIME CLOCK
     447/    E806 :                     		;               0. INITIALIZE PORT 0FFH (CPUC)
     448/    E806 :                     		;               1. PROGRAM SYSTEM INTERRUPTS (8259)
     449/    E806 :                     		;               2. MASK ALL SYSTEM INTERRUPTS BUT TRAP LOGIC
     450/    E806 :                     		;               3. PROGRAM I/O SUBSYSTEM INTERRUPTS (8259)
     451/    E806 :                     		;               4. MASK ALL I/O SUBSYSTEM INTERRUPTS
     452/    E806 :                     		;               5. PROGRAM REAL TIME CLOCK
     453/    E806 :                     		;               
     454/    E806 :                     		BS0:
     455/    E806 : F3                  	        DI                      ; DISABLE INTERRUPT SYSTEM
     456/    E807 : 3E 02                       MVI     A,MOVBOT        ; TURN ON RAM (ROM WILL NOW RESPOND ONLY TO ADDRESS E800H)
     457/    E809 : D3 FF                       OUT     CPUC
     458/    E80B : 3E 01                       MVI     A,BOVROF        ; TURN OFF BUS OVERRIDE
     459/    E80D : D3 FF                       OUT     CPUC
     460/    E80F : 3E 05                       MVI     A,ENABL         ; PSEUDO ENABLE OF INTERRUPTS
     461/    E811 : D3 FF                       OUT     CPUC
     462/    E813 : 3E 08                       MVI     A,ENAXP         ; ENABLE AUXILIARY PROM
     463/    E815 : D3 FF                       OUT     CPUC
     464/    E817 : 3E 12                       MVI     A,ICW1          ; OUTPUT INITIALIZATION COMMAND WORD 1
     465/    E819 : D3 FD                       OUT     SICP0           ;       TO SYSTEM 8259
     466/    E81B : D3 F8                       OUT     IICP0           ;       TO I/O 8259
     467/    E81D : 3E 00                       MVI     A,ICW2          ; OUTPUT INITIALIZATION COMMAND WORD 2
     468/    E81F : D3 FC                       OUT     SICP1           ;       TO SYSTEM 8259
     469/    E821 : D3 FA                       OUT     IICP1           ;       TO I/O 8259
     470/    E823 : 3E FE                       MVI     A,~ INT0      ; INITIALIZE MASK REGISTER
     471/    E825 : D3 FC                       OUT     SOCP1           ;       FOR SYSTEM 8259
     472/    E827 : 3E FF                       MVI     A,~ INTA      ; INITIALIZE MASK REGISTER
     473/    E829 : D3 FA                       OUT     IOCP1           ;       FOR I/O 8259
     474/    E82B : 3E B6                       MVI     A,CTR2S | MODE3 | RLLM ; INITIALIZE 1MS REAL TIME CLOCK
     475/    E82D : D3 F3                       OUT     ITCP
     476/    E82F : 21 CD 04                    LXI     H,RTCC
     477/    E832 : 7D                  	        MOV     A,L
     478/    E833 : D3 F2                       OUT     CTR2P
     479/    E835 : 7C                  	        MOV     A,H
     480/    E836 : D3 F2                       OUT     CTR2P
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 9 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     481/    E838 :                     		;
     482/    E838 :                     		;       B.      INITIALIZE RAM.
     483/    E838 :                     		;               1. COMPUTE SIZE OF RAM MEMORY.
     484/    E838 :                     		;               2. SET UP DEDICATED MEMORY LOCATIONS
     485/    E838 :                     		;                       USER I/O ENTRY POINTS (TOP OF MEMORY)
     486/    E838 :                     		;                       EXIT TEMPLATE
     487/    E838 :                     		;                       USER REGISTERS
     488/    E838 :                     		;                       USER INTERRUPT MASK
     489/    E838 :                     		;                       USER INTERRUPT MASK
     490/    E838 :                     		;                       USER STACK
     491/    E838 :                     		;                       MONITOR STACK
     492/    E838 :                     		;                       RESTART ROUTINE JUMP ADDRESS
     493/    E838 :                     		;
     494/    E838 : 21 00 00                    LXI     H,0             ; INITIAL VALUE H:=0, L:=0
     495/    E83B :                     		BS1:
     496/    E83B : 24                  	        INR     H               ; INCREMENT BY 256 BYTE PAGES, I.E.100H,200H;..,F800H
     497/    E83C : 7E                  	        MOV     A,M             ; FETCH CONTENTS OF MEMORY
     498/    E83D : 2F                  	        CMA                     ; INVERT IT
     499/    E83E : 77                  	        MOV     M,A             ; ATTEMPT TO WRITE IT BACK INTO MEMORY     
     500/    E83F : BE                  	        CMP     M               ; IS LOCATION READ/WRITE, I.E. EXISTING RAM
     501/    E840 : 2F                  	        CMA                     ; INVERT AGAIN BACK TO ORIGINAL VALUE
     502/    E841 : 77                  	        MOV     M,A             ; WRITE ORIGINAL DATA VALUE BACK IN
     503/    E842 : CA 3B E8                    JZ      BS1             ; YES, CONTINUE (I.E. STILL CONTIGUOUS RAM)
     504/    E845 : 2B                  	        DCX     H               ; OTHERWISE, IT'S LAST ADDRESS IN RAM
     505/    E846 :                     		                                ;   UP TO 0E7FFH
     506/    E846 : 3E E7                       MVI     A,FSTOP         ; LOAD FULL-SYSTEM-UP-TO-BOOT-ROM PAGE ADDRESS
     507/    E848 : BC                  	        CMP     H               ; TEST FOR FULL-SYSTEM-UP-TO-BOOT-ROM
     508/    E849 : C2 62 E8                    JNZ     BS2             ; JUMP IF LESS THAN 0E7FFH IN RAM
     509/    E84C :                     		                                ; AT THIS POINT WE HAVE CONTIGUOUS RAM UP TO
     510/    E84C :                     		                                ;   0E7FFH; SKIP OVER 0E800-EFFFH WHICH IS
     511/    E84C :                     		                                ;   SHADOWED BY BOOT ROM AND THEREFORE
     512/    E84C :                     		                                ;   INACCESSIBLE; CONTINUE TESTING RAM FROM
     513/    E84C :                     		                                ;   0F000H
     514/    E84C : 21 00 EF                    LXI     H,0EF00H
     515/    E84F :                     		BS1X:
     516/    E84F : 24                  	        INR     H               ; INCREMENT BY 256 BYTE PAGES
     517/    E850 : 7E                  	        MOV     A,M             ; FETCH CONTENTS OF MEMORY
     518/    E851 : 2F                  	        CMA                     ; INVERT IT
     519/    E852 : 77                  	        MOV     M,A             ; ATTEMPT TO WRITE IT BACK INTO MEMORY
     520/    E853 : BE                  	        CMP     M               ; IS LOCATION READ/WRITE, I.E. EXISTING RAM
     521/    E854 : 2F                  	        CMA                     ; INVERT IT BACK AGAIN TO ORIGINAL VALUE
     522/    E855 : 77                  	        MOV     M,A             ; WRITE ORIGINAL DATA VALUE BACK IN
     523/    E856 : CA 4F E8                    JZ      BS1X            ; YES, CONTINUE (I.E. STILL CONTIGUOUS RAM)
     524/    E859 : 2B                  	        DCX     H               ; OTHERWISE HL POINT TO LAST CONTIGUOUS
     525/    E85A :                     		                                ;   BYTE OF RAM
     526/    E85A : 3E F0                       MVI     A,0F0H 
     527/    E85C : BC                  	        CMP     H               ; TEST IF H > 0F0H (I.E. THAT TOP OF MEMORY
     528/    E85D :                     		                                ;   IS AT LEAST 512 BYTES ABOVE SHADOW BOOT
     529/    E85D :                     		                                ;   ROM BECAUSE WE NEED SPACE FOR MONITOR
     530/    E85D :                     		                                ;   WORK TEMPLATE)
     531/    E85D : DA 62 E8                    JC      BS2             ; IF H > 0F0H THEN CARRY=1 AND HL CONTAIN
     532/    E860 :                     		                                ;   TRUE TOP OF MEMORY
     533/    E860 : 26 E7                       MVI     H,FSTOP         ; OTHERWISE H <= 0F0H THEN CARRY=0, SO
     534/    E862 :                     		                                ;   SET TOP OF MEMORY TO 0E7FFH, WHICH IS
     535/    E862 :                     		                                ;   JUST BELOW THE START OF SHADOW BOOT ROM
     536/    E862 :                     		BS2:
     537/    E862 : 22 04 00                    SHLD    MEMTOP          ; STORE TOP OF MEMORY
     538/    E865 : 01 C8 EA                    LXI     B,TOS           ; MOVE EXIT TEMPLATE TO RAM
     539/    E868 : 69                  	        MOV     L,C
     540/    E869 : F9                  	        SPHL                    ; SET MONITOR'S STACK POINTER
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 10 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     541/    E86A :                     		BS3:
     542/    E86A : 0A                  	        LDAX    B 
     543/    E86B : 77                  	        MOV     M,A
     544/    E86C : 0C                  	        INR     C               ; MOVE BOTH POINTERS
     545/    E86D : 2C                  	        INR     L   
     546/    E86E : C2 6A E8                    JNZ     BS3             ; END ON PAGE BOUNDARY
     547/    E871 : 2E D1                       MVI     L,SLOC & HMSK ; SET UP INITIAL VALUE FOR USER STACK
     548/    E873 : 74                  	        MOV     M,H             ; LOWER HALF OF STACK POINT-ER IS KNOWN
     549/    E874 : 35                  	        DCR     M               ; MERELY SET UPPER HALF
     550/    E875 :                     		                                ; TRAP TO MONITOR (AT LOCATIONS 0,1,2)
     551/    E875 :                     		;        MVI     A, (JMP RESTART)
     552/    E875 : 3E C3                       MVI     A, 0C3H
     553/    E877 : 32 00 00                    STA     RESET
     554/    E87A : 21 D4 FE                    LXI     H,RESTART       ; SET UP RESTART 0 FOR BREAKPOINT
     555/    E87D : 22 01 00                    SHLD    RESET+1         ;   LOGIC
     556/    E880 :                     		;
     557/    E880 :                     		;       C.      PROGRAM I/O DEVICES.
     558/    E880 :                     		;               1. BAUD RATE GENERATOR FOR CRT
     559/    E880 :                     		;               2. USART FOR CRT
     560/    E880 :                     		;               3. BAUD RATE GENERATOR FOR TTY
     561/    E880 :                     		;               4. USART FOR TTY
     562/    E880 :                     		;
     563/    E880 : 3E 76                       MVI     A,CTR1S | MODE3 | RLLM
     564/    E882 : D3 F3                       OUT     ITCP
     565/    E884 : 21 20 00                    LXI     H,B2400         ; CRT BAUD RATE
     566/    E887 : 7D                  	        MOV     A,L
     567/    E888 : D3 F1                       OUT     CTR1P
     568/    E88A : 7C                  	        MOV     A,H
     569/    E88B : D3 F1                       OUT     CTR1P
     570/    E88D : 3E CE                       MVI     A,ST2 | R16X | CL8
     571/    E88F : D3 F7                       OUT     USCC
     572/    E891 : 3E 27                       MVI     A,TXEN | DTR | RXEN | RTS
     573/    E893 : D3 F7                       OUT     USCC
     574/    E895 : 3E 36                       MVI     A,CTR0S | MODE3 | RLLM
     575/    E897 : D3 F3                       OUT     ITCP
     576/    E899 : 21 BA 02                    LXI     H,B0110         ; TTY BAUD RATE
     577/    E89C : 7D                  	        MOV     A,L
     578/    E89D : D3 F0                       OUT     CTR0P
     579/    E89F : 7C                  	        MOV     A,H
     580/    E8A0 : D3 F0                       OUT     CTR0P
     581/    E8A2 : 3E CE                       MVI     A,ST2 | R16X | CL8
     582/    E8A4 : D3 F5                       OUT     TTYC
     583/    E8A6 : 3E 25                       MVI     A,TXEN | RXEN | RTS
     584/    E8A8 : D3 F5                       OUT     TTYC
     585/    E8AA :                     		;
     586/    E8AA :                     		;       D.      DETERMINE IF INTEGRATED CONSOLE PRESENT
     587/    E8AA :                     		;
     588/    E8AA : 2E FF                       MVI     L,ITIMO         ; LOAD TIMEOUT CONSTANT
     589/    E8AC :                     		BS4:
     590/    E8AC : DB C1                       IN      IOCS            ; 
     591/    E8AE : E6 07                       ANI     IBF | OBF | F0; MASK OFF STATUS FLAGS
     592/    E8B0 :                     		                                ; AND TEST FOR SLAVE PRESENCE
     593/    E8B0 : CA C0 E8                    JZ      BS5             ; JUMP IF INTEGRATED CONSOLE PRESENT
     594/    E8B3 : CD 23 EA                    CALL    BDLY            ; DELAY 1 MS FOR ANY RESETS TO COMPLETE
     595/    E8B6 : CD 23 EA                    CALL    BDLY            ; DELAY 1 MS. 
     596/    E8B9 : 2D                  	        DCR     L               ; DECREMENT TIMER
     597/    E8BA : CA E2 E8                    JZ      BS8             ; JUMP IF TIME EXPIRED
     598/    E8BD : C3 AC E8                    JMP     BS4             ; OTHERWISE TRY AGAIN
     599/    E8C0 :                     		BS5:
     600/    E8C0 : 3E 11                       MVI     A,CRTS          ; LOAD CRT DEVICE STATUS COMMAND
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 11 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     601/    E8C2 : D3 C1                       OUT     IOCC            ; OUTPUT COMMAND TO IOC CONTROL PORT
     602/    E8C4 : 2E FF                       MVI     L,ITIMO         ; LOAD TIMEOUT CONSTANT
     603/    E8C6 :                     		BS6:
     604/    E8C6 : DB C1                       IN      IOCS            ; INPUT DBB STATUS
     605/    E8C8 : E6 07                       ANI     IBF | OBF | F0; MASK OFF STATUS FLAGS
     606/    E8CA : FE 01                       CPI     OBF             ; TEST FOR SLAVE DONE; SOMETHING FOR THE MASTER
     607/    E8CC : CA DC E8                    JZ      BS7             ; JUMP IF DONE
     608/    E8CF : CD 23 EA                    CALL    BDLY            ; DELAY 1 MS FOR ANY RESETS TO COMPLETE
     609/    E8D2 : CD 23 EA                    CALL    BDLY            ; DELAY 1 MS.
     610/    E8D5 : 2D                  	        DCR     L               ; DECREMENT TIMER
     611/    E8D6 : CA E2 E8                    JZ      BS8             ; JUMP IF TIME EXPIRED
     612/    E8D9 : C3 C6 E8                    JMP     BS6             ; OTHERWISE, TRY AGAIN
     613/    E8DC :                     		BS7:
     614/    E8DC : DB C0                       IN      IOCI            ; INPUT CRT DEVICE STATUS FROM DBB
     615/    E8DE : 0F                  	        RRC                     ; TEST FOR CRT READY
     616/    E8DF : DA EA E8                    JC      BS9             ; JUMP IF READY (INTEGRATED CRT PRESENT)
     617/    E8E2 :                     		BS8:                            ; INTEGRATED CRT NOT PRESENT/READY SO RECORD THIS FACT
     618/    E8E2 : 2A 04 00                    LHLD    MEMTOP          ; LOAD TOP OF MEMORY PAGE ADDRESS 
     619/    E8E5 : 2E CC                       MVI     L,(BLOC+1) & LBMK ; LOAD CONFIGURATION ADDRESS
     620/    E8E7 : 3E 01                       MVI     A,ICNP          ; LOAD INTEGRATED CONSOLE NOT PRESENT
     621/    E8E9 : 77                  	        MOV     M,A             ; STORE IN CONFIGURATION BYTE IN EXIT TEMPLATE
     622/    E8EA :                     		BS9:
     623/    E8EA :                     		;
     624/    E8EA :                     		;       E.      LOAD ISIS.T0 IF DISKETTE 0 IS READY
     625/    E8EA :                     		;
     626/    E8EA : AF                  	        XRA     A
     627/    E8EB : 2F                  	        CMA                     ; A-REG = 0FFH
     628/    E8EC : F5                  	        PUSH    PSW             ; THREE-VALUED FLAG:
     629/    E8ED :                     		                                ;   0FFH IF NEITHER FDCC NOR ISD SELECTED
     630/    E8ED :                     		                                ;   00H IF FDCC SELECTED
     631/    E8ED :                     		                                ;   01H IF ISD SELECTED
     632/    E8ED : DB 78                       IN      DSTS            ; SAMPLE FDCC STATUS
     633/    E8EF :                     		                                ;   STATUS = 00H IF NO CONTROLLER PRESENT
     634/    E8EF : E6 08                       ANI     00001000B       ; IS FDCC CONTROLLER PRESENT?
     635/    E8F1 : CA 20 E9                    JZ      BS11            ; JUMP TO ISD SECTION IF FDCC NOT PRESENT
     636/    E8F4 : DB 78                       IN      DSTS            ; SAMPLE FDCC STATUS AGAIN
     637/    E8F6 : 0F                  	        RRC                     ; DRIVE 0 READY STATUS ROTATED INTO CARRY BIT
     638/    E8F7 : D2 8E E9                    JNC     BSX1            ; JUMP TO MONITOR IF FDCC CONTROLLER PRESENT
     639/    E8FA :                     		                                ;   AND DRIVE 0 NOT READY
     640/    E8FA :                     		                                ; THE FOLLOWING CODE IS USED TO WRITE THE DISK IOPB TO
     641/    E8FA :                     		                                ; PROCESSOR MEMORY SO THAT IF ICE IS BEING USED TO DEBUG
     642/    E8FA :                     		                                ; THE BOOT/MONITOR, THE DISK CONTROLLER CAN ACCESS THE IOPB
     643/    E8FA : 21 00 10                    LXI     H,1000H         ; LOAD POINTER TO DESTINATION MEMORY
     644/    E8FD : 11 34 EA                    LXI     D,IOPB          ; LOAD POINTER TO SOURCE MEMORY FOR IOPB
     645/    E900 : 06 07                       MVI     B,7             ; LOAD IOPB LENGTH COUNT
     646/    E902 :                     		MLP:
     647/    E902 : 1A                  	        LDAX    D               ; LOAD BYTE OF IOPB
     648/    E903 : 77                  	        MOV     M,A             ; MOVE TO MEMORY
     649/    E904 : 23                  	        INX     H               ; INCREMENT IOPB POINTER
     650/    E905 : 13                  	        INX     D               ; INCREMENT MEMORY POINTER
     651/    E906 : 05                  	        DCR     B               ; DECREMENT IOPB LENGTH COUNT
     652/    E907 : C2 02 E9                    JNZ     MLP             ; CONTINUE UNTIL ALL OF IOPB MOVED
     653/    E90A : 21 00 10                    LXI     H,1000H         ; RELOAD POINTER TO IOPB
     654/    E90D : 7D                  	        MOV     A,L             ; A CONTAINS LSB OF IOPB ADDRESS
     655/    E90E : D3 79                       OUT     LOWW            ; LOW (IOPB)
     656/    E910 : 7C                  	        MOV     A,H             ; A CONTAINS MSB OF IOPB ADDRESS
     657/    E911 : D3 7A                       OUT     HI              ; HIGH(IOPB), START DISK I/O
     658/    E913 :                     		BS10:
     659/    E913 : DB 78                       IN      DSTS            ; WAIT FOR FDCC TO COMPLETE
     660/    E915 : E6 04                       ANI     OPCPL           ; TEST FOR DISK COMPLETION
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 12 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     661/    E917 : CA 13 E9                    JZ      BS10
     662/    E91A : F1                  	        POP     PSW             ; GET READY TO SET FLAG TO NEW VALUE
     663/    E91B : AF                  	        XRA     A               ; SET A TO ZERO TO INDICATE DRIVE OTHER THAN INTEGRATED
     664/    E91C :                     		                                ; FLOPPY WAS ACCESSED CORRECTLY
     665/    E91C : F5                  	        PUSH    PSW             ; SAVE ON STACK
     666/    E91D : C3 8E E9                    JMP     BSX1            ; BYPASS INTEGRATED FLOPPY BOOT
     667/    E920 :                     		;
     668/    E920 :                     		; LOAD ISIS.T0 FROM INTEGRATED DISK IF AVAILABLE
     669/    E920 :                     		;
     670/    E920 :                     		BS11:
     671/    E920 : 2A 04 00                    LHLD    MEMTOP          ; LOAD TOP OF MEMORY PAGE ADDRESS
     672/    E923 : 2E CC                       MVI     L,(BLOC+1) & LBMK ; LOAD CONFIGURATION ADDRESS
     673/    E925 : 7E                  	        MOV     A,M
     674/    E926 : 0F                  	        RRC                     ; TEST FOR INTEGRATED CONSOLE PRESENT
     675/    E927 : DA 8E E9                    JC      BSX1            ; JUMP IF IOC NOT PRESENT OR FUNCTIONAL
     676/    E92A : 06 1C                       MVI     B,RDSTS         ; LOAD FLOPPY DEVICE STATUS COMMAND
     677/    E92C : CD 21 F8                    CALL    IOCDP1          ; READ STATUS FROM I/O CONTROLLER
     678/    E92F : E6 08                       ANI     DPRNT           ; TEST FOR DRIVE PRESENT
     679/    E931 : CA 8E E9                    JZ      BSX1            ; JUMP IF NOT PRESENT
     680/    E934 : 06 1C                       MVI     B,RDSTS         ; LOAD FLOPPY DEVICE STATUS COMMAND
     681/    E936 : CD 21 F8                    CALL    IOCDP1          ; READ STATUS FROM I/O CONTROLLER
     682/    E939 :                     		                                ; SECOND STATUS READ USED TO INSURE DRIVE READY
     683/    E939 : 0F                  	        RRC                     ; TEST FOR DRIVE READY     
     684/    E93A : D2 8E E9                    JNC     BSX1            ; JUMP IF DRIVE NOT READY
     685/    E93D : F1                  	        POP     PSW             ; UNLOAD STACK
     686/    E93E : AF                  	        XRA     A               ; SET A TO 1 TO INDICATE
     687/    E93F : 3C                  	        INR     A               ; INTEGRATED FLOPPY WAS ACCESSED
     688/    E940 : F5                  	        PUSH    PSW             ; SAVE ON STACK
     689/    E941 : 21 34 EA                    LXI     H,IOPB          ; LOAD POINTER TO IOPB
     690/    E944 : 06 15                       MVI     B,WPBC          ; LOAD WRITE IOPB COMMAND
     691/    E946 : 4E                  	        MOV     C,M             ; LOAD FIRST BYTE OF IOPB
     692/    E947 : CD 44 F8                    CALL    IOCDP2          ; SEND BYTE TO IOC 
     693/    E94A : 1E 04                       MVI     E,PARML         ; LOAD IOPB LENGTH REMAINING
     694/    E94C : 06 16                       MVI     B,WPBCC         ; LOAD WRITE IOPB CONTINUE COMMAND
     695/    E94E :                     		BS12:
     696/    E94E : 23                  	        INX     H               ; MOVE POINTER TO NEXT BYTE OF IOPB
     697/    E94F : 4E                  	        MOV     C,M             ; MOVE TO C
     698/    E950 : CD 44 F8                    CALL    IOCDP2          ; SEND TO IOC 
     699/    E953 : 1D                  	        DCR     E               ; DECREMENT IOPB LENGTH
     700/    E954 : C2 4E E9                    JNZ     BS12            ; CONTINUE UNTIL ALL DATA TRANSMITTED
     701/    E957 : 06 1C                       MVI     B,RDSTS         ; LOAD DEVICE STATUS COMMAND
     702/    E959 :                     		BS13:
     703/    E959 : CD 21 F8                    CALL    IOCDP1          ; READ STATUS FROM IOC 
     704/    E95C : E6 04                       ANI     OPCPL           ; TEST FOR OPERATION COMPLETE
     705/    E95E : CA 59 E9                    JZ      BS13            ; LOOP UNTIL DONE
     706/    E961 : 06 1B                       MVI     B,RRSTS         ; LOAD RESULT STATUS COMMAND
     707/    E963 : CD 21 F8                    CALL    IOCDP1          ; READ RESULT STATUS FROM IOC 
     708/    E966 : 32 FE 2F                    STA     TRK0-2          ; SAVE FOR TEST LATER
     709/    E969 : B7                  	        ORA     A               ; SET CONDITION CODES
     710/    E96A : C2 8E E9                    JNZ     BSX1            ; JUMP IF DISK OPERATION UNSUCCESSFUL
     711/    E96D : 21 00 30                    LXI     H,TRK0          ; LOAD POINTER TO DISK DESTINATION ADDRESS
     712/    E970 : 11 00 0D                    LXI     D,TRKL          ; LOAD TRACK LENGTH
     713/    E973 : 06 19                       MVI     B,RDBC          ; LOAD DISK READ DATA COMMAND
     714/    E975 : CD 21 F8                    CALL    IOCDP1          ; LOAD DATA FROM IOC 
     715/    E978 : 77                  	        MOV     M,A             ; MOVE TO MEMORY
     716/    E979 : 1B                  	        DCX     D               ; DECREMENT LENGTH
     717/    E97A : 23                  	        INX     H               ; MOVE PDINTER TO NEXT LOCATION
     718/    E97B :                     		BS14:
     719/    E97B : DB C1                       IN      IOCS            ; INPUT DBB STATUS
     720/    E97D : E6 07                       ANI     IBF | OBF | F0; MASK OFF STATUS FLAGS
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 13 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     721/    E97F : FE 01                       CPI     OBF             ; TEST FOR DATA IN BUFFER 
     722/    E981 : C2 7B E9                    JNZ     BS14            ; JUMP IF NO DATA
     723/    E984 : DB C0                       IN      IOCI            ; INPUT DATA FROM DBB
     724/    E986 : 77                  	        MOV     M,A             ; MOVE TO MEMORY
     725/    E987 : 23                  	        INX     H               ; MOVE POINTER TO NEXT LOCATION
     726/    E988 : 1B                  	        DCX     D               ; DECREMENT LENGTH
     727/    E989 : 7A                  	        MOV     A,D             ; LOAD D FOLLOWED BY E
     728/    E98A : B3                  	        ORA     E               ; 
     729/    E98B : C2 7B E9                    JNZ     BS14            ; CONTINUE UNTIL DONE
     730/    E98E :                     		;
     731/    E98E :                     		;       F.      DETERMINE COLD START LOCAL CONSOLE.
     732/    E98E :                     		;
     733/    E98E :                     		;-------------------------------
     734/    E98E :                     		; CONSOLE IS EITHER INTEGRATED CRT, SERIAL CRT, OR TTY
     735/    E98E :                     		BSX1:
     736/    E98E : 2A 04 00                    LHLD    MEMTOP          ; LOAD TOP OF MEMORY PAGE ADDRESS
     737/    E991 : 2E CC                       MVI     L,(BLOC+1) & LBMK ; LOAD CONFIGURATION ADDRESS
     738/    E993 : 7E                  	        MOV     A,M             ; LOAD INTEGRATED CONSOLE FLAG
     739/    E994 : 0F                  	        RRC                     ; TEST FOR INTEGRATED CONSOLE PRESENT
     740/    E995 : DA A4 E9                    JC      BSX2            ; JUMP IF INTEGRATED CONSOLE NOT PRESENT
     741/    E998 : 06 13                       MVI     B,KSTS          ; LOAD KEYBOARD STATUS COMMAND
     742/    E99A : CD 21 F8                    CALL    IOCDP1          ; READ STATUS FROM IOC
     743/    E99D : 0F                  	        RRC                     ; TEST FOR KEYBOARD PRESENT
     744/    E99E : 0F                  	        RRC
     745/    E99F : 16 41                       MVI     D,ICFG          ; LOAD INITIAL CONFIGURATION
     746/    E9A1 : DA CC E9                    JC      BSX5            ; JUMP IF KEYBOARD PRESENT
     747/    E9A4 :                     		;-----------------------------------
     748/    E9A4 :                     		; CONSOLE IS EITHER SERIAL CRT OR TTY
     749/    E9A4 :                     		BSX2:
     750/    E9A4 : AF                  	        XRA     A               ; ZERO A
     751/    E9A5 : 57                  	        MOV     D,A             ; D CONTAINS 0H, I.E.C=T,R=T,P=T,L=T
     752/    E9A6 : DB F5                       IN      TTYS            ; GET TTY STATUS
     753/    E9A8 : E6 02                       ANI     RRDY            ; IS IT READY?
     754/    E9AA : CA B2 E9                    JZ      BSX3            ; JUMP IF TTY NOT READY
     755/    E9AD : DB F4                       IN      TTYI            ; OTHERWISE GET CHARACTER FROM TTY
     756/    E9AF : C3 BD E9                    JMP     BSX4
     757/    E9B2 :                     		BSX3:
     758/    E9B2 : 16 41                       MVI     D,ICFG          ; LOAD INITIAL CONFIGURATION STATUS
     759/    E9B4 : DB F7                       IN      USCS            ; GET SERIAL CRT STATUS
     760/    E9B6 : E6 02                       ANI     RRDY            ; IS IT READY?
     761/    E9B8 : CA A4 E9                    JZ      BSX2            ; JUMP BACKWARDS IF CRT NOT READY
     762/    E9BB : DB F6                       IN      USCI            ; OTHERWISE, GET CHARACTER FROM CRT
     763/    E9BD :                     		BSX4:
     764/    E9BD : E6 7F                       ANI     7FH             ; MASK OUT PARITY BIT
     765/    E9BF : FE 20                       CPI     ' '             ; DID USER TYPE IN A SPACE CHARACTER?
     766/    E9C1 : C2 A4 E9                    JNZ     BSX2            ; START ALL OVER IF NOT A SPACE CHARACTER
     767/    E9C4 :                     		                                ; IN CASE OF INTEGRATED CONSOLE PRESENT BUT
     768/    E9C4 :                     		                                ;   KEYBOARD DISCONNECTED, THE CONSOLE IS
     769/    E9C4 :                     		                                ;   NOW A SERIAL CRT, SO UPDATE
     770/    E9C4 :                     		                                ;   INTEGRATED CONSOLE FLAG
     771/    E9C4 : 2A 04 00                    LHLD    MEMTOP          ; LOAD TOP OF MEMORY PAGE ADDRESS
     772/    E9C7 : 2E CC                       MVI     L,(BLOC+1) & LBMK ; LOAD CONFIGURATION ADDRESS
     773/    E9C9 : 3E 01                       MVI     A,ICNP          ; INTEGRATED CONSOLE NOT PRESENT
     774/    E9CB : 77                  	        MOV     M,A             ; STORE IN CONFIGURATION BYTE IN EXIT TEMPLATE 
     775/    E9CC :                     		;-------------------------------
     776/    E9CC :                     		; AT THIS POINT THE CONSOLE DEVICE HAS BEEN DETERMINED
     777/    E9CC :                     		BSX5:
     778/    E9CC : 21 03 00                    LXI     H,IOBYT         ; HL POINTS TO I/O STATUS BYTE
     779/    E9CF : 72                  	        MOV     M,D             ; REPLACE MODIFIED I/O STATUS BYTE
     780/    E9D0 : 2E 06                       MVI     L,INITIO        ; HL POINTS TO INITIAL I/O STATUS BYTE
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 14 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     781/    E9D2 : 72                  	        MOV     M,D             ; SET INITIAL I/O STATUS BYTE
     782/    E9D3 :                     		;
     783/    E9D3 :                     		;       G.      CALL THE DIAGNOSTIC PROGRAM
     784/    E9D3 :                     		;
     785/    E9D3 : CD 03 EB                    CALL    DIAGBT
     786/    E9D6 :                     		;
     787/    E9D6 :                     		;       H.      IF DISK IS READY, TRANSFER TO ISIS.T0
     788/    E9D6 :                     		;
     789/    E9D6 : F1                  	        POP     PSW             ; UNLOAD FLAG
     790/    E9D7 : B7                  	        ORA     A               ; SET CONDITION CODES
     791/    E9D8 : C2 EA E9                    JNZ     BSX6            ; JUMP IF INTEGRATED CONSOLE ACCESSED
     792/    E9DB : DB 7B                       IN      RSTS            ; SAMPLE FDCC RESULT STATUS
     793/    E9DD : B7                  	        ORA     A               ; SET CONDITION CODES
     794/    E9DE : C2 18 EA                    JNZ     BSX10           ; JUMP IF ERROR CONDITION
     795/    E9E1 : DB 78                       IN      DSTS            ; SAMPLE FDCC STATUS
     796/    E9E3 : 0F                  	        RRC                     ; IS IT READY?
     797/    E9E4 : D2 0D EA                    JNC     BSX9            ; JUMP TO MONITOR IF DISK NOT READY
     798/    E9E7 :                     		                                ; OTHERWISE, PRIOR TO TRANSFERRING CONTROL
     799/    E9E7 :                     		                                ;   TO T0.BOOT, WRITE AN INSTRUCTION TO
     800/    E9E7 :                     		                                ;   TURN OFF BOOTSTRAP PROM
     801/    E9E7 : C3 FE E9                    JMP     BSX8
     802/    E9EA :                     		BSX6:
     803/    E9EA : 07                  	        RLC                     ; TEST FOR NON DISK ACCESS
     804/    E9EB : DA 0D EA                    JC      BSX9            ; JUMP IF NO ACCESS
     805/    E9EE : 3A FE 2F                    LDA     TRK0-2          ; LOAD TEMPORARY STORAGE FOR RESULT BYTE
     806/    E9F1 : B7                  	        ORA     A               ; SET CONDITION CODES
     807/    E9F2 : C2 18 EA                    JNZ     BSX10           ; JUMP IF ERROR CONDITION
     808/    E9F5 : 06 1C                       MVI     B,RDSTS         ; LOAD FLOPPY DEVICE STATUS COMMAND
     809/    E9F7 : CD 21 F8                    CALL    IOCDP1          ; READ STATUS FROM I/O CONTROLLER
     810/    E9FA : 0F                  	        RRC                     ; TEST FOR DRIVE READY
     811/    E9FB : D2 0D EA                    JNC     BSX9            ; JUMP IF NOT READY
     812/    E9FE :                     		BSX8:
     813/    E9FE :                     		;        MVI     A,(OUT CPUC)    ; LOAD OUTPUT INSTRUCTION
     814/    E9FE : 3E D3                       MVI     A,0D3H          ; LOAD OUTPUT INSTRUCTION
     815/    EA00 : 32 FE 2F                    STA     TRK0-2          ; STORE IN RAM BEFORE DISK BOOT
     816/    EA03 : 3E FF                       MVI     A,CPUC          ; LOAD PORT ADDRESS
     817/    EA05 : 32 FF 2F                    STA     TRK0-1
     818/    EA08 : 3E 04                       MVI     A,BTDGOF        ; TURN OFF BOOTSTRAP/DIAGNOSTIC ROM
     819/    EA0A : C3 FE 2F                    JMP     TRK0-2          ; EFFECT IS SAME AS: MVI A,BTDGOF
     820/    EA0D :                     		                                ;                    OUT CPUC
     821/    EA0D :                     		                                ;                    JMP TRK0 
     822/    EA0D :                     		;
     823/    EA0D :                     		;       I.      OTHERWISE, TYPE SIGN-ON FOR RAM MONITOR
     824/    EA0D :                     		;
     825/    EA0D :                     		BSX9:
     826/    EA0D : 21 3B EA                    LXI     H,VERS          ; HL POINTS TO ADDRESS OF SIGN-ON MESSAGE
     827/    EA10 : 06 1B                       MVI     B,LVER          ; B CONTAINS LENGTH OF MESSAGE
     828/    EA12 : CD 2A EA                    CALL    PRTM            ; PRINT SIGN-ON MESSAGE
     829/    EA15 :                     		;
     830/    EA15 :                     		;       J.      BOOTSTRAP ALL DONE, SO BRANCH TO MONITOR.
     831/    EA15 : C3 00 F8                    JMP     BEGIN           ; AT THIS POINT, INTERRUPTS ARE DISABLED
     832/    EA18 :                     		;
     833/    EA18 :                     		;       K.      PRINT DISK ERROR MESSAGE
     834/    EA18 :                     		BSX10:
     835/    EA18 : 21 56 EA                    LXI     H,ERMSG         ; HL POINTS TO ADDRESS OF DISK ERROR MESSAGE
     836/    EA1B : 06 0E                       MVI     B,LERM          ; B CONTAINS LENGTH OF MESSAGE
     837/    EA1D : CD 2A EA                    CALL    PRTM            ; PRINT SIGN-ON MESSAGE
     838/    EA20 : C3 0D EA                    JMP     BSX9            ; PRINT MESSAGE
     839/    EA23 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     840/    EA23 :                     		;
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 15 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     841/    EA23 :                     		;       BDLY - BOOTSTRAP DELAY 1 MS SUBROUTINE
     842/    EA23 :                     		;
     843/    EA23 :                     		BDLY:
     844/    EA23 : 0E 70                       MVI     C,ONEMS         ; LOAD 1 MS. CONSTANT
     845/    EA25 :                     		BDLY1:
     846/    EA25 : 0D                  	        DCR     C               ; DECREMENT COUNTER
     847/    EA26 : C2 25 EA                    JNZ     BDLY1           ; JUMP IF NOT EXPIRED
     848/    EA29 : C9                  	        RET
     849/    EA2A :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     850/    EA2A :                     		;
     851/    EA2A :                     		;       PRTM - PRT SUBROUTINE FOR SIGN~ON MESSAGES
     852/    EA2A :                     		;
     853/    EA2A :                     		PRTM:
     854/    EA2A : 4E                  	        MOV     C,M             ; C CONTAINS A CHARACTER FROM THE MESSAGE
     855/    EA2B : CD 09 F8                    CALL    COP             ; PRINT ON CONSOLE
     856/    EA2E : 23                  	        INX     H
     857/    EA2F : 05                  	        DCR     B
     858/    EA30 : C2 2A EA                    JNZ     PRTM            ; KEEP LOOPING UNTIL ENTIRE MESSAGE IS OUTPUT
     859/    EA33 : C9                  	        RET
     860/    EA34 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     861/    EA34 :                     		;
     862/    EA34 :                     		;       DISK I/O PARAMETER BLOCK
     863/    EA34 :                     		;
     864/    EA34 :                     		IOPB:
     865/    EA34 : 80                  	        DB      80H             ; IOCW, NO UPDATE BIT SET
     866/    EA35 : 04                  	        DB      04H             ; I/O INSTRUCTION, READ DISK 0
     867/    EA36 : 1A                  	        DB      26              ; READ 26 SECTORS
     868/    EA37 : 00                  	        DB      0               ; TRACK 0
     869/    EA38 : 01                  	        DB      1               ; SECTOR 1
     870/    EA39 : 00 30                       DW      TRK0            ; LOAD ADDRESS
     871/    EA3B :                     		;
     872/    EA3B :                     		;       MONITOR SIGN-ON MESSAGE
     873/    EA3B :                     		;
     874/    EA3B :                     		VERS:
     875/    EA3B :                     		;        DB      CR,LF,'SERIES II MONITOR, V'
     876/    EA3B : 0D 0A 53 45 52 49           DB      CR,LF,"SERIES II MONITOR, V"
             EA41 : 45 53 20 49 49 20 
             EA47 : 4D 4F 4E 49 54 4F 
             EA4D : 52 2C 20 56       
     877/    EA51 : 31 2E 33                    DB      VER/10+'0','.',VER # 10+'0'
     878/    EA54 : 0D 0A                       DB      CR,LF
     879/    EA56 : =1BH                 LVER    EQU     $-VERS          ; LENGTH OF SIGN-ON MESSAGE
     880/    EA56 :                     		;
     881/    EA56 :                     		;       MONITOR ERROR SIGN-ON MESSAGE
     882/    EA56 :                     		;
     883/    EA56 :                     		ERMSG:
     884/    EA56 : 0D 0A 44 49 53 4B           DB      CR,LF,'DISK ERROR',CR,LF
             EA5C : 20 45 52 52 4F 52 
             EA62 : 0D 0A             
     885/    EA64 : =0EH                 LERM    EQU     $-ERMSG         ; LENGTH OF ERROR SIGN-ON MESSAGE
     886/    EA64 : 56                  	BTCKSM: DB      056H            ; BOOT CHKSUMS TO 55H
     887/    EA65 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-***-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     888/    EA65 :                     		;
     889/    EA65 :                     		; EXIT CODE TEMPLATE, TO BE EXECUTED IN RAM
     890/    EA65 :                     		; THIS CODE IS ORIGINATED SO AS TO BE ALIGNED
     891/    EA65 :                     		; AGAINST THE TOP OF A PAGE (1 PAGE = 256 BYTES)
     892/    EA65 :                     		;
     893/    EAC8 :                             ORG     BBASE + 02C8H
     894/    EAC8 :                     		TOS:                            ; BASE OF MONITOR WORK STACK
     895/    EAC8 : =0EAC0H              USER    EQU     TOS-8           ; BASE OF DEFAULT USER WORK STACK
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 16 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     896/    EAC8 : EE                  	ELOC:   DB      0EEH            ; E REGISTER STORAGE
     897/    EAC9 : DD                  	DLOC:   DB      0DDH            ; D REGISTER
     898/    EACA : CC                  	CLOC:   DB      0CCH            ; C REGISTER
     899/    EACB : BB                  	BLOC:   DB      0BBH            ; B REGISTER
     900/    EACC : 00                  	        DB      0               ; CONFIGURATION BYTE
     901/    EACD :                     		                                ; BIT 0 = 0 IF INTEGRATED CRT IS PRESENT
     902/    EACD :                     		                                ;       = 1 IF INTEGRATED CRT NOT PRESENT
     903/    EACD : FE                  	ILOC:   DB      ~ INT0        ; INTERRUPT MASK
     904/    EACE : FF                  	FLOC:   DB      0FFH            ; CPU FLAGS
     905/    EACF : AA                  	ALOC:   DB      0AAH            ; A REGISTER
     906/    EAD0 : C0                  	        DB      USER & HMSK   ; LOW(SP)
     907/    EAD1 : 00                  	SLOC:   DB      0               ; HIGH(SP)
     908/    EAD2 :                     		;
     909/    EAD2 :                     		EXIT:                           ; MONITOR STACK ORIGIN
     910/    EAD2 : F3                  	        DI                      ; DISABLE INTERRUPTS TO PROTECT THIS SEQUENCE
     911/    EAD3 : D1                  	        POP     D               ; RESTORE D,E
     912/    EAD4 : C1                  	        POP     B               ; RESTORE B,C
     913/    EAD5 : F1                  	        POP     PSW
     914/    EAD6 : D3 FC                       OUT     SOCP1           
     915/    EAD8 : F1                  	        POP     PSW             ; RESTORE A AND FLAGS
     916/    EAD9 : E1                  	        POP     H               ; RESTORE ORIGINAL STACK VALUE
     917/    EADA : F9                  	        SPHL
     918/    EADB : 21 34 12                    LXI     H,1234H         ; RESTORE H,L; 1234H IS FILLER WHICH WILL BE
     919/    EADE :                     		                                ;   OVERWRITTEN BY RESTART ROUTINE
     920/    EADE : =0EADCH              LLOC    EQU     $-2
     921/    EADE : =0EADDH              HLOC    EQU     $-1
     922/    EADE : FB                  	        EI                      ; ENABLE INTERRUPTS
     923/    EADF : C3 89 67                    JMP     6789H           ; RETURN TO INTERRUPTED CODE; 6789H IS FILLER
     924/    EAE2 :                     		                                ;   WHICH WILL BE OVERWRITTEN BY 'G' COMMAND
     925/    EAE2 :                     		                                ;   AND RESTART ROUTINE
     926/    EAE2 : =0EAE1H              PLOC    EQU     $-1
     927/    EAE2 : 00 00               TLOC:   DW      0               ; TRAP 1 ADDRESS
     928/    EAE4 : 00                  	        DB      0               ; TRAP 1 VALUE
     929/    EAE5 : 00 00                       DW      0               ; TRAP 2 ADDRESS
     930/    EAE7 : 00                  	        DB      0               ; TRAP 2 VALUE
     931/    EAE8 :                     		XTBL:                           ; EXTENSIBLE I/O ENTRY POINTS
     932/    EAE8 :                     		                                ;   FILLED IN WHEN USER GIVES ADDRESS OF OWN
     933/    EAE8 :                     		                                ;   DRIVER ROUTINE VIA IODEF SYSTEM CALL IN MONITOR
     934/    EAE8 :                     		CILOC:
     935/    EAE8 : C3 00 00                    JMP     0
     936/    EAEB :                     		COLOC:
     937/    EAEB : C3 00 00                    JMP     0
     938/    EAEE :                     		R1LOC:
     939/    EAEE : C3 00 00                    JMP     0
     940/    EAF1 :                     		R2LOC:
     941/    EAF1 : C3 00 00                    JMP     0
     942/    EAF4 :                     		P1LOC:
     943/    EAF4 : C3 00 00                    JMP     0
     944/    EAF7 :                     		P2LOC:
     945/    EAF7 : C3 00 00                    JMP     0
     946/    EAFA :                     		LILOC:
     947/    EAFA : C3 00 00                    JMP     0
     948/    EAFD :                     		CSLOC:
     949/    EAFD : C3 00 00                    JMP     0
     950/    EB00 :                     		ENDX:                           ; THIS LABEL SHOULD BE AT 0EA00H.
     951/    EB00 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     952/    EB00 :                     		; SELECTION CODES FOR USER I/O ENTRY POINTS
     953/    EB00 : =0H                  UCI     EQU     (CILOC-XTBL)/3
     954/    EB00 : =1H                  UCO     EQU     (COLOC-XTBL)/3
     955/    EB00 : =2H                  UR1     EQU     (R1LOC-XTBL)/3
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 17 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


     956/    EB00 : =3H                  UR2     EQU     (R2LOC-XTBL)/3
     957/    EB00 : =4H                  UP1     EQU     (P1LOC-XTBL)/3
     958/    EB00 : =5H                  UP2     EQU     (P2LOC-XTBL)/3
     959/    EB00 : =6H                  UL1     EQU     (LILOC-XTBL)/3
     960/    EB00 : =7H                  UCS     EQU     (CSLOC-XTBL)/3
     961/    EB00 :                     		; END OF BOOTSTRAP PROM CODE
     962/    EB00 :                     		;*******************************************************************************
     963/    EB00 : =0EB00H              DIAGMN  EQU     0EB00H          ; STARTING ADDRESS OF DIAGNOSTIC PROGRAM
     964/    EB00 :                     		                                ;   WHEN ENTERED FROM CALL FROM MONITOR
     965/    EB00 : =0EB03H              DIAGBT  EQU     0EB03H          ; STARTING ADDRESS OF DIAGNOSTIC PROGRAM
     966/    EB00 :                     		                                ;   WHEN ENTERED FROM CALL FROM BOOT
     967/    EB00 :                             ORG     0EB00H          ; WHEN BURNING THE PROM; THIS SECTION OF CODE
     968/    EB00 :                     		                                ;   WILL BE OVERLAYED BY THE REAL DIAGNOSTIC
     969/    EB00 :                     		                                ;   PROGRAM.
     970/    EB00 : C9                  	        RET
     971/    EB01 : 00                  	        NOP
     972/    EB02 : 00                  	        NOP
     973/    EB03 : C9                  	        RET                     ; 0EB03H
     974/    EB04 :                     		                                ; BOOTSTRAP/DIAGNOSTIC PROM
     975/    EB04 :                     		;*******************************************************************************
     976/    EB04 :                     		;*******************************************************************************
     977/    EB04 :                     		;*******************************************************************************
     978/    EB04 :                     		;***                                                                         ***
     979/    EB04 :                     		;***           START OF MONITOR PROPER                                       ***  
     980/    EB04 :                     		;***                                                                         ***
     981/    EB04 :                     		;*******************************************************************************
     982/    EB04 :                     		;*******************************************************************************
     983/    EB04 :                     		;*******************************************************************************
     984/    EB04 :                     		;BASE    SET     0F800H          ; BASE ADDRESS OF MONITOR
     985/    EB04 : =0F800H              BASE    EQU     0F800H          ; BASE ADDRESS OF MONITOR
     986/    F800 :                             ORG     BASE            ; TOP 2K OF 64K ADDRESS SPACE
     987/    F800 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
     988/    F800 :                     		;
     989/    F800 :                     		; BRANCH TABLE FOR I/O SYSTEM (EXTERNAL I/O ENTRY POINTS)
     990/    F800 :                     		;
     991/    F800 :                     		; THE MONITOR IS ENTERED AT ENTRY POINT 'BEGIN' VIA A JUMP FROM THE BOOTSTRAP;
     992/    F800 :                     		; THIS IN TURN LEADS TO A JUMP TO ENTRY POINT 'START'. THE OTHER ENTRIES
     993/    F800 :                     		; IN THIS "TABLE" ARE EXTERNAL I/O ENTRY POINTS KNOWN TO THE USER PLUS
     994/    F800 :                     		; THE DATE, VERSION, AND COPYRIGHT STAMPS.
     995/    F800 :                     		BEGIN:
     996/    F800 : C3 51 F8                    JMP     START0          ; RESET ENTRY POINT
     997/    F803 : C3 BE FB                    JMP     CI              ; LOCAL CONSOLE INPUT
     998/    F806 : C3 0F FC                    JMP     RI              ; READER INPUT
     999/    F809 : C3 9F FC                    JMP     CO              ; LOCAL CONSOLE OUTPUT
    1000/    F80C : C3 E9 FC                    JMP     PO              ; PUNCH OUTPUT
    1001/    F80F : C3 1E FD                    JMP     LO              ; LIST OUTPUT
    1002/    F812 : C3 44 FD                    JMP     CSTS            ; LOCAL CONSOLE INPUT STATUS
    1003/    F815 : C3 83 FD                    JMP     IOCHK           ; I/O SYSTEM STATUS
    1004/    F818 : C3 87 FD                    JMP     IOSET           ; SET I/O CONFIGURATION
    1005/    F81B : C3 8C FD                    JMP     MEMCHK          ; COMPUTE SIZE OF MEMORY
    1006/    F81E : C3 94 FD                    JMP     IODEF           ; DEFINE USER I/O ENTRY POINTS
    1007/    F821 : C3 7F FF                    JMP     IOCDR1          ; IOC INPUT
    1008/    F824 : 03 01                       DW      DATC            ; DATE STAMP FOR MONITOR ROM
    1009/    F826 : C3 AD FD                    JMP     UI              ; UPP INPUT
    1010/    F829 : C3 BE FD                    JMP     UO              ; UPP OUTPUT
    1011/    F82C : C3 CE FD                    JMP     UPPS            ; UPP STATUS
    1012/    F82F : 13                  	        DB      VERH            ; VERSION STAMP FOR MONITOR ROM
    1013/    F830 :                     		;        DB      '(C)INTEL CORP1979' ; COPYRIGHT NOTICE IN ASCII REP
    1014/    F830 : 28 43 29 49 4E 54           DB      "(C)INTEL CORP1979" ; COPYRIGHT NOTICE IN ASCII REP
             F836 : 45 4C 20 43 4F 52 
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 18 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


             F83C : 50 31 39 37 39    
    1015/    F841 : C3 A6 FF                    JMP     IOCCOM          ; IOCCOM ENTRY POINT
    1016/    F844 : C3 94 FF                    JMP     IOCDR2          ; IOC OUTPUT
    1017/    F847 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1018/    F847 :                     		,
    1019/    F847 :                     		; 'ERROR' - ENTERED VIA JUMP FROM VARIOUS ROUTINES WHEN AN ERROR IS DETECTED
    1020/    F847 :                     		; PROCESS: ABNORMAL EXIT FOR ALL MONITOR ERROR CONDITIONS. BECAUSE OF THE
    1021/    F847 :                     		;          UNKNOWN STATE OF THE MONITOR AS A RESULT OF A COMMAND OR DATA ERROR,
    1022/    F847 :                     		;          THE VALUE OF THE MONITOR STACK POINTER IS REINITIALIZED AND
    1023/    F847 :                     		;          EXECUTION CONTINUES TO THE MAIN COMMAND LOOP.
    1024/    F847 :                     		; INPUT: MEMTOP,TOS
    1025/    F847 :                     		; OUTPUT: SP POINTS TO BASE OF MONITOR STACK IN TOP PAGE OF CONTIGUOUS RAM
    1026/    F847 :                     		; MODIFIED: H,L, SP
    1027/    F847 :                     		; STACK USAGE:
    1028/    F847 :                     		; REGISTER USAGE
    1029/    F847 :                     		; X = MODIFIED BY THIS ROUTINE, CONTENTS UNDEFINED.
    1030/    F847 :                     		; S = SET BY THIS ROUTINE, RETURNED AS A RESULT.
    1031/    F847 :                     		; U = USED AS INPUT.
    1032/    F847 :                     		;          A -
    1033/    F847 :                     		;          B -          C - S
    1034/    F847 :                     		;          D -          E -
    1035/    F847 :                     		;          H - X        L - X
    1036/    F847 :                     		;          CARRY - X    ZERO - X
    1037/    F847 :                     		;          SIGN - X     PARITY - X
    1038/    F847 :                     		;          SP - S       PC -
    1039/    F847 :                     		;          STACK USAGE: 2 BYTES
    1040/    F847 :                     		ERROR:
    1041/    F847 : 2A 04 00                    LHLD    MEMTOP          ; H POINTS TO TOP PAGE OF MEMORY
    1042/    F84A : 2E C8                       MVI     L,TOS & 0FFH  ; L POINTS TO BASE OF STACK WITHIN THAT PAGE
    1043/    F84C : F9                  	        SPHL                    ; SP NOW POINTS TO BASE OF MONITOR STACK
    1044/    F84D : CD DE FC                    CALL    COMC            ; OUTPUT THE ERROR INDICATOR CHAR '#'
    1045/    F850 : 23                  	        DB      '#'
    1046/    F851 :                     		                                ; FALL THROUGH TO MAIN COMMAND LOOP
    1047/    F851 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1048/    F851 :                     		; MAIN COMMAND LOOP.
    1049/    F851 :                     		;
    1050/    F851 :                     		; THIS LOOP IS THE STARTING POINT OF ALL COMMAND SEQUENCES.
    1051/    F851 :                     		; IT IS ENTERED VIA A JUMP FROM THE BEGINNING OF THE MONITOR PROPER CODE,
    1052/    F851 :                     		; A FALL THROUGH FROM THE ERROR ROUTINE, OR A RETURN FROM A MONITOR COMMAND
    1053/    F851 :                     		; ROUTINE.
    1054/    F851 :                     		; IN THIS CODE INTERRUPTS ARE ENABLED AND A CARRIAGE RETURN
    1055/    F851 :                     		; AND LINE FEED ARE TYPED ALONG WITH THE PROMPT CHARACTER, '.'.
    1056/    F851 :                     		; WHEN A CHARACTER IS ENTERED FROM THE LOCAL CONSOLE KEYBOARD, IT
    1057/    F851 :                     		; IS CHECKED FOR VALIDITY, THEN A BRANCH TO THE PROPER
    1058/    F851 :                     		START0:
    1059/    F851 : 3E 04                       MVI     A,BTDGOF        ; DISABLE BOOT, I.E. SWITCH BOOT PROM
    1060/    F853 : D3 FF                       OUT     CPUC            ;   OUT OF ADDRESSABLE MEMORY SPACE
    1061/    F855 :                     		START:
    1062/    F855 : FB                  	        EI                      ; ENABLE INTERRUPTS
    1063/    F856 : CD FE FD                    CALL    CRLF            ; TYPE <CR>,<LF>
    1064/    F859 : CD DE FC                    CALL    COMC            ; OUTPUT A PERIOD
    1065/    F85C : 2E                  	        DB      '.'
    1066/    F85D : CD 61 FF                    CALL    TI              ; GET A CHARACTER, ECHO IT.
    1067/    F860 : FE 0D                       CPI     CR              ; IS IT A CARRIAGE RETURN?
    1068/    F862 : CA 55 F8                    JZ      START           ; JUMP IF IT IS
    1069/    F865 : D6 41                       SUI     'A'             ; OTHERWISE TEST FOR A-Z (VALID COMMAND RANGE)
    1070/    F867 : FA 47 F8                    JM      ERROR           ; LESS THAN A, NOT A VALID COMMAND
    1071/    F86A : 0E 02                       MVI     C,2             ; ASSUME THE COMMAND NEEDS 2 PARAMETERS
    1072/    F86C : 11 55 F8                    LXI     D,START         ; SET UP PSEUDO RETURN ADDRESS TO SIMULATE
    1073/    F86F : D5                  	        PUSH    D               ;   EFFECT OF A CALL. COMMANDS WHICH PERFORM
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 19 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1074/    F870 :                     		                                ;   A RETURN WILL CAUSE THE STACK TO BE
    1075/    F870 :                     		                                ;   POPPED, THUS RETURNING TO ENTRY POINT
    1076/    F870 :                     		                                ;   START. THE 'G' COMMAND, HOWEVER, WIPES
    1077/    F870 :                     		                                ;   OUT THIS ADDRESS WITH ANOTHER ADDRESS
    1078/    F870 :                     		                                ;   OF ITS OWN CHOOSING (I.E. USER'S PC).
    1079/    F870 : 21 82 F8                    LXI     H,CTBL          ; LOAD POINTER TO PROCESSING ROUTINE PTRS
    1080/    F873 : FE 1A                       CPI     LCT             ; TEST FOR OVERRUN
    1081/    F875 : F2 47 F8                    JP      ERROR           ; IF SO, THEN ERROR
    1082/    F878 : 5F                  	        MOV     E,A             ; OTHERWISE, MOVE INDEX TO DE
    1083/    F879 : 16 00                       MVI     D,0
    1084/    F87B : 19                  	        DAD     D
    1085/    F87C : 19                  	        DAD     D               ; HL := CTBLBASE + (2 * INDEX); HL NOW POINTS
    1086/    F87D :                     		                                ; TO PROPER COMMAND IN COMMAND BRANCH TABLE
    1087/    F87D : 7E                  	        MOV     A,M             ; GET LSB OF BRANCH LOCATION
    1088/    F87E : 23                  	        INX     H
    1089/    F87F : 66                  	        MOV     H,M             ; GET MSB OF BRANCH LOCATION
    1090/    F880 : 6F                  	        MOV     L,A             ; HL POINTS TO ADDRESS OF COMMAND CODE
    1091/    F881 : E9                  	        PCHL                    ; TAKE THE BRANCH
    1092/    F882 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1093/    F882 :                     		;
    1094/    F882 :                     		; COMMAND BRANCH TABLE.
    1095/    F882 :                     		;
    1096/    F882 :                     		; THIS TABLE CONTAINS THE ADDRESSES OF THE ENTRY POINTS OF
    1097/    F882 :                     		; ALL THE COMMAND PROCESSING ROUTINES. IT IS ENTERED FROM THE MAIN
    1098/    F882 :                     		; COMMAND LOOP. NOTE THAT AN ENTRY TO 'ERROR'
    1099/    F882 :                     		; IS AN ERROR CONDITION, I.E., NO COMMAND CORRESPONDING TO THAT
    1100/    F882 :                     		; CHARACTER EXISTS.
    1101/    F882 :                     		CTBL:
    1102/    F882 : B6 F8                       DW      ASSIGN          ; A - ASSIGN I/O UNITS
    1103/    F884 : 47 F8                       DW      ERROR           ; B -
    1104/    F886 : 47 F8                       DW      ERROR           ; C -
    1105/    F888 : 33 F9                       DW      DISP            ; D - DISPLAY RAM MEMORY
    1106/    F88A : 5F F9                       DW      EOF             ; E - ENDFILE A HEXADECIMAL FILE
    1107/    F88C : 7D F9                       DW      FILL            ; F - FILL MEMORY
    1108/    F88E : 8C F9                       DW      GOTO            ; G - GO TO MEMORY ADDRESS
    1109/    F890 : D5 F9                       DW      HEXN            ; H - HEXADECIMAL SUM AND DIFFERENCE
    1110/    F892 : 47 F8                       DW      ERROR           ; I -
    1111/    F894 : 47 F8                       DW      ERROR           ; J -
    1112/    F896 : 47 F8                       DW      ERROR           ; K -
    1113/    F898 : 47 F8                       DW      ERROR           ; L -
    1114/    F89A : F0 F9                       DW      MOVE            ; M - MOVE MEMORY
    1115/    F89C : 01 FA                       DW      NULL            ; N - PUNCH NULLS FOR LEADER ON PAPER TAPE
    1116/    F89E : 47 F8                       DW      ERROR           ; O -
    1117/    F8A0 : 47 F8                       DW      ERROR           ; P -
    1118/    F8A2 : 14 FA                       DW      QUERY           ; Q - QUERY I/O SYSTEM STATUS
    1119/    F8A4 : 52 FA                       DW      READ            ; R - READ HEXADECIMAL PAPER TAPE FILE
    1120/    F8A6 : BF FA                       DW      SUBS            ; S - SUBSTITUTE MEMORY
    1121/    F8A8 : 47 F8                       DW      ERROR           ; T -
    1122/    F8AA : 47 F8                       DW      ERROR           ; U -
    1123/    F8AC : 47 F8                       DW      ERROR           ; V -
    1124/    F8AE : DD FA                       DW      WRITE           ; W - WRITE FILE TO PAPER TAPE IN HEX FORMAT
    1125/    F8B0 : 26 FB                       DW      X               ; X - EXAMINE AND MODIFY REGISTERS
    1126/    F8B2 : 47 F8                       DW      ERROR           ; Y -
    1127/    F8B4 : A6 FB                       DW      Z               ; Z - INVOKE THE DIAGNOSTIC PROGRAM
    1128/    F8B6 : =1AH                 LCT     EQU     ($-CTBL)/2      ; LCT = NUMBER OF 16-BIT ENTRIES IN TABLE
    1129/    F8B6 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1130/    F8B6 :                     		;
    1131/    F8B6 :                     		; 'A' COMMAND - ASSIGN I/O DEVICE
    1132/    F8B6 :                     		;
    1133/    F8B6 :                     		; THIS ROUTINE MAPS SYMBOLIC DEVICE IDENTIFIERS TO BITS
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 20 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1134/    F8B6 :                     		; IN THE I/O STATUS BYTE (IOBYT) TO ALLOW FOR LOCAL CONSOLE
    1135/    F8B6 :                     		; MODIFICATION OF SYSTEM "rIO CONFIGURATION.
    1136/    F8B6 :                     		ASSIGN:
    1137/    F8B6 : CD 61 FF                    CALL    TI              ; GET LOGICAL DEVICE CHARACTER (C,R,P,L)
    1138/    F8B9 : 21 03 F9                    LXI     H,LTBL          ; ADDRESS OF MASTER TABLE
    1139/    F8BC : 0E 04                       MVI     C,4             ; MAXIMUM OF 4 ENTRIES
    1140/    F8BE :                     		;       ---------------------------------------------------------------------
    1141/    F8BE :                     		AS0:                            ; HL POINTS TO IDENTIFYING CHARACTER IN LTBL
    1142/    F8BE : BE                  	        CMP     M               ; DOES A-REG CONTAIN C,R,P, OR L?
    1143/    F8BF : 23                  	        INX     H               ; HL POINTS TO CORRESPONDING DEVICE MASK
    1144/    F8C0 : CA CD F8                    JZ      AS1             ; YES IT DOES
    1145/    F8C3 : 23                  	        INX     H
    1146/    F8C4 : 23                  	        INX     H
    1147/    F8C5 : 23                  	        INX     H               ; HL POINTS TO NEXT 4-BYTE ENTRY IN LTBL
    1148/    F8C6 : 0D                  	        DCR     C               ; DECREMENT LOOP COUNT
    1149/    F8C7 : C2 BE F8                    JNZ     AS0             ; TRY NEXT ENTRY
    1150/    F8CA : C3 47 F8                    JMP     ERROR           ; NO MATCH, ERROR
    1151/    F8CD :                     		;       ---------------------------------------------------------------------
    1152/    F8CD :                     		AS1:                            ; USER HAS SPECIFIED A VALID LOGICAL DEVICE
    1153/    F8CD : 46                  	        MOV     B,M             ; B := LOGICAL DEVICE MASK
    1154/    F8CE : 23                  	        INX     H               ; HL CONTAINS SUBORDINATE PHYS.DEV.TBL.ADDRESS
    1155/    F8CF : 5E                  	        MOV     E,M             ; E CONTAINS LSB OF PDT ADDRESS
    1156/    F8D0 : 23                  	        INX     H
    1157/    F8D1 : 56                  	        MOV     D,M             ; D CONTAINS MSB OF PDT ADDRESS
    1158/    F8D2 : EB                  	        XCHG                    ; HL POINTS TO I/O SYSTEM PHYSICAL DEVICE
    1159/    F8D3 :                     		                                ;   TABLE (I.E. ACT,ART,APT, OR ALT)
    1160/    F8D3 :                     		;       ---------------------------------------------------------------------
    1161/    F8D3 :                     		ALUP1:                          ; SCAN INPUT UNTIL '='
    1162/    F8D3 : CD 61 FF                    CALL    TI
    1163/    F8D6 : FE 3D                       CPI     '='
    1164/    F8D8 : C2 D3 F8                    JNZ     ALUP1
    1165/    F8DB :                     		;       ---------------------------------------------------------------------
    1166/    F8DB :                     		ALUP2:                          ; SCAN INPUT WHILE ' ' (BLANK)
    1167/    F8DB : CD 61 FF                    CALL    TI
    1168/    F8DE : FE 20                       CPI     ' '
    1169/    F8E0 : CA DB F8                    JZ      ALUP2
    1170/    F8E3 :                     		;       ---------------------------------------------------------------------
    1171/    F8E3 : 0E 04                       MVI     C,4             ; SET TABLE LENGTH
    1172/    F8E5 :                     		AS2:                            ; INDEX THROUGH PHYSICAL UNIT TABLE
    1173/    F8E5 : BE                  	        CMP     M               ; COMPARE DEVICE CHAR WITH LEGAL VALUES
    1174/    F8E6 : 23                  	        INX     H               ; HL CONTAINS DEVICE SELECT BIT PATTERN
    1175/    F8E7 : CA F2 F8                    JZ      AS3             ; USER HAS SPECIFIED A VALID PHYS.DEVICE ASSIGNMNT
    1176/    F8EA : 23                  	        INX     H               ; HL POINTS TO NEXT ENTRY WITHIN THE TABLE
    1177/    F8EB : 0D                  	        DCR     C
    1178/    F8EC : C2 E5 F8                    JNZ     AS2             ; CONTINUE LOOKUP
    1179/    F8EF : C3 47 F8                    JMP     ERROR           ; ERROR RETURN
    1180/    F8F2 :                     		;       ---------------------------------------------------------------------
    1181/    F8F2 :                     		AS3:
    1182/    F8F2 :                     		ALUP3:                          ; SCAN INPUT UNTIL <CR>
    1183/    F8F2 : CD 61 FF                    CALL    TI
    1184/    F8F5 : FE 0D                       CPI     CR
    1185/    F8F7 : C2 F2 F8                    JNZ     ALUP3
    1186/    F8FA : 3A 03 00                    LDA     IOBYT           ; GET I/O STATUS
    1187/    F8FD : A0                  	        ANA     B               ; B CONTAINS LOG DEV MASK. CLEAR OUT THE
    1188/    F8FE :                     		                                ;   APPROPRIATE FIELD IN IOBYT BECAUSE WE ARE
    1189/    F8FE :                     		                                ;   GOING TO CHANGE IT
    1190/    F8FE : B6                  	        ORA     M               ; PUT IN THE NEW STATUS FIELD
    1191/    F8FF : 32 03 00                    STA     IOBYT           ; RETURN IT TO MEMORY
    1192/    F902 : C9                  	        RET                     ; RETURN CONTROL TO MAIN COMMAND LOOP
    1193/    F903 :                     		;
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 21 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1194/    F903 :                     		; MASTER I/O DEVICE TABLE
    1195/    F903 :                     		; 4 BYTES/ENTRY
    1196/    F903 :                     		; 
    1197/    F903 :                     		;   BYTE 0 = IDENTIFYING CHARACTER
    1198/    F903 :                     		;   BYTE 1 = LOGICAL DEVICE MASK
    1199/    F903 :                     		;   BYTES 2,3 = ADDRESS OF SUBORDINATE PHYSICAL DEVICE TABLE
    1200/    F903 :                     		;
    1201/    F903 :                     		LTBL:
    1202/    F903 : 43 FC                       DB      'C',CMSK
    1203/    F905 : 13 F9                       DW      ACT
    1204/    F907 : 52 F3                       DB      'R',RMSK
    1205/    F909 : 1B F9                       DW      ART
    1206/    F90B : 50 CF                       DB      'P',PMSK
    1207/    F90D : 23 F9                       DW      APT
    1208/    F90F : 4C 3F                       DB      'L' ,LMSK
    1209/    F911 : 2B F9                       DW      ALT
    1210/    F913 :                     		;
    1211/    F913 :                     		; I/O SYSTEM PHYSICAL DEVICE TABLES
    1212/    F913 :                     		; 2 BYTES/ENTRY
    1213/    F913 :                     		;
    1214/    F913 :                     		;   BYTE 0 = IDENTIFYING CHARACTER
    1215/    F913 :                     		;   BYTE 1 = DEVICE SELECT BIT PATTERN
    1216/    F913 :                     		;
    1217/    F913 :                     		ACT:
    1218/    F913 : 54 00                       DB      'T',CTTY        ; LOCAL CONSOLE = TTY
    1219/    F915 : 43 01                       DB      'C',CCRT        ; LOCAL CONSOLE = CRT
    1220/    F917 : 42 02                       DB      'B',BATCH       ; BATCH MODE LOCAL CONSOLE READ, LIST
    1221/    F919 : 31 03                       DB      '1',CUSE        ; USER DEFINED LOCAL CONSOLE DEVICE
    1222/    F91B :                     		ART:
    1223/    F91B : 54 00                       DB      'T',RTTY        ; READER TTY
    1224/    F91D : 50 04                       DB      'P',RPTR        ; READER PTR
    1225/    F91F : 31 08                       DB      '1',RUSE1       ; USER DEFINED READER DEVICE 1
    1226/    F921 : 32 0C                       DB      '2',RUSE2       ; USER DEFINED READER DEVICE 2
    1227/    F923 :                     		APT:
    1228/    F923 : 54 00                       DB      'T',PTTY        ; PUNCH TTY
    1229/    F925 : 50 10                       DB      'P',PPTP        ; PUNCH PTP
    1230/    F927 : 31 20                       DB      '1',PUSE1       ; USER DEFINED PUNCH DEVICE 1
    1231/    F929 : 32 30                       DB      '2',PUSE2       ; USER DEFINED PUNCH DEVICE 2
    1232/    F92B :                     		ALT:
    1233/    F92B : 54 00                       DB      'T',LTTY        ; LIST = TTY
    1234/    F92D : 43 40                       DB      'C',LCRT        ; LIST = CRT
    1235/    F92F : 4C 80                       DB      'L',LLPT        ; LIST = LPT
    1236/    F931 : 31 C0                       DB      '1',LUSE        ; USER DEFINED LIST DEVICE
    1237/    F933 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1238/    F933 :                     		;
    1239/    F933 :                     		; 'D' COMMAND - DISPLAY CONTENTS OF MEMORY ON LIST DEVICE
    1240/    F933 :                     		;
    1241/    F933 :                     		; THIS ROUTINE EXPECTS TWO HEXADECIMAL PARAMETERS SPECIFYING
    1242/    F933 :                     		; THE BOUNDS OF A MEMORY AREA TO BE DISPLAYED ON THE
    1243/    F933 :                     		; LIST DEVICE. THE MEMORY AREA IS DISPLAYED 16 BYTES
    1244/    F933 :                     		; PER LINE, WITH THE MEMORY ADDRESS OF THE FIRST BYTE
    1245/    F933 :                     		; PRINTED FOR REFERENCE. ALL LINES ARE BLOCKED INTO INTEGRAL
    1246/    F933 :                     		; MULTIPLES OF 16 FOR CLARITY, SO THE FIRST AND LAST LINES MAY
    1247/    F933 :                     		; BE LESS THAN 16 BYTES IN ORDER TO SYNCHRONIZE THE DISPLAY.
    1248/    F933 :                     		DISP:
    1249/    F933 : CD 39 FE                    CALL    EXPR            ; GET TWO ADDRESSES
    1250/    F936 : D1                  	        POP     D               ; GET HIGH ADDRESS
    1251/    F937 : E1                  	        POP     H               ; GET LOW ADDRESS
    1252/    F938 :                     		DI0:
    1253/    F938 : CD 6A FE                    CALL    LCRLF           ; PRINT CR,LF
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 22 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1254/    F93B : CD 07 FE                    CALL    DADR            ; PRINT MEMORY ADDRESS
    1255/    F93E :                     		DI1:
    1256/    F93E : 0E 20                       MVI     C,' '
    1257/    F940 : CD 14 FD                    CALL    LOM             ; PRINT SPACE
    1258/    F943 : 7E                  	        MOV     A,M
    1259/    F944 : CD 0C FE                    CALL    DBYTE           ; PRINT DATA
    1260/    F947 : CD 4C FE                    CALL    HILO            ; TEST FOR COMPLETION
    1261/    F94A : DA 56 F9                    JC      DI2             ; RETURN TO MAIN LOOP
    1262/    F94D : 7D                  	        MOV     A,L
    1263/    F94E : E6 0F                       ANI     0FH             ; PRINT CR,LF,ADDRESS ON MULTIPLE OF 16
    1264/    F950 : C2 3E F9                    JNZ     DI1
    1265/    F953 : C3 38 F9                    JMP     DI0
    1266/    F956 :                     		DI2:
    1267/    F956 : CD 6A FE                    CALL    LCRLF           ; WRITE CR,LF
    1268/    F959 : 0E 00                       MVI     C,0
    1269/    F95B : CD 14 FD                    CALL    LOM             ; WRITE A NULL TO TRIGGER CLOSE
    1270/    F95E : C9                  	        RET
    1271/    F95F :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1272/    F95F :                     		;
    1273/    F95F :                     		; 'E' COMMAND - PUNCH HEXADECIMAL END-OF-FILE
    1274/    F95F :                     		;
    1275/    F95F :                     		; THIS ROUTINE PRODUCES A TERMINATION RECORD WHICH PROPERLY
    1276/    F95F :                     		; COMPLETES A HEXADECIMAL FILE CREATED BY 'W' COMMANDS.
    1277/    F95F :                     		; IT EXPECTS ONE HEXADECIMAL PARAMETER, WHICH IT INTERPRETS AS THE
    1278/    F95F :                     		; START ADDRESS TO BE LOADED INTO THE USER'S PROGRAM COUNTER (LOCATED
    1279/    F95F :                     		; IN EXIT TEMPLATE) ON A SUBSEQUENT 'R' COMMAND; THIS START ADDRESS
    1280/    F95F :                     		; WILL REPLACE THE STORED VALUE OF THE USER'S PROGRAM COUNTER ONLY
    1281/    F95F :                     		; IF THE START ADDRESS IS NONZERO.
    1282/    F95F :                     		EOF:
    1283/    F95F : 0D                  	        DCR     C               ; C:=1; GET ONE PARAMETER
    1284/    F960 : CD 39 FE                    CALL    EXPR            ; PUT (START ADDRESS) ON TOP OF STACK
    1285/    F963 : CD E5 FC                    CALL    POC             ; OUTPUT RECORD MARK (':')
    1286/    F966 : 3A                  	        DB      ':'
    1287/    F967 : AF                  	        XRA     A               ; ZERO CHECKSUM
    1288/    F968 : 57                  	        MOV     D,A             ; D := 0; A := 0
    1289/    F969 : CD AF FE                    CALL    PBYTE           ; OUTPUT A RECORD LENGTH OF ZERO
    1290/    F96C : E1                  	        POP     H               ; RETRIEVE START ADDRESS
    1291/    F96D : CD AA FE                    CALL    PADR            ; OUTPUT IT AS THE LOAD ADDRESS
    1292/    F970 : 3E 01                       MVI     A,1             ; RECORD TYPE = 1
    1293/    F972 : CD AF FE                    CALL    PBYTE           ; OUTPUT RECORD TYPE
    1294/    F975 : AF                  	        XRA     A               ; A := 0
    1295/    F976 : 92                  	        SUB     D               ; D CONTAINS RUNNING CHECKSUM
    1296/    F977 : CD AF FE                    CALL    PBYTE           ; OUTPUT CHECKSUM := -D
    1297/    F97A : C3 09 FA                    JMP     NU0             ; PUNCH TRAILER AND RETURN
    1298/    F97D :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1299/    F97D :                     		;
    1300/    F97D :                     		; 'F' COMMAND - FILL RAM WITH 8-BIT CONSTANT
    1301/    F97D :                     		;
    1302/    F97D :                     		; THIS ROUTINE EXPECTS THREE HEXADECIMAL PARAMETERS, THE
    1303/    F97D :                     		; FIRST AND SECOND (16 BITS) ARE INTERPRETED AS THE BOUNDS
    1304/    F97D :                     		; OF A MEMORY AREA TO BE INITIALIZED TO A CONSTANT VALUE,
    1305/    F97D :                     		; THE THIRD PARAMETER (8 BITS) IS THAT VALUE.
    1306/    F97D :                     		FILL:
    1307/    F97D : 0C                  	        INR     C               ; C:=3; GET 3 PARAMETERS
    1308/    F97E : CD 39 FE                    CALL    EXPR
    1309/    F981 : C1                  	        POP     B               ; C := 8-BIT CONSTANT
    1310/    F982 : D1                  	        POP     D               ; DE := HIGH ADDRESS
    1311/    F983 : E1                  	        POP     H               ; HL := LOW ADDRESS
    1312/    F984 :                     		FI0:
    1313/    F984 : 71                  	        MOV     M,C             ; STORE CONSTANT IN MEMORY
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 23 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1314/    F985 : CD 4C FE                    CALL    HILO            ; TEST FOR COMPLETION
    1315/    F988 : D2 84 F9                    JNC     FI0             ; CONTINUE LOOPING
    1316/    F98B : C9                  	        RET                     ; GO BACK TO START
    1317/    F98C :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1318/    F98C :                     		;
    1319/    F98C :                     		; 'G' COMMAND - GO TO <ADDRESS>, OPTIONALLY SET BREAKPOINT(S)
    1320/    F98C :                     		;
    1321/    F98C :                     		; THE G COMMAND IS USED FOR TRANSFERRING CONTROL FROM THE
    1322/    F98C :                     		; MONITOR TO A USER PROGRAM. IT HAS SEVERAL MODES OF
    1323/    F98C :                     		; OPERATION.
    1324/    F98C :                     		; IF ONE HEXADECIMAL PARAMETER IS ENTERED, IT IS INTERPRETED
    1325/    F98C :                     		; AS THE ENTRY POINT OF THE USER PROGRAM AND A TRANSFER TO
    1326/    F98C :                     		; THAT LOCATION IS EXECUTED.
    1327/    F98C :                     		; IF ADDITIONAL (UP TO 2) PARAMETERS ARE ENTERED, THESE ARE
    1328/    F98C :                     		; CONSIDERED 'BREAKPOINTS', I.E., LOCATIONS WHERE
    1329/    F98C :                     		; CONTROL IS TO BE RETURNED TO THE MONITOR WHEN THEY ARE
    1330/    F98C :                     		; ENCOUNTERED IN COURSE OF EXECUTING THE USER PROGRAM.
    1331/    F98C :                     		; IF THE FIRST PARAMETER IS NOT ENTERED, THE STORED VALUE
    1332/    F98C :                     		; OF THE USER'S PROGRAM COUNTER (REGISTER P) IS USED AS
    1333/    F98C :                     		; THE USER PROGRAM ENTRY POINT.
    1334/    F98C :                     		;
    1335/    F98C :                     		; THIS COMMAND WORKS IN THE FOLLOWING MANNER:
    1336/    F98C :                     		;   1. IT FINDS THE EXIT CODE IN TOP OF RAM AND PLACES THIS ADDRESS IN THE
    1337/    F98C :                     		;       MONITOR'S STACK, REPLACING THE RETURN ADDRESS TO ENTRY POINT START
    1338/    F98C :                     		;       THAT WAS PLACED THERE BY THE MAIN COMMAND LOOP.
    1339/    F98C :                     		;   2. IF THERE IS NO FURTHER INPUT (I.E. ONLY <CR� THEN BY EXECUTING A
    1340/    F98C :                     		;       RET, WE CAUSE EXECUTION OF THE EXIT CODE, WHICH CONTAINS A JUMP TO
    1341/    F98C :                     		;       A) A DUMMY ADDRESS (IF IMPROPER USE OF COMMAND), B) THE PROGRAM
    1342/    F98C :                     		;       COUNTER FROM WHEN THE USER PROGRAM WAS INTERRUPTED OR BREAKPOINT
    1343/    F98C :                     		;       WAS ENCOUNTERED.
    1344/    F98C :                     		;   3. IF THERE IS A START ADDRESS SPECIFIED, THIS VALUE IS STORED OVER
    1345/    F98C :                     		;       THAT PART OF THE EXIT CODE WHICH CONTAINS THE JMP INSTRUCTION.
    1346/    F98C :                     		;       IF THERE IS NO FURTHER INPUT, A RET IS EXECUTED AND THE EXIT
    1347/    F98C :                     		;       CODE IS EXECUTED.
    1348/    F98C :                     		;   4. IF TRAPS (BREAKPOINTS) ARE TO BE SET, THEN THEY ARE READ IN AND PLACED
    1349/    F98C :                     		;       ON THE MONITOR STACK. THEY ARE THEN STORED IN THE PROPER SECTION OF
    1350/    F98C :                     		;       THE EXIT TEMPLATE. ALSO, IN THE USER'S PROGRAM THE INSTRUCTION SPECIFIED
    1351/    F98C :                     		;       BY THE BREAKPOINT ADDRESS IS SAVED IN THE EXIT TEMPLATE AND REPLACED
    1352/    F98C :                     		;       WITH A RST 0 INSTRUCTION.
    1353/    F98C :                     		;   5. THE EXIT CODE IS EXECUTED AND CONTROL IS PASSED TO THE USER PROGRAM.
    1354/    F98C :                     		GOTO:
    1355/    F98C : 2A 04 00                    LHLD    MEMTOP
    1356/    F98F : 2E D2                       MVI     L,EXIT & 0FFH ; HL NOW POINTS TO EXIT CODE IN TOP OF RAM
    1357/    F991 : E3                  	        XTHL                    ; REPLACE THE START RETURN ADDRESS IN THE 
    1358/    F992 :                     		                                ;   STACK (PUSHED BY MAIN COMMAND LOOP) WITH
    1359/    F992 :                     		                                ;   THIS EXIT CODE ADDRESS SO THAT WHEN THE
    1360/    F992 :                     		                                ;   G COMMAND DOES A RETURN, THE EXIT CODE
    1361/    F992 :                     		                                ;   WILL BE EXECUTED INSTEAD OF THE MAIN
    1362/    F992 :                     		                                ;   COMMAND LOOP.
    1363/    F992 : CD C5 FE                    CALL    PCHK            ; GET A CHARACTER, SET Z,C
    1364/    F995 : CA A4 F9                    JZ      GO0             ; IF ' ',',' OR <CR>: JUMP, DON'T CHANGE PC
    1365/    F998 : CD 7A FE                    CALL    PA0             ; GET NEW PC VALUE
    1366/    F99B : EB                  	        XCHG                    ; DE = NEW PC
    1367/    F99C : 2A 04 00                    LHLD    MEMTOP
    1368/    F99F : 2E E1                       MVI     L,PLOC & 0FFH ; HL NOW POINTS TO PLOC IN EXIT CODE IN TOP OF RAM
    1369/    F9A1 : 72                  	        MOV     M,D             ; STORE MSB OF MODIFIED PC IN EXIT CODE IN RAM
    1370/    F9A2 : 2B                  	        DCX     H
    1371/    F9A3 : 73                  	        MOV     M,E             ; STORE LSB OF MODIFIED PC IN EXIT CODE IN RAM
    1372/    F9A4 :                     		GO0:
    1373/    F9A4 : DA D1 F9                    JC      GO4             ; JUMP IF <CR> (NO TRAPS TO BE SET)
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 24 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1374/    F9A7 : 11 02 00                    LXI     D,2             ; SET COUNTER(S), D=0, E=2
    1375/    F9AA :                     		GO1:
    1376/    F9AA : CD DE FC                    CALL    COMC            ; ISSUE A PROMPT FOR A TRAP
    1377/    F9AD : 2D                  	        DB      '-'
    1378/    F9AE : CD 74 FE                    CALL    PARAM           ; GET A TRAP
    1379/    F9B1 : E5                  	        PUSH    H               ; STACK IT
    1380/    F9B2 : 14                  	        INR     D               ; UP 1 COUNTER
    1381/    F9B3 : DA BA F9                    JC      GO2             ; TERMINATE IF CR ENTERED
    1382/    F9B6 : 1D                  	        DCR     E               ; DOWN THE OTHER
    1383/    F9B7 : C2 AA F9                    JNZ     GO1             ; GET ONE MORE TRAP
    1384/    F9BA :                     		GO2:                            ; D CONTAINS HOW MANY TRAPS (1 OR 2)
    1385/    F9BA : D2 47 F8                    JNC     ERROR           ; LAST TRAP NOT FOLLOWED BY CR
    1386/    F9BD : 2A 04 00                    LHLD    MEMTOP
    1387/    F9C0 : 2E E2                       MVI     L,TLOC & 0FFH ; HL NOW POINTS TO TLOC (BEGINNING OF TRAP
    1388/    F9C2 :                     		                                ;   AREA) IN EXIT TEMPLATE IN TOP OF RAM
    1389/    F9C2 :                     		GO3:                            ; BC CONTAINS THE USER SPECIFIED TRAP ADDRESS
    1390/    F9C2 : C1                  	        POP     B               ; GET A TRAP (BREAKPOINT) ADDRESS
    1391/    F9C3 : 71                  	        MOV     M,C             ; STORE LSB OF TRAP ADDRESS INTO TRAP AREA
    1392/    F9C4 : 23                  	        INX     H
    1393/    F9C5 : 70                  	        MOV     M,B             ; STORE MSB OF TRAP ADDRESS INTO TRAP AREA
    1394/    F9C6 : 23                  	        INX     H
    1395/    F9C7 : 0A                  	        LDAX    B               ; FETCH OPCODE BYTE
    1396/    F9C8 : 77                  	        MOV     M,A             ; PUT IN TRAP AREA
    1397/    F9C9 : 23                  	        INX     H 
    1398/    F9CA :                     		;        MVI     A, (RST 0)      ; REPLACE THE USER'S OPCODE IN USER PROGRAM
    1399/    F9CA : 3E C7                       MVI     A,0C7H          ; REPLACE THE USER'S OPCODE IN USER PROGRAM
    1400/    F9CC : 02                  	        STAX    B               ;   WITH A RST 0
    1401/    F9CD : 15                  	        DCR     D
    1402/    F9CE : C2 C2 F9                    JNZ     GO3             ; DO SAME THING AGAIN FOR 2ND BREAKPOINT
    1403/    F9D1 :                     		GO4:
    1404/    F9D1 : CD FE FD                    CALL    CRLF
    1405/    F9D4 : C9                  	        RET                     ; EXECUTE MONITOR EXIT CODE, RETURNING TO
    1406/    F9D5 :                     		                                ; USER CODE
    1407/    F9D5 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1408/    F9D5 :                     		;
    1409/    F9D5 :                     		; 'H' COMMAND - COMPUTE HEXADECIMAL SUM AND DIFFERENCE
    1410/    F9D5 :                     		;
    1411/    F9D5 :                     		; THIS ROUTINE EXPECTS TWO HEXADECIMAL PARAMETERS.
    1412/    F9D5 :                     		; IT COMPUTES THE SUM AND DIFFERENCE OF THE TWO VALUES
    1413/    F9D5 :                     		; AND DISPLAYS THEM ON THE LOCAL CONSOLE DEVICE AS FOLLOWS:
    1414/    F9D5 :                     		; <Pl+P2> <PI-P2>
    1415/    F9D5 :                     		HEXN:
    1416/    F9D5 : CD 39 FE                    CALL    EXPR            ; GET TWO NUMBERS
    1417/    F9D8 : CD FE FD                    CALL    CRLF
    1418/    F9DB : D1                  	        POP     D               ; DE CONTAINS P2
    1419/    F9DC : E1                  	        POP     H
    1420/    F9DD : E5                  	        PUSH    H               ; HL CONTAINS P1
    1421/    F9DE : 19                  	        DAD     D               ; HL := HL + DE := P1 + P2
    1422/    F9DF : CD 56 FE                    CALL    LADR            ; DISPLAY SUM
    1423/    F9E2 : CD 93 FC                    CALL    BLK             ; TYPE A SPACE
    1424/    F9E5 : E1                  	        POP     H               ; HL CONTAINS P1 AGAIN
    1425/    F9E6 : 7D                  	        MOV     A,L             ; COMPUTE HL-DE
    1426/    F9E7 : 93                  	        SUB     E               ; A := LSB OF P1 - LSB OF P2
    1427/    F9E8 : 6F                  	        MOV     L,A             ; A := LSB OF (P1 - P2)
    1428/    F9E9 : 7C                  	        MOV     A,H
    1429/    F9EA : 9A                  	        SBB     D               ; A -= MSB OF P1 - MSB OF P2 WITH CARRY
    1430/    F9EB : 67                  	        MOV     H,A             ;H := MSB OF (P1 - P2) 
    1431/    F9EC : CD 56 FE                    CALL    LADR            ; DISPLAY DIFFERENCE
    1432/    F9EF : C9                  	        RET
    1433/    F9F0 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 25 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1434/    F9F0 :                     		;
    1435/    F9F0 :                     		; 'M' COMMAND - MOVE A BLOCK OF MEMORY
    1436/    F9F0 :                     		;
    1437/    F9F0 :                     		; THIS ROUTINE EXPECTS THREE HEXADECIMAL PARAMETERS FROM THE
    1438/    F9F0 :                     		; LOCAL CONSOLE. THE FIRST AND SECOND PARAMETERS ARE THE BOUNDS OF
    1439/    F9F0 :                     		; THE MEMORY AREA TO BE MOVED, THE THIRD PARAMETER IS THE
    1440/    F9F0 :                     		; STARTING ADDRESS OF THE DESTINATION AREA.
    1441/    F9F0 :                     		MOVE:
    1442/    F9F0 : 0C                  	        INR     C               ; GET THREE ADDRESSES
    1443/    F9F1 : CD 39 FE                    CALL    EXPR
    1444/    F9F4 : C1                  	        POP     B               ; DESTINATION ADDRESS
    1445/    F9F5 : D1                  	        POP     D               ; SOURCE END ADDRESS
    1446/    F9F6 : E1                  	        POP     H               ; SOURCE START ADDRESS
    1447/    F9F7 :                     		MV0:
    1448/    F9F7 : 7E                  	        MOV     A,M             ; GET A DATA BYTE
    1449/    F9F8 : 02                  	        STAX    B               ; STORE AT DESTINATION
    1450/    F9F9 : 03                  	        INX     B               ; MOVE DESTINATION POINTER
    1451/    F9FA : CD 4C FE                    CALL    HILO            ; TEST FOR COMPLETION
    1452/    F9FD : D2 F7 F9                    JNC     MV0
    1453/    FA00 : C9                  	        RET
    1454/    FA01 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1455/    FA01 :                     		;
    1456/    FA01 :                     		; 'N' COMMAND - PUNCH NULL CHARACTERS FOR TAPE LEADER/TRAILER
    1457/    FA01 :                     		;
    1458/    FA01 :                     		; THIS ROUTINE PUNCHES 60 NULL CHARACTERS ON THE DEVICE ASSIGNED
    1459/    FA01 :                     		; AS THE PUNCH. IT IS ENTERED VIA A JUMP TO ENTRY POINT NU0
    1460/    FA01 :                     		; FROM THE 'E' COMMAND AS WELL AS BEING INVOKED BY
    1461/    FA01 :                     		; THE 'N' COMMAND.
    1462/    FA01 :                     		NULL:
    1463/    FA01 : CD 61 FF                    CALL    TI              ; REQUIRE CR
    1464/    FA04 : FE 0D                       CPI     CR
    1465/    FA06 : C2 47 F8                    JNZ     ERROR
    1466/    FA09 :                     		NU0:
    1467/    FA09 : 06 3C                       MVI     B,60            ; SET TO PUNCH 60 NULLS
    1468/    FA0B :                     		NLEADX:
    1469/    FA0B : CD E5 FC                    CALL    POC             ; PUNCH ONE ASCII NULL CHARACTER (=00H)
    1470/    FA0E : 00                  	        DB      0
    1471/    FA0F : 05                  	        DCR     B
    1472/    FA10 : C2 0B FA                    JNZ     NLEADX          ; DO IT FOR 60 TIMES
    1473/    FA13 : C9                  	        RET
    1474/    FA14 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1475/    FA14 :                     		;
    1476/    FA14 :                     		; 'Q' COMMAND - I/O SYSTEM STATUS QUERY
    1477/    FA14 :                     		;
    1478/    FA14 :                     		; THIS COMMAND IS INVOKED BY TYPING THE LETTER Q. THIS
    1479/    FA14 :                     		; COMMAND PRODUCES A LISTING OF LOGICAL I/O DEVICES AND
    1480/    FA14 :                     		; THEIR CORRESPONDING PHYSICAL DEVICE ASSIGNMENTS. THE
    1481/    FA14 :                     		; DATA DISPLAYED IS EQUIVALENT TO THE CURRENT VALUE OF IOBYT.
    1482/    FA14 :                     		QUERY:
    1483/    FA14 : CD 61 FF                    CALL    TI              ; REQUIRE CR
    1484/    FA17 : FE 0D                       CPI     CR
    1485/    FA19 : C2 47 F8                    JNZ     ERROR
    1486/    FA1C : 06 04                       MVI     B,4             ; SET UP OUTER LOOP COUNTER.
    1487/    FA1E :                     		                                ;   THERE ARE 4 LOGICAL DEVICES.
    1488/    FA1E : 21 03 F9                    LXI     H,LTBL          ; POINT HL AT LOGICAL DEVICE TABLE.
    1489/    FA21 :                     		Q0:                             ; OUTER LOOP
    1490/    FA21 : CD FE FD                    CALL    CRLF            ; START A NEW LINE.
    1491/    FA24 : 4E                  	        MOV     C,M             ; DISPLAY LOGICAL DEVICE IDENTIFIER.
    1492/    FA25 : CD 95 FC                    CALL    COM
    1493/    FA28 : CD DE FC                    CALL    COMC            ; DISPLAY '='.
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 26 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1494/    FA2B : 3D                  	        DB      '='
    1495/    FA2C : 23                  	        INX     H               ; POINT AT MASK FOR LOGICAL DEVICE.
    1496/    FA2D : 7E                  	        MOV     A,M             ; FETCH MASK.
    1497/    FA2E : 2F                  	        CMA                     ; INVERT IT
    1498/    FA2F : 4F                  	        MOV     C,A             ; PUT IN C
    1499/    FA30 : 23                  	        INX     H               ; POINT AT PHYSICAL DEVICE TABLE
    1500/    FA31 : 5E                  	        MOV     E,M             ; ADDRESS OF SUBORDINATE
    1501/    FA32 : 23                  	        INX     H               ; TABLE
    1502/    FA33 : 56                  	        MOV     D,M
    1503/    FA34 : 23                  	        INX     H
    1504/    FA35 : EB                  	        XCHG                    ; HL <- PHYSICAL DEVICE TABLE
    1505/    FA36 : 3A 03 00                    LDA     IOBYT
    1506/    FA39 : A1                  	        ANA     C               ; PHYSICAL SELECTION
    1507/    FA3A : C5                  	        PUSH    B               ; SAVE OUTER LOOP COUNTER
    1508/    FA3B : 06 04                       MVI     B,4             ; SET UP INNER LOOP COUNTER
    1509/    FA3D :                     		Ql:                             ; INNER LOOP
    1510/    FA3D : 4E                  	        MOV     C,M             ; GET PHYSICAL DEVICE IDENTIFIER
    1511/    FA3E : 23                  	        INX     H
    1512/    FA3F : BE                  	        CMP     M               ; TEST FOR EQUALITY
    1513/    FA40 : CA 48 FA                    JZ      Q2
    1514/    FA43 : 23                  	        INX     H               ; POINT AT NEXT ENTRY
    1515/    FA44 : 05                  	        DCR     B               ; DECREMENT INNER LOOP
    1516/    FA45 : C2 3D FA                    JNZ     Ql
    1517/    FA48 :                     		Q2:
    1518/    FA48 : CD 95 FC                    CALL    COM             ; DISPLAY PHYSICAL DEVICE
    1519/    FA4B : EB                  	        XCHG                    ; POINT AT MASTER TABLE
    1520/    FA4C : C1                  	        POP     B
    1521/    FA4D : 05                  	        DCR     B               ; DECREMENT OUTER LOOP
    1522/    FA4E : C2 21 FA                    JNZ     Q0
    1523/    FA51 : C9                  	        RET
    1524/    FA52 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1525/    FA52 :                     		;
    1526/    FA52 :                     		; 'R' COMMAND - READ HEXADECIMAL FILE
    1527/    FA52 :                     		;
    1528/    FA52 :                     		; THIS ROUTINE READS A HEXADECIMAL FILE FROM THE ASSIGNED
    1529/    FA52 :                     		; READER DEVICE AND LOADS IT INTO MEMORY. ONE HEXADECIMAL
    1530/    FA52 :                     		; PARAMETER IS EXPECTED. THIS PARAMETER IS A BASE ADDRESS
    1531/    FA52 :                     		; TO BE ADDED TO THE MEMORY ADDRESS OF EACH DATA BYTE ENCOUNTERED.
    1532/    FA52 :                     		; IN THIS WAY, HEXADECIMAL FILES MAY BE LOADED INTO MEMORY
    1533/    FA52 :                     		; IN AREAS OTHER THAN THAT FOR WHICH THEY WERE ASSEMBLED OR COMPILED.
    1534/    FA52 :                     		; ALL RECORDS READ ARE CHECKSUMMED AND COMPARED AGAINST THE
    1535/    FA52 :                     		; CHECKSUM IN THE RECORD. IF A CHECKSUM ERROR (OR TAPE READ ERROR)
    1536/    FA52 :                     		; OCCURS, THE ROUTINE TAKES AN ERROR EXIT. NORMAL LOADING IS
    1537/    FA52 :                     		; TERMINATED WHEN AN EOF RECORD IS ENCOUNTERED. THE ADDRESS
    1538/    FA52 :                     		; GIVEN WHEN THE EOF RECORD WAS CREATED (VIA THE lEI COMMAND) REPLACES
    1539/    FA52 :                     		; THE USER'S STORED PC VALUE ONLY IF THE ADDRESS WAS NONZERO.
    1540/    FA52 :                     		; A TRANSFER TO THE PROGRAM MAY THEN BE ACCOMPLISHED BY A IG<CR)'.
    1541/    FA52 :                     		READ:
    1542/    FA52 : 0D                  	        DCR     C               ; GET ONE ADDRESS; C := 1
    1543/    FA53 : CD 39 FE                    CALL    EXPR            ; GET THE HEX BASE ADDRESS
    1544/    FA56 : CD FE FD                    CALL    CRLF            ; OUTPUT A <CR>,<LF>
    1545/    FA59 :                     		RED0:
    1546/    FA59 : CD 58 FF                    CALL    RIX             ; GET AN ASCII CHARACTER FROM THE READER
    1547/    FA5C : FE 3A                       CPI     ':'             ; IS IT A START OF RECORD MARK (':')?
    1548/    FA5E : C2 59 FA                    JNZ     RED0            ; LOOP UNTIL WE FIND SUCH A RECORD MARK
    1549/    FA61 : AF                  	        XRA     A
    1550/    FA62 : 57                  	        MOV     D,A             ; D WILL CONTAIN THE CHECKSUM; INITIALIZE TO 0
    1551/    FA63 : CD DB FD                    CALL    BYTE            ; READ 2 ASCII CHAR REPRESENTING THE RECORD
    1552/    FA66 :                     		                                ;   LENGTH AND DECODE THEM INTO 8 BITS BINARY
    1553/    FA66 :                     		                                ;   STORING THE RESULT IN A-REG
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 27 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1554/    FA66 : CA 9E FA                    JZ      RED3            ; JUMP IF ZERO RECORD LENGTH BECAUSE THIS
    1555/    FA69 :                     		                                ;   MEANS IT'S AN EOF RECORD SO WE'RE DONE
    1556/    FA69 : 5F                  	        MOV     E,A             ; E := RECORD LENGTH
    1557/    FA6A : CD DB FD                    CALL    BYTE            ; GET MSB OF LOAD ADDRESS
    1558/    FA6D : 67                  	        MOV     H,A             ; H := MSB OF LOAD ADDRESS
    1559/    FA6E : CD DB FD                    CALL    BYTE            ; GET LSB OF LOAD ADDRESS
    1560/    FA71 : 6F                  	        MOV     L,A             ; L := LSB OF LOAD ADDRESS
    1561/    FA72 : CD DB FD                    CALL    BYTE            ; GET RECORD TYPE AND IGNORE IT
    1562/    FA75 : 4B                  	        MOV     C,E             ; C := RECORD LENGTH
    1563/    FA76 : E5                  	        PUSH    H               ; STORE LOAD ADDRESS ON THE STACK
    1564/    FA77 : 21 00 FF                    LXI     H,-256          ; COMPUTE BUFFER POINTER
    1565/    FA7A : 39                  	        DAD     SP              ; HL NOW POINTS TO THAT PART OF THE MONITOR
    1566/    FA7B :                     		                                ;   STACK ONE PAGE (256 BYTES) BELOW WHERE
    1567/    FA7B :                     		                                ;   THE SP IS CURRENTLY POINTING
    1568/    FA7B :                     		                                ; WE WILL NOW READ DATA FROM THE FILE RECORD
    1569/    FA7B :                     		                                ; AND STORE THEM TEMPORARILY IN THE MONITOR'S
    1570/    FA7B :                     		                                ; STACK STARTING FROM A LOW MEMORY ADDRESS AND
    1571/    FA7B :                     		                                ; MOVING TOWARD A HIGHER MEMORY ADDRESS (REVERSE
    1572/    FA7B :                     		                                ; OF USUAL PROCEDURE WHERE STACK GROWS DOWN)
    1573/    FA7B :                     		RED1:
    1574/    FA7B : CD DB FD                    CALL    BYTE            ; READ DATA; NOTE: 8 BITS OF MEMORY (DATA)
    1575/    FA7E :                     		                                ; IS REPRESENTED AS 2 HEX CHAR AND EACH HEX
    1576/    FA7E :                     		                                ; HEX CHAR IS REPRESENTED AS ONE 8 BIT ASCII CHAR
    1577/    FA7E : 77                  	        MOV     M,A             ; PUT DATA IN MONITOR BUFFER
    1578/    FA7F : 23                  	        INX     H               ; MOVE "UP" THE STACK
    1579/    FA80 : 1D                  	        DCR     E               ; DECREMENT RECORD LENGTH COUNT
    1580/    FA81 : C2 7B FA                    JNZ     RED1            ; LOOP UNTIL RECORD LENGTH COUNTER IS 0
    1581/    FA84 : CD DB FD                    CALL    BYTE            ; READ THE CHECKSUM RECORD FRAME --- PRIOR TO
    1582/    FA87 :                     		                                ;   CALL TO BYTE, D-REG CONTAINED SUM OF DATA
    1583/    FA87 :                     		                                ;   RECORDS. THE CHECKSUM FRAME SHOULD CONTAIN
    1584/    FA87 :                     		                                ;   THE NEGATIVE OF THIS SUM. BYTE ADDS D AND A
    1585/    FA87 :                     		                                ;   TOGETHER AND SETS THE ZERO BIT IF D = (-A)
    1586/    FA87 : C2 47 F8                    JNZ     ERROR           ; CHECKSUM ERROR
    1587/    FA8A : D1                  	        POP     D               ; DE = LOAD ADDRESS; STACK ENTRY POINTED TO BY SP
    1588/    FA8B :                     		                                ;   NOW CONTAINS BASE (BIAS) ADDRESS
    1589/    FA8B : E3                  	        XTHL                    ; HL = BIAS ADDRESS; CONTENTS OF STACK ENTRY
    1590/    FA8C :                     		                                ;   POINTED TO BY SP NOW IS ADDRESS ONE ABOVE
    1591/    FA8C :                     		                                ;   WHERE LAST DATA IS STORED IN MONITOR STACK 
    1592/    FA8C : EB                  	        XCHG                    ; DE BIAS ADDRESS, HL = LOAD ADDRESS
    1593/    FA8D : 19                  	        DAD     D               ; HL BIAS + LA
    1594/    FA8E : 06 00                       MVI     B,0             ; BC RECORD LENGTH (RL)
    1595/    FA90 : 09                  	        DAD     B               ; HL BIAS + LA + RL
    1596/    FA91 : EB                  	        XCHG                    ; DE BIAS + LA + RL, HL = BIAS
    1597/    FA92 : E3                  	        XTHL                    ; HL POINTS TO ADDRESS 1 GREATER THAN WHERE LAST
    1598/    FA93 :                     		                                ;   DATA IS STORED IN MONITOR STACK
    1599/    FA93 :                     		;------------------------------
    1600/    FA93 :                     		RED2:                           ; LOAD INTO PROPER AREA IN RAM BUT IN
    1601/    FA93 :                     		                                ;   REVERSE ORDER
    1602/    FA93 : 2B                  	        DCX     H               ; DECREMENT STACK BUFFER POINTER
    1603/    FA94 : 7E                  	        MOV     A,M             ; A := DATA 
    1604/    FA95 : 1B                  	        DCX     D               ; DECREMENT MEMORY POINTER
    1605/    FA96 : 12                  	        STAX    D               ; PUT DATA IN DESIGNATED ADDRESS
    1606/    FA97 : 0D                  	        DCR     C               ; KEEP DOING THIS UNTIL RECORD LENGTH
    1607/    FA98 : C2 93 FA                    JNZ     RED2            ;   COUNT IS EXHAUSTED
    1608/    FA9B : C3 59 FA                    JMP     RED0            ; DONE WITH ONE RECORD, GO GET ANOTHER
    1609/    FA9E :                     		;-------------------------------
    1610/    FA9E :                     		RED3:                           ; EOF RECORD - ENTIRE FILE HAS BEEN READ IN
    1611/    FA9E : C5                  	        PUSH    B               ; SAVE B,C
    1612/    FA9F : CD DB FD                    CALL    BYTE            ; GET MSB OF LOAD ADDRESS OF EOF RECORD ---
    1613/    FAA2 :                     		                                ;   THIS IS THE <START ADDRESS> SPECIFIED IN
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 28 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1614/    FAA2 :                     		                                ;   THE 'E' COMMAND. IF IT IS ZERO, DO NOT
    1615/    FAA2 :                     		                                ;   MODIFY THE USER'S STORED PC IN EXIT TEMPLATE
    1616/    FAA2 : 47                  	        MOV     B,A             ; B := MSB OF START ADDRESS
    1617/    FAA3 : CD DB FD                    CALL    BYTE            ; GET LSB OF START ADDRESS
    1618/    FAA6 : 4F                  	        MOV     C,A             ; C := LSB OF START ADDRESS
    1619/    FAA7 : B0                  	        ORA     B               ; SEE IF START ADDRESS IS 0000
    1620/    FAA8 : CA B3 FA                    JZ      RED4            ; JUMP IF IT IS (DON'T SET NEW PC)
    1621/    FAAB : 2A 04 00                    LHLD    MEMTOP
    1622/    FAAE : 2E E1                       MVI     L,PLOC & 0FFH ; HL POINTS TO PLOC IN EXIT CODE IN TOP OF RAM
    1623/    FAB0 : 70                  	        MOV     M,B             ; STORE MSB OF START ADDRESS
    1624/    FAB1 : 2B                  	        DCX     H               ; HL POINTS TO PLOC - 1 OF EXIT CODE
    1625/    FAB2 : 71                  	        MOV     M,C             ; STORE LSB OF START ADDRESS
    1626/    FAB3 :                     		RED4:                           ; FINISH PROCESSING EOF RECORD
    1627/    FAB3 : C1                  	        POP     B               ; RESTORE B,C
    1628/    FAB4 : CD DB FD                    CALL    BYTE            ; GET RECORD TYPE AND IGNORE IT
    1629/    FAB7 : CD DB FD                    CALL    BYTE            ; GET CHECKSUM
    1630/    FABA : C2 47 F8                    JNZ     ERROR           ; JUMP IF CHECKSUM ERROR
    1631/    FABD : E1                  	        POP     H               ; CUT BACK STACK POINTER
    1632/    FABE : C9                  	        RET
    1633/    FABF :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1634/    FABF :                     		;
    1635/    FABF :                     		; 'S' COMMAND - SUBSTITUTE MEMORY
    1636/    FABF :                     		;
    1637/    FABF :                     		; THIS ROUTINE EXPECTS ONE PARAMETER FROM THE LOCAL CONSOLE, FOLLOWED
    1638/    FABF :                     		; BY A SPACE. THE PARAMETER IS INTERPRETED AS A MEMORY LOCATI9N
    1639/    FABF :                     		; AND THE ROUTINE WILL DISPLAY THE CONTENTS OF THAT LOCATION,
    1640/    FABF :                     		; FOLLOWED BY A DASH (-). TO MODIFY MEMORY, TYPE IN THE NEW DATA
    1641/    FABF :                     		; FOLLOWED BY A SPACE OR A CARRIAGE RETURN. IF NO MODIFICATION
    1642/    FABF :                     		; OF THE LOCATION IS REQUIRED, TYPE ONLY A SPACE OR CARRIAGE RETURN.
    1643/    FABF :                     		; IF A SPACE WAS LAST TYPED, THE NEXT MEMORY LOCATION WILL BE DISPLAYED
    1644/    FABF :                     		; AND MODIFICATION OF IT IS ALLOWED. IF A CARRIAGE RETURN WAS ENTERED,
    1645/    FABF :                     		; THE COMMAND IS TERMINATED.
    1646/    FABF :                     		;
    1647/    FABF :                     		SUBS:
    1648/    FABF : CD 74 FE                    CALL     PARAM          ; GET MEMORY ADDRESS
    1649/    FAC2 : D8                  	        RC                      ; ONLY CR ENTERED SO RETURN TO MAIN COMMAND LOOP
    1650/    FAC3 :                     		SU0:
    1651/    FAC3 : 7E                  	        MOV     A,M             ; HL HAS REQUESTED MEMORY ADDRESS
    1652/    FAC4 : CD 5B FE                    CALL    LBYTE           ; DISPLAY CONTENTS OF THAT ADDRESS
    1653/    FAC7 : CD DE FC                    CALL    COMC            ; OUTPUT PROMPT CHARACTER
    1654/    FACA : 2D                  	        DB      '-'
    1655/    FACB : CD C5 FE                    CALL    PCHK
    1656/    FACE : D8                  	        RC                      ; CR ENTERED, RETURN TO COMMAND MODE
    1657/    FACF : CA D9 FA                    JZ      SU1             ; SPACE ENTERED, SPACE BY
    1658/    FAD2 : EB                  	        XCHG                    ; SAVE MEMORY ADDRESS
    1659/    FAD3 : CD 7A FE                    CALL    PA0             ; GET NEW VALUE
    1660/    FAD6 : EB                  	        XCHG                    ; E = VALUE
    1661/    FAD7 : 73                  	        MOV     M,E             ; STORE NEW VALUE
    1662/    FAD8 : D8                  	        RC                      ; CR ENTERED AFTER VALUE, RETURN
    1663/    FAD9 :                     		SU1:
    1664/    FAD9 : 23                  	        INX     H               ; HL POINTS TO NEXT MEMORY LOCATION
    1665/    FADA : C3 C3 FA                    JMP     SU0
    1666/    FADD :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1667/    FADD :                     		;
    1668/    FADD :                     		; 'W' COMMAND - WRITE HEXADECIMAL FILE
    1669/    FADD :                     		;
    1670/    FADD :                     		; THIS ROUTINE EXPECTS TWO HEXADECIMAL PARAMETERS WHICH ARE
    1671/    FADD :                     		; INTERPRETED AS THE BOUNDS OF A MEMORY AREA TO BE ENCODED
    1672/    FADD :                     		; INTO HEXADECIMAL FORMAT AND PUNCHED ON THE ASSIGNED PUNCH
    1673/    FADD :                     		; DEVICE.
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 29 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1674/    FADD :                     		WRITE:
    1675/    FADD : CD 39 FE                    CALL    EXPR            ; GET ADDRESS RANGE
    1676/    FAE0 : CD FE FD                    CALL    CRLF            ; NEW LINE
    1677/    FAE3 : D1                  	        POP     D               ; DE := HIGH ADDRESS
    1678/    FAE4 : E1                  	        POP     H               ; HL := LOW ADDRESS
    1679/    FAE5 :                     		WR0:
    1680/    FAE5 : CD E5 FC                    CALL    POC             ; EMIT RECORD MARK
    1681/    FAE8 : 3A                  	        DB      ':'
    1682/    FAE9 : 01 10 00                    LXI     B,16            ; INITIALIZE B := 0, C := AH (DECIMAL
    1683/    FAEC :                     		;-------------------------------
    1684/    FAEC : E5                  	        PUSH    H               ; SAVE HL
    1685/    FAED :                     		WR1:
    1686/    FAED : 04                  	        INR     B               ; INCREMENT RECORD LENGTH
    1687/    FAEE : 0D                  	        DCR     C
    1688/    FAEF : CA F8 FA                    JZ      WR2             ; TERMINATE ON COUNT OF 16 BYTES
    1689/    FAF2 : CD 4C FE                    CALL    HILO            ; OR END OF RANGE 
    1690/    FAF5 : D2 ED FA                    JNC     WR1             ; WHICHEVER OCCURS FIRST
    1691/    FAF8 :                     		;-------------------------------
    1692/    FAF8 :                     		WR2:                            ; OUTPUT A DATA RECORD
    1693/    FAF8 : E1                  	        POP     H               ; RESTORE HL := LOW ADDRESS
    1694/    FAF9 : D5                  	        PUSH    D               ; SAVE HIGH ADDRESS
    1695/    FAFA : 16 00                       MVI     D,0             ; INITIALIZE CHECKSUM D := 0
    1696/    FAFC : 78                  	        MOV     A,B             ; A := RECORD LENGTH
    1697/    FAFD : CD AF FE                    CALL    PBYTE           ; EMIT RECORD LENGTH
    1698/    FB00 : CD AA FE                    CALL    PADR            ; EMIT HL := LOW ADDRESS
    1699/    FB03 : AF                  	        XRA     A
    1700/    FB04 : CD AF FE                    CALL    PBYTE           ; EMIT RECORD TYPE = 1
    1701/    FB07 :                     		;-------------------------------
    1702/    FB07 :                     		WR3:
    1703/    FB07 : 7E                  	        MOV     A,M             ; FETCH DATA
    1704/    FB08 : CD AF FE                    CALL    PBYTE           ; EMIT IT
    1705/    FB0B : 23                  	        INX     H               ; INCREMENT MEMORY ADDRESS
    1706/    FB0C : 05                  	        DCR     B               ; DECREMENT COUNT
    1707/    FB0D : C2 07 FB                    JNZ     WR3             ; LOOP UNTIL ENTIRE RECORD HAS BEEN OUTPUT
    1708/    FB10 : AF                  	        XRA     A
    1709/    FB11 : 92                  	        SUB     D               ; D CONTAINS RUNNING CHECKSUM
    1710/    FB12 : CD AF FE                    CALL    PBYTE           ; EMIT CHECKSUM := -D
    1711/    FB15 : D1                  	        POP     D               ; RESTORE DE := HIGH ADDRESS
    1712/    FB16 : 2B                  	        DCX     H               ; BACKUP MEMORY POINTER
    1713/    FB17 :                     		                                ; NOW PUNCH CR,LF --- IGNORED BY THE 'R'
    1714/    FB17 :                     		                                ;   COMMAND BUT HANDY IF LISTING PUNCHED
    1715/    FB17 :                     		                                ;   TAPE ON THE TTY
    1716/    FB17 : CD E5 FC                    CALL    POC             ; PUNCH CARRIAGE RETURN
    1717/    FB1A : 0D                  	        DB      CR
    1718/    FB1B : CD E5 FC                    CALL    POC             ; PUNCH LINE FEED CHARACTER
    1719/    FB1E : 0A                  	        DB      LF
    1720/    FB1F : CD 4C FE                    CALL    HILO            ; TEST FOR TERMINATION
    1721/    FB22 : D2 E5 FA                    JNC     WR0             ; IF NOT DONE, FORM NEXT RECORD AND OUTPUT IT
    1722/    FB25 : C9                  	        RET
    1723/    FB26 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1724/    FB26 :                     		;
    1725/    FB26 :                     		; 'X' COMMAND - EXAMINE AND MODIFY CPU REGISTERS
    1726/    FB26 :                     		;
    1727/    FB26 :                     		; THIS ROUTINE ALLOWS THE OPERATOR TO EXAMINE AND/OR MODIFY
    1728/    FB26 :                     		; THE CONTENTS OF THE USER PROGRAM'S REGISTERS. THE REGISTER
    1729/    FB26 :                     		; VALUES WERE STORED AS A RESULT OF A PREVIOUS BREAKPOINT AND
    1730/    FB26 :                     		; WILL BE RESTORED TO THE USER PROGRAM DURING A SUBSEQUENT 'G'
    1731/    FB26 :                     		; COMMAND.
    1732/    FB26 :                     		X:
    1733/    FB26 : 21 81 FB                    LXI     H,ACTBL         ; POINT TO ACCESS TABLE
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 30 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1734/    FB29 : CD C5 FE                    CALL    PCHK            ; GET REGISTER IDENTIFIER
    1735/    FB2C : DA 6A FB                    JC      X5              ; IF CARRY = 1, CR ENTERED
    1736/    FB2F : 0E 0C                       MVI     C,NREGS
    1737/    FB31 :                     		X0:
    1738/    FB31 : BE                  	        CMP     M 
    1739/    FB32 : CA 3F FB                    JZ      X1              ; MATCHED REGISTER IDENTIFIER
    1740/    FB35 : 23                  	        INX     H               ; POINT TO NEXT TABLE ENTRY
    1741/    FB36 : 23                  	        INX     H
    1742/    FB37 : 23                  	        INX     H
    1743/    FB38 : 0D                  	        DCR     C               ; DECREMENT REGISTER COUNTER
    1744/    FB39 : C2 31 FB                    JNZ     X0              ; TRY AGAIN
    1745/    FB3C : C3 47 F8                    JMP     ERROR           ; NOT IN TABLE, ERROR
    1746/    FB3F :                     		X1:
    1747/    FB3F : CD 93 FC                    CALL    BLK
    1748/    FB42 :                     		X2:
    1749/    FB42 : CD 25 FE                    CALL    DREG            ; DISPLAY THE REGISTER
    1750/    FB45 : CD DE FC                    CALL    COMC
    1751/    FB48 : 2D                  	        DB      '-'             ; TYPE PROMPT
    1752/    FB49 : CD C5 FE                    CALL    PCHK            ; SKIP IF NULL ENTRY
    1753/    FB4C : D8                  	        RC                      ; CR ENTERED, RETURN TO COMMAND MODE
    1754/    FB4D : CA 60 FB                    JZ      X4
    1755/    FB50 : E5                  	        PUSH    H               ; SAVE POINTER TO ACTBL
    1756/    FB51 : C5                  	        PUSH    B               ; SAVE PRECISION
    1757/    FB52 : CD 7A FE                    CALL    PA0             ; GET NEW REG VALUE
    1758/    FB55 : 7D                  	        MOV     A,L
    1759/    FB56 : 12                  	        STAX    D               ; STORE LSB IN REGISTER AREA
    1760/    FB57 : F1                  	        POP     PSW             ; RETRIEVE PRECISION (A)
    1761/    FB58 : B7                  	        ORA     A               ; SET SIGN
    1762/    FB59 : FA 5F FB                    JM      X3              ; 8 BITS ONLY
    1763/    FB5C : 13                  	        INX     D
    1764/    FB5D : 7C                  	        MOV     A,H
    1765/    FB5E : 12                  	        STAX    D               ; STORE MSB IN REGISTER AREA
    1766/    FB5F :                     		X3:
    1767/    FB5F : E1                  	        POP     H               ; RETRIEVE ACTBL POINTER
    1768/    FB60 :                     		X4:
    1769/    FB60 : AF                  	        XRA     A
    1770/    FB61 : B6                  	        ORA     M
    1771/    FB62 : F8                  	        RM                      ; END OF TABLE, RETURN TO COMMAND MODE
    1772/    FB63 : 78                  	        MOV     A,B             ; TEST DELIMITER
    1773/    FB64 : FE 0D                       CPI     CR
    1774/    FB66 : C8                  	        RZ                      ; CR ENTERED, RETURN TO COMMAND MODE
    1775/    FB67 : C3 42 FB                    JMP     X2
    1776/    FB6A :                     		;       ---------------------------------------------------------------
    1777/    FB6A :                     		X5:                             ; DISPLAY ALL THE REGISTER VALUES
    1778/    FB6A : CD FE FD                    CALL    CRLF
    1779/    FB6D :                     		X6:
    1780/    FB6D : CD 93 FC                    CALL    BLK             ; OUTPUT A SPACE
    1781/    FB70 : AF                  	        XRA     A               ; CLEAR A
    1782/    FB71 : B6                  	        ORA     M               ; SET CONDITION CODES
    1783/    FB72 : F8                  	        RM                      ; ALL DONE, RETURN TO COMMAND MODE
    1784/    FB73 : 4E                  	        MOV     C,M             ; C CONTAINS A REGISTER IDENTIFIER (A,B,C,D ��� )
    1785/    FB74 : CD 95 FC                    CALL    COM             ; PRINT CHARACTER
    1786/    FB77 : CD DE FC                    CALL    COMC            ; PRINT EQUAL SIGN
    1787/    FB7A : 3D                  	        DB      '='
    1788/    FB7B : CD 25 FE                    CALL    DREG            ; DISPLAY REGISTER CONTENTS
    1789/    FB7E : C3 6D FB                    JMP     X6              ; CONTINUE
    1790/    FB81 :                     		;
    1791/    FB81 :                     		; TABLE FOR ACCESSING REGISTERS
    1792/    FB81 :                     		; TABLE CONTAINS:
    1793/    FB81 :                     		;       (1) REGISTER IDENTIFIER
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 31 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1794/    FB81 :                     		;       (2) LOCATION ON STORAGE PAGE
    1795/    FB81 :                     		;       (3) PRECISION
    1796/    FB81 :                     		ACTBL:
    1797/    FB81 : 41 CF 00                    DB      'A',    ALOC & HMSK,      0
    1798/    FB84 : 42 CB 00                    DB      'B',    BLOC & HMSK,      0
    1799/    FB87 : 43 CA 00                    DB      'C',    CLOC & HMSK,      0
    1800/    FB8A : 44 C9 00                    DB      'D',    DLOC & HMSK,      0
    1801/    FB8D : 45 C8 00                    DB      'E',    ELOC & HMSK,      0
    1802/    FB90 : 46 CE 00                    DB      'F',    FLOC & HMSK,      0
    1803/    FB93 : 48 DD 00                    DB      'H',    HLOC & HMSK,      0
    1804/    FB96 : 49 CD 00                    DB      'I',    ILOC & HMSK,      0
    1805/    FB99 : 4C DC 00                    DB      'L',    LLOC & HMSK,      0
    1806/    FB9C : 4D DD 01                    DB      'M',    HLOC & HMSK,      1
    1807/    FB9F : 50 E1 01                    DB      'P',    PLOC & HMSK,      1
    1808/    FBA2 : 53 D1 01                    DB      'S',    SLOC & HMSK,      1
    1809/    FBA5 : FF                  	        DB      -1
    1810/    FBA6 : =0CH                 NREGS   EQU     ($-ACTBL)/3     ; LENGTH OF ACCESS TABLE
    1811/    FBA6 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    1812/    FBA6 :                     		;
    1813/    FBA6 :                     		; 'z' COMMAND - TRANSFER CONTROL TO DIAGNOSTIC PROGRAM IN PROM
    1814/    FBA6 :                     		; THIS ROUTINE EXPECTS A '$' AT WHICH POINT IT WILL CALL THE DIAGNOSTIC PROGRAM.
    1815/    FBA6 :                     		Z:
    1816/    FBA6 : CD 61 FF                    CALL    TI              ; GET A CHARACTER FROM THE CONSOLE
    1817/    FBA9 : FE 24                       CPI     '$'             ; IS IT A '$'?
    1818/    FBAB : C2 47 F8                    JNZ     ERROR           ; ERROR IF IT ISN'T
    1819/    FBAE : CD 61 FF                    CALL    TI              ; GET A CHARACTER FROM THE CONSOLE
    1820/    FBB1 : FE 0D                       CPI     CR              ; EXPECT A CARRIAGE RETURN
    1821/    FBB3 : C2 47 F8                    JNZ     ERROR           ; ERROR IF IT ISN'T
    1822/    FBB6 : 3E 0C                       MVI     A,BTDGON        ; TURN ON THE BOOT/DIAGNOSTIC PROM
    1823/    FBB8 : D3 FF                       OUT     CPUC
    1824/    FBBA : CD 00 EB                    CALL    DIAGMN          ; CALL THE DIAGNOSTIC PROGRAM
    1825/    FBBD : C9                  	        RET                     ; RETURN TO MAIN COMMAND LOOP
    1826/    FBBE :                     		;********************************************************************************
    1827/    FBBE :                     		;*                                                                              *
    1828/    FBBE :                     		;*  END OF MONITOR COMMANDS, BEGINNING OF I/O ROUTINES                          *
    1829/    FBBE :                     		;*                                                                              *
    1830/    FBBE :                     		;********************************************************************************
    1831/    FBBE :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1832/    FBBE :                     		; 'CI' - EXTERNALLY REFERENCED ROUTINE                                          ;
    1833/    FBBE :                     		;        ENTERED VIA CALL FROM 'TI' ROUTINE                                     ;
    1834/    FBBE :                     		; PROCESS: LOCAL CONSOLE INPUT CODE                                             ;
    1835/    FBBE :                     		; INPUT:                                                                        ;
    1836/    FBBE :                     		; OUTPUT: CHARACTER RETURNED IN A-REG                                           ;
    1837/    FBBE :                     		; MODIFIED: A, FLAGS                                                            ;
    1838/    FBBE :                     		; STACK USAGE: 2 BYTES                                                          ;
    1839/    FBBE :                     		; EXPLANATION: BASED ON I/O STATUS BYTE (IOBYT), DECIDE IF CONSOLE INPUT        ;
    1840/    FBBE :                     		;   DEVICE IS TTY, CRT, BATCH, OR USER-DEFINED DEVICE. IF IT IS TTY OR CRT      ;
    1841/    FBBE :                     		;   LOOP UNTIL READ, INPUT THE CHARACTER, THEN RETURN. IF IT IS BATCH,          ;
    1842/    FBBE :                     		;   JUMP TO 'RI' ROUTINE. IF IT IS USER-DEFINED DEVICE, JUMP TO @USER.          ;
    1843/    FBBE :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1844/    FBBE :                     		CI:                             ; LOCAL CONSOLE INPUT
    1845/    FBBE : 3A 03 00                    LDA     IOBYT           ; GET STATUS BYTE
    1846/    FBC1 : E6 03                       ANI     NCMSK        ; LOOK AT ONLY CONSOLE FIELD
    1847/    FBC3 : C2 D0 FB                    JNZ     CI0             ; JUMP IF CONSOLE IS NOT TTY
    1848/    FBC6 :                     		;-------------------------------
    1849/    FBC6 :                     		; CONSOLE = TTY
    1850/    FBC6 :                     		TTYIN:
    1851/    FBC6 : DB F5                       IN      TTYS            ; TTY STATUS PORT
    1852/    FBC8 : E6 02                       ANI     RRDY            ; CHECK FOR RECEIVE BUFFER READY
    1853/    FBCA : CA C6 FB                    JZ      TTYIN           ; LOOP UNTIL IT IS READY
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 32 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1854/    FBCD : DB F4                       IN      TTYI            ; INPUT CHARACTER FROM TTY
    1855/    FBCF : C9                  	        RET                     ; RETURN; CHARACTER IN A-REG
    1856/    FBD0 :                     		;-------------------------------
    1857/    FBD0 :                     		; CONSOLE = CRT, BATCH, OR USER-DEFINED
    1858/    FBD0 :                     		CI0:
    1859/    FBD0 : FE 01                       CPI     CCRT            ; LOCAL CONSOLE = CRT?
    1860/    FBD2 : C2 FD FB                    JNZ     CI4             ; JUMP IF CONSOLE IS NOT CRT
    1861/    FBD5 : E5                  	        PUSH    H               ; SAVE HL
    1862/    FBD6 : 2A 04 00                    LHLD    MEMTOP
    1863/    FBD9 : 2E CC                       MVI     L,(ILOC-1) & 0FFH; HL NOW POINTS TO CONFIGURATION BYTE STORED
    1864/    FBDB :                     		                                ;   IN EXIT TEMPLATE IN TOP PAGE OF RAM
    1865/    FBDB : 7E                  	        MOV     A,M             ; A := CONFIGURATION BYTE
    1866/    FBDC : E1                  	        POP     H               ; RESTORE HL
    1867/    FBDD : 0F                  	        RRC                     ; ROTATE BIT 0 INTO CARRY BIT, THUS CARRY = 1
    1868/    FBDE :                     		                                ;   MEANS RUNNING ON SYSTEM WITHOUT INTEGRATED
    1869/    FBDE :                     		                                ; CRT
    1870/    FBDE : D2 EB FB                    JNC     CI2             ; JUMP IF INTEGRATED CRT IS PRESENT
    1871/    FBE1 :                     		;-------------------------------
    1872/    FBE1 :                     		; CONSOLE = SERIAL CRT
    1873/    FBE1 :                     		CI1:
    1874/    FBE1 : DB F7                       IN      USCS            ; INPUT CRT STATUS
    1875/    FBE3 : E6 02                       ANI     RRDY            ; CHECK FOR RECEIVER BUFFER READY
    1876/    FBE5 : CA E1 FB                    JZ      CI1             ; LOOP UNTIL IT IS READY
    1877/    FBE8 : DB F6                       IN      USCI            ; GET CHARACTER FROM THE CRT
    1878/    FBEA : C9                  	        RET                     ; RETURN; CHARACTER IS IN A-REG
    1879/    FBEB :                     		;-------------------------------
    1880/    FBEB :                     		; CONSOLE = INTEGRATED CRT
    1881/    FBEB :                     		CI2:
    1882/    FBEB : C5                  	        PUSH    B               ; SAVE B,C
    1883/    FBEC :                     		CI3:
    1884/    FBEC : 06 13                       MVI     B,KSTS          ; LOAD KEYBOARD STATUS COMMAND
    1885/    FBEE : CD 7F FF                    CALL    IOCDR1          ; INPUT KEYBOARD STATUS FROM IOC
    1886/    FBF1 : E6 01                       ANI     KRDY            ; IS THE KEYBOARD READY?
    1887/    FBF3 : CA EC FB                    JZ      CI3             ; LOOP UNTIL IT IS
    1888/    FBF6 : 06 12                       MVI     B,KEYC          ; LOAD INPUT DATA COMMAND
    1889/    FBF8 : CD 7F FF                    CALL    IOCDR1          ; INPUT DATA FROM THE KEYBOARD
    1890/    FBFB : C1                  	        POP     B               ; RESTORE B,C
    1891/    FBFC : C9                  	        RET                     ; RETURN; CHARACTER IS IN A-REG
    1892/    FBFD :                     		;-------------------------------
    1893/    FBFD :                     		; CONSOLE IS BATCH OR USER-DEFINED DEVICE
    1894/    FBFD :                     		CI4:
    1895/    FBFD : FE 02                       CPI     BATCH
    1896/    FBFF : CA 0F FC                    JZ      RI              ; BATCH MODE, INPUT = READER
    1897/    FC02 : 3E E8                       MVI     A,CILOC & HMSK; USER DEFINE LOCAL CONSOLE INPUT
    1898/    FC04 :                     		;        JMP     @USER
    1899/    FC04 : C3 8C FC                    JMP     MUSER
    1900/    FC07 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1901/    FC07 :                     		; 'BREAK' - ENTERED VIA CALLS FROM 'BLK','COM','LOM ' ROUTINES
    1902/    FC07 :                     		; PROCESS: TEST FOR OPERATOR INTERRUPTION OF COMMAND (I.E. DID OPERATOR
    1903/    FC07 :                     		;          DEPRESS THE "BREAK" KEY)
    1904/    FC07 :                     		; INPUT:
    1905/    FC07 :                     		; OUTPUT:
    1906/    FC07 :                     		; MODIFIED: A,FLAGS
    1907/    FC07 :                     		; STACK USAGE: 4 BYTES
    1908/    FC07 :                     		BREAK:
    1909/    FC07 : CD 44 FD                    CALL    CSTS            ; SEE IF A KEY WAS DEPRESSED
    1910/    FC0A : B7                  	        ORA     A
    1911/    FC0B : C8                  	        RZ                      ; NO CHARACTER READY
    1912/    FC0C : C3 61 FF                    JMP     TI              ; GET THE CHARACTER
    1913/    FC0F :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 33 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1914/    FC0F :                     		; 'RI' - EXTERNALLY REFERENCED ROUTINE                                          ;
    1915/    FC0F :                     		;       ENTERED VIA CALLS FROM 'CI','RIX' ROUTINES                              ;
    1916/    FC0F :                     		; PROCESS: READER INPUT CODE                                                    ;
    1917/    FC0F :                     		; INPUT:                                                                        ;
    1918/    FC0F :                     		; OUTPUT: CARRY = 0 AND VALID CHARACTER IN A-REG, OTHERWISE                     ;
    1919/    FC0F :                     		; CARRY = 1 AND INVALID DATA (ZEROES) IN A-REG                                  ;
    1920/    FC0F :                     		; MODIFIED: A, FLAGS                                                            ;
    1921/    FC0F :                     		; STACK USAGE: 8 BYTES                                                          ;
    1922/    FC0F :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1923/    FC0F :                     		RI:                             ; READER INPUT
    1924/    FC0F : E5                  	        PUSH    H               ; SAVE HL
    1925/    FC10 : 3A 03 00                    LDA     IOBYT           ; GET STATUS BYTE
    1926/    FC13 : E6 0C                       ANI     NRMSK        ; GET READER BITS
    1927/    FC15 : C2 58 FC                    JNZ     RI5             ; JUMP IF READER IS NOT THE TTY
    1928/    FC18 :                     		;-------------------------------
    1929/    FC18 :                     		; READER = TTY
    1930/    FC18 : C5                  	        PUSH    B               ; SAVE BC
    1931/    FC19 : 3E 0D                       MVI     A,DISABL        ; HOLD UP INTERRUPTS WHILE TAPE IS ADVANCING
    1932/    FC1B : D3 FF                       OUT     CPUC
    1933/    FC1D : DB F4                       IN      TTYI            ; CLEAR RECEIVE BUFFER BY READING IN ANY
    1934/    FC1F :                     		                                ;   DATA THAT MAY BE THERE
    1935/    FC1F :                     		RI0:
    1936/    FC1F : DB F5                       IN      TTYS            ; READ IN USART STATUS
    1937/    FC21 : E6 04                       ANI     TXBE            ; CHECK FOR TRANSMITTER BUFFER EMPTY
    1938/    FC23 : CA 1F FC                    JZ      RI0             ; TRY AGAIN IF NOT EMPTY
    1939/    FC26 : 3E 27                       MVI     A,TADV          ; ADVANCE THE TAPE
    1940/    FC28 : D3 F5                       OUT     TTYC            ; OUTPUT THE ADVANCE COMMAND
    1941/    FC2A : 06 30                       MVI     B,RADCT         ; INITIALIZE TIMER FOR 45 MS.
    1942/    FC2C :                     		RI1:
    1943/    FC2C : CD 1E FE                    CALL    DELAY           ; DELAY FOR 1 MILLISECONDS
    1944/    FC2F : 05                  	        DCR     B               ; DECREMENT TIMER
    1945/    FC30 : C2 2C FC                    JNZ     RI1             ; JUMP IF TIMER NOT EXPIRED
    1946/    FC33 : 3E 25                       MVI     A,COMD          ; STOP THE READER ADVANCE
    1947/    FC35 : D3 F5                       OUT     TTYC            ; OUTPUT STOP COMMAND
    1948/    FC37 : 06 FA                       MVI     B,RTOCT         ; INITIALIZE TIMER FOR 250 MS.
    1949/    FC39 :                     		RI2:
    1950/    FC39 : DB F5                       IN      TTYS            ; INPUT READER STATUS
    1951/    FC3B : E6 02                       ANI     RRDY            ; CHECK FOR RECEIVER BUFFER READY
    1952/    FC3D : C2 4C FC                    JNZ     RI4             ; YES - DATA IS READY
    1953/    FC40 : CD 1E FE                    CALL    DELAY           ; DELAY 1 MS
    1954/    FC43 : 05                  	        DCR     B               ; DECREMENT TIMER
    1955/    FC44 : C2 39 FC                    JNZ     RI2             ; JUMP IF TIMER NOT EXPIRED
    1956/    FC47 :                     		RI3:
    1957/    FC47 : AF                  	        XRA     A               ; ZERO A, RESET CARRY
    1958/    FC48 : 37                  	        STC                     ; SET CARRY INDICATING EOF
    1959/    FC49 : C3 4F FC                    JMP     RI4B
    1960/    FC4C :                     		RI4:
    1961/    FC4C : DB F4                       IN      TTYI
    1962/    FC4E : B7                  	        ORA     A               ; CLEAR CARRY
    1963/    FC4F :                     		RI4B:
    1964/    FC4F : F5                  	        PUSH    PSW             ; SAVE DATA
    1965/    FC50 : 3E 05                       MVI     A,ENABL         ; PERMIT INTERRUPTS TO GO THROUGH
    1966/    FC52 : D3 FF                       OUT     CPUC
    1967/    FC54 : F1                  	        POP     PSW
    1968/    FC55 : C1                  	        POP     B               ; RESTORE BC
    1969/    FC56 : E1                  	        POP     H
    1970/    FC57 : C9                  	        RET                     ; RETURN
    1971/    FC58 :                     		;-------------------------------
    1972/    FC58 :                     		; READER IS PTR, USER-DEV-1, OR USER-DEV-2
    1973/    FC58 :                     		RI5:
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 34 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    1974/    FC58 : FE 04                       CPI     RPTR            ; IS READER THE PAPER TAPE READER?
    1975/    FC5A : C2 82 FC                    JNZ     RI8             ; JUMP IF IT ISN'T
    1976/    FC5D :                     		;-------------------------------
    1977/    FC5D :                     		; READER = PAPER TAPE READER
    1978/    FC5D : C5                  	        PUSH    B               ; SAVE BC
    1979/    FC5E : 06 50                       MVI     B,RDRC | PTRADV; LOAD READER ADVANCE 1 FRAME COMMAND
    1980/    FC60 : CD E4 FF                    CALL    PIOCOM          ; OUTPUT THE COMMAND
    1981/    FC63 : 26 FA                       MVI     H,TOUT          ; 250 MS. TIMEOUT COUNTER
    1982/    FC65 :                     		RI6:
    1983/    FC65 : 06 11                       MVI     B,RSTC          ; LOAD READER STATUS COMMAND
    1984/    FC67 : CD B5 FF                    CALL    PIODR1          ; READ STATUS
    1985/    FC6A : E6 01                       ANI     PTRDY           ; IS THE READER READY?
    1986/    FC6C : C2 79 FC                    JNZ     RI7             ; JUMP IF IT IS
    1987/    FC6F : CD 1E FE                    CALL    DELAY           ; STALL FOR 1 MS.
    1988/    FC72 : 25                  	        DCR     H               ; 250 MS. TIMEOUT LOOP
    1989/    FC73 : C2 65 FC                    JNZ     RI6
    1990/    FC76 : C3 47 FC                    JMP     RI3             ; 250 MS. ARE UP; RETURN WITH CARRY = 1 (EOF COND)
    1991/    FC79 :                     		RI7:                            ; THE PAPER TAPE READER IS READY
    1992/    FC79 : 06 10                       MVI     B,RDRC          ; LOAD READER COMMAND
    1993/    FC7B : CD B5 FF                    CALL    PIODR1          ; READ A CHARACTER FROM THE PAPER TAPE READER
    1994/    FC7E : B7                  	        ORA     A               ; RESET CARRY BIT
    1995/    FC7F : C1                  	        POP     B               ; RESTORE BC
    1996/    FC80 : E1                  	        POP     H
    1997/    FC81 : C9                  	        RET                     ; RETURN SUCCESSFULLY WITH CARRY
    1998/    FC82 :                     		;-------------------------------
    1999/    FC82 :                     		; READER IS USER-DEFINED DEVICE 1 OR DEVICE 2
    2000/    FC82 :                     		RI8:
    2001/    FC82 : E1                  	        POP     H
    2002/    FC83 : FE 08                       CPI     RUSE1
    2003/    FC85 : 3E EE                       MVI     A,R1LOC & HMSK
    2004/    FC87 :                     		;        JZ      @USER           ; READER USER-DEFINED DEVICE 1
    2005/    FC87 : CA 8C FC                    JZ      MUSER
    2006/    FC8A : 3E F1                       MVI     A,R2LOC & HMSK
    2007/    FC8C :                     		;*******JMP     @USER           ; READER USER-DEFINED DEVICE 2
    2008/    FC8C :                     		;*******JMP     USER            ; READER USER-DEFINED DEVICE 2
    2009/    FC8C :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2010/    FC8C :                     		; '@USER' - ENTERED VIA JUMPS FROM 'LO','LOM','RI','CI','BLK','COM',
    2011/    FC8C :                     		;           'CO','POC','PO','CSTS' ROUTINES
    2012/    FC8C :                     		;         ENTERED VIA FALL-THRU FROM 'RI' ROUTINE
    2013/    FC8C :                     		; PROCESS: USER-DEFINED I/O ENTRY POINT TRANSFER LOGIC
    2014/    FC8C :                     		; INPUT: A-REG CONTAINS LSB ADDRESS PTR INTO USER-DEFINED ENTRY POINT TABLE (XTBL)
    2015/    FC8C :                     		; OUTPUT:
    2016/    FC8C :                     		; MODIFIED:
    2017/    FC8C :                     		; STACK USAGE:
    2018/    FC8C :                     		; @USER:
    2019/    FC8C :                     		MUSER:
    2020/    FC8C : E5                  	        PUSH    H               ; SAVE HL, CREATE A STACK ENTRY
    2021/    FC8D : 2A 04 00                    LHLD    MEMTOP
    2022/    FC90 : 6F                  	        MOV     L,A             ; HL NOW POINTS TO PROPER USER ENTRY POINT IN
    2023/    FC91 :                     		                                ;   XTBL IN EXIT TEMPLATE IN TOP PAGE OF RAM
    2024/    FC91 : E3                  	        XTHL                    ; RESTORE HL; SP NOW POINTS TO USER ENTRY POINT
    2025/    FC92 : C9                  	        RET                     ; BEGIN EXECUTING AT THIS ENTRY POINT
    2026/    FC93 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2027/    FC93 :                     		; 'CO' - EXTERNALLY REFERENCED ROUTINE                                          ;
    2028/    FC93 :                     		;        ENTERED VIA CALL FROM 'TI' ROUTINE                                     ;
    2029/    FC93 :                     		; 'BLK' - ENTERED VIA CALLS FROM 'H', 'X' COMMANDS                              ;
    2030/    FC93 :                     		; 'COM' - ENTERED VIA CALLS FROM 'Q', 'X' COMMANDS                              ;
    2031/    FC93 :                     		;         ENTERED VIA JUMPS FROM 'COMC', 'HXD' ROUTINES                         ;
    2032/    FC93 :                     		; 'TTYOUT' - ENTERED VIA JUMPS FROM 'LOM','LO','POC','PO' ROUTINES              ;
    2033/    FC93 :                     		; 'CRTOUT' - ENTERED VIA JUMPS FROM 'LOM','LO' ROUTINES                         ;
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 35 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2034/    FC93 :                     		;            ENTERED VIA CALL FROM BOOTSTRAP PROGRAM                            ;
    2035/    FC93 :                     		; PROCESS: LOCAL CONSOLE OUTPUT CODE                                            ;
    2036/    FC93 :                     		; INPUT: VALUE IN C-REG                                                         ;
    2037/    FC93 :                     		; OUTPUT: DATA OUTPUT TO APPROPR:IATE DEVICE                                    ;
    2038/    FC93 :                     		; MODIFIED: A, FLAGS, C                                                         ;
    2039/    FC93 :                     		; STACK USAGE: 2 BYTES                                                          ;
    2040/    FC93 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2041/    FC93 :                     		BLK:
    2042/    FC93 : 0E 20                       MVI     C,' '           ; PRINT A BLANK
    2043/    FC95 :                     		COM:                            ; LOCAL CONSOLE OUTPUT
    2044/    FC95 : 3A 03 00                    LDA     IOBYT           ; GET STATUS BYTE
    2045/    FC98 : E6 03                       ANI     NCMSK        ; LOOK ONLY AT CONSOLE FIELD
    2046/    FC9A : FE 02                       CPI     BATCH           ; IS CONSOLE = BATCH?
    2047/    FC9C : C4 07 FC                    CNZ     BREAK           ; IF SO, DO NOT HONOR BREAK KEY IN BATCH MODE
    2048/    FC9F :                     		                                ; IF IT ISN'T, THEN TEST FOR BREAK KEY
    2049/    FC9F :                     		CO:                             ; EXTERNAL ENTRY POINT
    2050/    FC9F : 3A 03 00                    LDA     IOBYT           ; GET STATUS BYTE
    2051/    FCA2 : E6 03                       ANI     NCMSK        ; LOOK ONLY AT CONSOLE FIELD
    2052/    FCA4 : C2 B2 FC                    JNZ     CO0             ; JUMP IF CONSOLE IS NOT TTY
    2053/    FCA7 :                     		;-------------------------------
    2054/    FCA7 :                     		; CONSOLE = TTY
    2055/    FCA7 :                     		TTYOUT:
    2056/    FCA7 : DB F5                       IN      TTYS            ; LOCAL CONSOLE = TTY; GET TTY STATUS
    2057/    FCA9 : E6 01                       ANI     TRDY            ; IS IT READY?
    2058/    FCAB : CA A7 FC                    JZ      TTYOUT          ; LOOP UNTIL IT IS
    2059/    FCAE : 79                  	        MOV     A,C             ; LOAD CHARACTER TO BE OUTPUT
    2060/    FCAF : D3 F4                       OUT     TTYO            ; OUTPUT CHARACTER
    2061/    FCB1 : C9                  	        RET                     ; RETURN
    2062/    FCB2 :                     		;-------------------------------
    2063/    FCB2 :                     		; CONSOLE IS CRT, BATCH, OR USER-DEFINED
    2064/    FCB2 :                     		CO0:
    2065/    FCB2 : FE 02                       CPI     BATCH           ; CONSOLE = BATCH?
    2066/    FCB4 : CA 1E FD                    JZ      LO              ; JUMP TO LIST OUTPUT IF IT IS
    2067/    FCB7 : FE 01                       CPI     CCRT            ; LOCAL CONSOLE = CRT?
    2068/    FCB9 : 3E EB                       MVI     A,COLOC & 0FFH
    2069/    FCBB :                     		;        JNZ     @USER           ; JUMP IF IT ISN'T, I.E. CONSOLE IS
    2070/    FCBB : C2 8C FC                    JNZ     MUSER            ; JUMP IF IT ISN'T, I.E. CONSOLE IS
    2071/    FCBE :                     		                                ;   USER DEFINED LOCAL CONSOLE OUTPUT
    2072/    FCBE :                     		;-------------------------------
    2073/    FCBE :                     		; CONSOLE = CRT
    2074/    FCBE :                     		CRTOUT:
    2075/    FCBE : E5                  	        PUSH    H               ; SAVE H,L
    2076/    FCBF : 2A 04 00                    LHLD    MEMTOP
    2077/    FCC2 : 2E CC                       MVI     L,(ILOC-1) & 0FFH; HL NOW POINTS TO CONFIGURATION BYTE IN EXIT TEMPLATE 
    2078/    FCC4 : 7E                  	        MOV     A,M             ; A NOW CONTAINS THIS CONFIGURATION BYTE
    2079/    FCC5 : E1                  	        POP     H               ; RESTORE H,L
    2080/    FCC6 : 0F                  	        RRC                     ; ROTATE BIT 0 INTO CARRY BIT; THUS CARRY
    2081/    FCC7 :                     		                                ;   1 IF INTEGRATED CRT NOT PRESENT
    2082/    FCC7 : D2 D5 FC                    JNC     CRTOT2          ; JUMP IF INTEGRATED CRT
    2083/    FCCA :                     		;-------------------------------
    2084/    FCCA :                     		; CONSOLE = SERIAL CRT
    2085/    FCCA :                     		CRTOT1:                         ; INTELLEC WITH SERIALLY CONNECTED CRT
    2086/    FCCA : DB F7                       IN      USCS            ; INPUT CRT STATUS
    2087/    FCCC : E6 01                       ANI     TRDY            ; IS IT READY?
    2088/    FCCE : CA CA FC                    JZ      CRTOT1          ; LOOP UNTIL IT IS
    2089/    FCD1 : 79                  	        MOV     A,C             ; MOVE CHARACTER TO BE OUTPUT TO A-REG
    2090/    FCD2 : D3 F6                       OUT     USCO            ; OUTPUT IT TO THE CRT
    2091/    FCD4 : C9                  	        RET
    2092/    FCD5 :                     		;-------------------------------
    2093/    FCD5 :                     		; CONSOLE = INTEGRATED CRT
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 36 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2094/    FCD5 :                     		CRTOT2:                         ; INTELLEC WITH INTEGRATED CRT
    2095/    FCD5 : 79                  	        MOV     A,C             ; MOVE CHARACTER TO SE OUTPUT TO A-REG
    2096/    FCD6 : C5                  	        PUSH    B               ; SAVE B,C
    2097/    FCD7 :                     		                                ; CRT IS ALWAYS READY AND PRESENT - NO NEED
    2098/    FCD7 :                     		                                ; TO CHECK ITS STATUS
    2099/    FCD7 : 06 10                       MVI     B,CRTC          ; LOAD OUTPUT TO CRT COMMAND
    2100/    FCD9 : CD 94 FF                    CALL    IOCDR2          ; OUTPUT DATA TO CRT
    2101/    FCDC : C1                  	        POP     B               ; RESTORE B,C
    2102/    FCDD : C9                  	        RET
    2103/    FCDE :                     		
    2104/    FCDE :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2105/    FCDE :                     		; 'COMC' - ENTERED VIA CALLS FROM 'G','Q','S','X' COMMANDS AND 'ERROR',
    2106/    FCDE :                     		;          'START','CRLF','RESTART' ROUTINES
    2107/    FCDE :                     		; PROCESS: LOCAL CONSOLE OUTPUT OF CONSTANT DATA
    2108/    FCDE :                     		; INPUT: SP
    2109/    FCDE :                     		; OUTPUT: CONTENTS OF ADDRESS POINTED TO BY SP IS A RETURN ADDRESS TWO GREATER
    2110/    FCDE :                     		;         THAN THAT OF THE CALL COMC INSTRUCTION
    2111/    FCDE :                     		; MODIFIED: C,H,L
    2112/    FCDE :                     		; STACK USAGE: 2 BYTES
    2113/    FCDE :                     		COMC:
    2114/    FCDE : E3                  	        XTHL                    ; SINCE COMC WAS CALLED, SP NOW POINTS TO A STACK
    2115/    FCDF :                     		                                ;   ENTRY CONTAINING THE ADDRESS OF THE NEXT
    2116/    FCDF :                     		                                ;   INSTRUCTION, WHICH IN THIS CASE IS A DB.
    2117/    FCDF :                     		                                ;   HL NOW POINTS TO THIS DB.
    2118/    FCDF : 4E                  	        MOV     C,M             ; C NOW CONTAINS THE CHARACTER TO BE OUTPUT
    2119/    FCE0 : 23                  	        INX     H               ; BUMP RETURN ADDRESS,I.E. POINT IT BEYOND THE DB.
    2120/    FCE1 : E3                  	        XTHL                    ; SP MODIFIED, HL IS AS IT WAS ORIGINALLY
    2121/    FCE2 : C3 95 FC                    JMP     COM             ; OUTPUT IT
    2122/    FCE5 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2123/    FCE5 :                     		; 'PO' - EXTERNALLY REFERENCED ROUTINE                                          ;
    2124/    FCE5 :                     		;        ENTERED VIA CALL FROM 'PBYTE' ROUTINE                                  ;
    2125/    FCE5 :                     		; 'POC' - ENTERED VIA CALLS FROM 'E','N','W' COMMANDS AND 'LEAD','PEOL'         ;
    2126/    FCE5 :                     		;         ROUTINES                                                              ;
    2127/    FCE5 :                     		; PROCESS: PUNCH OUTPUT CODE                                                    ;
    2128/    FCE5 :                     		; INPUT: VALUE IN C-REG                                                         ;
    2129/    FCE5 :                     		; OUTPUT:                                                                       ;
    2130/    FCE5 :                     		; MODIFIED: A, FLAGS, C                                                         ;
    2131/    FCE5 :                     		; STACK USAGE: 2 BYTES                                                          ;
    2132/    FCE5 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2133/    FCE5 :                     		POC:                            ; PUNCH A CONSTANT
    2134/    FCE5 : E3                  	        XTHL                    ; SINCE POC ENTERED VIA CALL, SP POINTS TO STACK
    2135/    FCE6 :                     		                                ;   ENTRY CONTAINING ADDRESS OF NEXT INSTRUCTION
    2136/    FCE6 :                     		                                ;   WHICH IS A DB. HL NOW POINTS TO THIS DB.
    2137/    FCE6 : 4E                  	        MOV     C,M             ; C NOW CONTAINS CHARACTER TO BE PUNCHED
    2138/    FCE7 : 23                  	        INX     H               ; BUMP RETURN ADDRESS,I.E. POINT IT BEYOND DB
    2139/    FCE8 : E3                  	        XTHL                    ; SP MODIFIED, HL IS AS IT WAS ORIGINALLY
    2140/    FCE9 :                     		PO:                             ; PUNCH OUTPUT
    2141/    FCE9 : 3A 03 00                    LDA     IOBYT           ; GET STATUS BYTE
    2142/    FCEC : E6 30                       ANI     NPMSK        ; GET PUNCH BITS
    2143/    FCEE : CA A7 FC                    JZ      TTYOUT          ; JUMP IF PUNCH ISN'T TTY
    2144/    FCF1 : FE 10                       CPI     PPTP            ; IS PUNCH = PAPER TAPE PUNCH?
    2145/    FCF3 : C2 08 FD                    JNZ     PO1             ; JUMP IF IT ISN'T
    2146/    FCF6 :                     		;-------------------------------
    2147/    FCF6 :                     		; PUNCH = PAPER TAPE PUNCH
    2148/    FCF6 : C5                  	        PUSH    B               ; SAVE BC
    2149/    FCF7 :                     		PO0:                            ; PUNCH = PTP
    2150/    FCF7 : 06 13                       MVI     B,PSTC          ; LOAD PUNCH STATUS COMMAND
    2151/    FCF9 : CD B5 FF                    CALL    PIODR1          ; READ STATUS
    2152/    FCFC : E6 01                       ANI     PTPRY           ; IS THE PUNCH READY?
    2153/    FCFE : CA F7 FC                    JZ      PO0             ; LOOP UNTIL READY
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 37 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2154/    FD01 : 06 12                       MVI     B,PUNC          ; LOAD PUNCH OUTPUT COMMAND
    2155/    FD03 : CD CE FF                    CALL    PIODR3          ; OUTPUT CHARACTER THAT WAS IN C-REG
    2156/    FD06 : C1                  	        POP     B               ; RESTORE BC
    2157/    FD07 : C9                  	        RET
    2158/    FD08 :                     		;-------------------------------
    2159/    FD08 :                     		; PUNCH IS USER-DEFINED DEVICE 1 OR DEVICE 2
    2160/    FD08 :                     		PO1:
    2161/    FD08 : FE 20                       CPI     PUSE1
    2162/    FD0A : 3E F4                       MVI     A,P1LOC & 0FFH
    2163/    FD0C :                     		;        JZ      @USER           ; PUNCH = USER DEFINED PUNCH 1
    2164/    FD0C : CA 8C FC                    JZ      MUSER            ; PUNCH = USER DEFINED PUNCH 1
    2165/    FD0F : 3E F7                       MVI     A,P2LOC & 0FFH
    2166/    FD11 :                     		;        JMP     @USER           ; PUNCH = USER DEFINED PUNCH 2
    2167/    FD11 : C3 8C FC                    JMP     MUSER            ; PUNCH = USER DEFINED PUNCH 2
    2168/    FD14 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2169/    FD14 :                     		; 'LO' - EXTERNALLY REFERENCED ROUTINE                                          ;
    2170/    FD14 :                     		;        ENTERED VIA JUMPS FROM 'COM','CO','BLK' ROUTINES                       ;
    2171/    FD14 :                     		; 'LOM' - ENTERED VIA CALLS FROM 'D' COMMAND AND 'DBYTE','LCRLF' ROUTINES       ;
    2172/    FD14 :                     		;         ENTERED VIA JUMPS FROM 'DBYTE','LCRLF' ROUTINES                       ;
    2173/    FD14 :                     		; PROCESS: LIST OUTPUT                                                          ;
    2174/    FD14 :                     		; INPUT: VALUE IN C-REG                                                         ;
    2175/    FD14 :                     		; OUTPUT:                                                                       ;
    2176/    FD14 :                     		; MODIFIED: A, FLAGS, C                                                         ;
    2177/    FD14 :                     		; STACK USAGE: 2 BYTES                                                          ;
    2178/    FD14 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2179/    FD14 :                     		LOM:                            ; LIST OUTPUT ON CONSOLE
    2180/    FD14 : 3A 03 00                    LDA     IOBYT
    2181/    FD17 : E6 03                       ANI     NCMSK        ; LOOK ONLY AT CONSOLE FIELD OF IOBYT
    2182/    FD19 : FE 02                       CPI     BATCH           ; IS CONSOLE ASSIGNED TO BATCH MODE?
    2183/    FD1B : C4 07 FC                    CNZ     BREAK           ; IF IT ISN'T, WE SHOULD TEST FOR BREAK KEY
    2184/    FD1E :                     		                                ;   I.E. IN BATCH. MODE THE BREAK KEY IS NOT
    2185/    FD1E :                     		                                ;   HONORED
    2186/    FD1E :                     		LO:                             ; LIST OUTPUT
    2187/    FD1E : 3A 03 00                    LDA     IOBYT           ; GET STATUS BYTE
    2188/    FD21 : E6 C0                       ANI     ~ LMSK        ; LOOK AT LIST FIELD
    2189/    FD23 : CA A7 FC                    JZ      TTYOUT          ; JUMP IF LIST = TTY
    2190/    FD26 : FE 40                       CPI     LCRT
    2191/    FD28 : CA BE FC                    JZ      CRTOUT          ; JUMP IF LIST = CRT
    2192/    FD2B : FE C0                       CPI     LUSE            ; TEST FOR USER DEFINED LIST DEVICE
    2193/    FD2D : 3E FA                       MVI     A,LILOC & 0FFH; A := LSB OF LILOC ADDRESS
    2194/    FD2F :                     		;        JZ      @USER           ; JUMP IF LIST = USER-DEFINED DEVICE
    2195/    FD2F : CA 8C FC                    JZ      MUSER            ; JUMP IF LIST = USER-DEFINED DEVICE
    2196/    FD32 :                     		;-------------------------------
    2197/    FD32 :                     		; LIST = LPT
    2198/    FD32 : C5                  	        PUSH    B               ; SAVE BC
    2199/    FD33 :                     		LP0:
    2200/    FD33 : 06 15                       MVI     B,LSTC          ; LOAD LINE PRINTER STATUS COMMAND
    2201/    FD35 : CD B5 FF                    CALL    PIODR1          ; READ STATUS
    2202/    FD38 : E6 01                       ANI     LPTRY           ; IS IT READY?
    2203/    FD3A : CA 33 FD                    JZ      LP0             ; LOOP UNTIL IT IS
    2204/    FD3D : 06 14                       MVI     B,LPTC          ; LOAD LINE PRINTER PRINT COMMAND
    2205/    FD3F : CD CE FF                    CALL    PIODR3          ; OUTPUT CHARACTER CONTAINED IN C-REG
    2206/    FD42 : C1                  	        POP     B               ; RESTORE BC
    2207/    FD43 : C9                  	        RET
    2208/    FD44 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2209/    FD44 :                     		; 'CSTS' - EXTERNALLY REFERENCED ROUTINE                                        ;
    2210/    FD44 :                     		;          ENTERED VIA CALL FROM 'BREAK' ROUTINE                                ;
    2211/    FD44 :                     		; PROCESS: LOCAL CONSOLE INPUT STATUS                                           ;
    2212/    FD44 :                     		; INPUT:                                                                        ;
    2213/    FD44 :                     		; OUTPUT: A-REG CONTAINS 00 IF NO KEY HAS BEEN DEPRESSED,                       ;
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 38 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2214/    FD44 :                     		; A-REG CONTAINS FFH IF A KEY HAS BEEN DEPRESSED                                ;
    2215/    FD44 :                     		; MODIFIED: A, FLAGS                                                            ;
    2216/    FD44 :                     		; STACK USAGE: 2 BYTES                                                          ;
    2217/    FD44 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2218/    FD44 :                     		CSTS:                           ; LOCAL CONSOLE INPUT STATUS
    2219/    FD44 : 3A 03 00                    LDA     IOBYT           ; GET STATUS BYTE
    2220/    FD47 : E6 03                       ANI     NCMSK        ; LOOK ONLY AT CONSOLE FIELD OF IOBYT
    2221/    FD49 : C2 53 FD                    JNZ     CS0             ; JUMP IF CONSOLE IS NOT TTY
    2222/    FD4C :                     		;-------------------------------
    2223/    FD4C :                     		; CONSOLE = TTY
    2224/    FD4C : DB F5                       IN      TTYS            ; GET TTY STATUS
    2225/    FD4E : E6 02                       ANI     RRDY            ; IS RECEIVE BUFFER READY? (IF TTY KEY WAS
    2226/    FD50 : C3 74 FD                    JMP     CS2             ;   DEPRESSED, ZERO BIT WILL BE RESET)
    2227/    FD53 :                     		;-------------------------------
    2228/    FD53 :                     		; CONSOLE = CRT, BATCH, OR USER-DEFINED
    2229/    FD53 :                     		CS0:
    2230/    FD53 : FE 01                       CPI     CCRT            ; CONSOLE = CRT?
    2231/    FD55 : C2 79 FD                    JNZ     CS3             ; JUMP IF CONSOLE IS NOT CRT
    2232/    FD58 : E5                  	        PUSH    H               ; SAVE H,L
    2233/    FD59 : 2A 04 00                    LHLD    MEMTOP
    2234/    FD5C : 2E CC                       MVI     L,(ILOC-1) & 0FFH; HL POINTS TO CONFIGURATION BYTE IN EXIT TEMPLATE
    2235/    FD5E : 7E                  	        MOV     A,M             ; A CONTAINS THIS CONFIGURATION BYTE
    2236/    FD5F : E1                  	        POP     H               ; RESTORE H,L
    2237/    FD60 : 0F                  	        RRC                     ; ROTATE BIT " INTO CARRY; THUS CARRY = 1
    2238/    FD61 :                     		                                ;   MEANS INTEGRATED CRT NOT PRESENT
    2239/    FD61 : D2 6B FD                    JNC     CS1             ; JUMP IF INTEGRATED CRT PRESENT
    2240/    FD64 :                     		;-------------------------------
    2241/    FD64 :                     		; CONSOLE = SERIAL CRT
    2242/    FD64 : DB F7                       IN      USCS            ; GET CRT STATUS
    2243/    FD66 : E6 02                       ANI     RRDY            ; IS RECEIVE BUFFER READY? (IF KEY HAS BEEN
    2244/    FD68 : C3 74 FD                    JMP     CS2             ;   DEPRESSED, ZERO BIT WILL BE RESET)
    2245/    FD6B :                     		;-------------------------------
    2246/    FD6B :                     		; CONSOLE = INTEGRATED CRT
    2247/    FD6B :                     		CS1:                            ; INTELLEC WITH INTEGRATED CRT
    2248/    FD6B : C5                  	        PUSH    B               ; SAVE B,C
    2249/    FD6C : 06 13                       MVI     B,KSTS          ; LOAD CRT STATUS COMMAND
    2250/    FD6E : CD 7F FF                    CALL    IOCDR1          ; GET CRT STATUS
    2251/    FD71 : E6 01                       ANI     KRDY            ; IS RECEIVE BUFFER READY? (IF KEY HAS BEEN
    2252/    FD73 :                     		                                ;   DEPRESSED, ZERO BIT WILL BE RESET)
    2253/    FD73 : C1                  	        POP     B               ; RESTORE B,C
    2254/    FD74 :                     		CS2:                            ; COMMON RETURN POINT FOR CRT,TTY
    2255/    FD74 : 3E 00                       MVI     A,MFALSE         ; INITIALIZE A-REG TO 00
    2256/    FD76 : C8                  	        RZ                      ; RETURN WITH A := 00 IF NO DATA AVAILABLE
    2257/    FD77 : 2F                  	        CMA
    2258/    FD78 : C9                  	        RET                     ; RETURN WITH A := FF IF DATA AVAILABLE
    2259/    FD79 :                     		;-------------------------------
    2260/    FD79 :                     		; CONSOLE = BATCH OR USER-DEFINED DEVICE
    2261/    FD79 :                     		CS3:
    2262/    FD79 : FE 02                       CPI     BATCH           ; IS IT BATCH?
    2263/    FD7B : 3E FF                       MVI     A,MTRUE
    2264/    FD7D : C8                  	        RZ                      ; RETURN IF CONSOLE IS BATCH; A := FF
    2265/    FD7E : 3E FD                       MVI     A,CSLOC & 0FFH; CONSOLE = USER DEFINED LOCAL CONSOLE, BRANCH
    2266/    FD80 :                     		                                ;   TO USER'S OWN STATUS ROUTINE
    2267/    FD80 :                     		;        JMP     @USER
    2268/    FD80 : C3 8C FC                    JMP     MUSER
    2269/    FD83 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2270/    FD83 :                     		; 'IOCHK' - EXTERNALLY REFERENCED ROUTINE                                       ;
    2271/    FD83 :                     		; PROCESS: GET I/O SYSTEM STATUS                                                ;
    2272/    FD83 :                     		; INPUT:                                                                        ;
    2273/    FD83 :                     		; OUTPUT: STATUS BYTE RETURNED IN A-REG                                         ;
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 39 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2274/    FD83 :                     		; MODIFIED: A                                                                   ;
    2275/    FD83 :                     		; STACK USAGE: 2 BYTES                                                          ;
    2276/    FD83 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2277/    FD83 :                     		IOCHK:
    2278/    FD83 : 3A 03 00                    LDA     IOBYT           ; GET STATUS BYTE
    2279/    FD86 : C9                  	        RET                     ; RETURN
    2280/    FD87 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2281/    FD87 :                     		; 'IOSET' - EXTERNALLY REFERENCED ROUTINE                                       ;
    2282/    FD87 :                     		; PROCESS: SET I/O CONFIGURATION                                                ;
    2283/    FD87 :                     		; INPUT: NEW I/O STATUS BYTE IN C-REG                                           ;
    2284/    FD87 :                     		; OUTPUT: IOBYT CONTAINS NEW I/O CONFIGURATION                                  ;
    2285/    FD87 :                     		; MODIFIED: A, C                                                                ;
    2286/    FD87 :                     		; STACK USAGE: 2 BYTES                                                          ;
    2287/    FD87 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2288/    FD87 :                     		IOSET:
    2289/    FD87 : 79                  	        MOV     A,C
    2290/    FD88 : 32 03 00                    STA     IOBYT           ; PUT NEW IOBYT IN MEMORY
    2291/    FD8B : C9                  	        RET                     ; RETURN
    2292/    FD8C :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2293/    FD8C :                     		; 'MEMCHK' -EXTERNALLY REFERENCED ROUTINE                                       ;
    2294/    FD8C :                     		; PROCESS: RETURN ADDRESS OF CONTIGUOUS END OF USER MEMORY                      ;
    2295/    FD8C :                     		; INPUT: MEMTOP,USER                                                            ;
    2296/    FD8C :                     		; OUTPUT: ADDRESS IS RETURNED IN B-REG (MSB) AND A-REG (LSB)                    ;
    2297/    FD8C :                     		; MODIFIED: A,B,FLAGS                                                           ;
    2298/    FD8C :                     		; STACK USAGE: 2 BYTES                                                          ;
    2299/    FD8C :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2300/    FD8C :                     		MEMCHK:
    2301/    FD8C : 3A 05 00                    LDA     MEMTOP+1        ; MSB OF ADDRESS OF TOP PAGE OF MEMORY
    2302/    FD8F : 3D                  	        DCR     A               ; CHANGE IT TO THE PAGE BELOW THE TOP PAGE
    2303/    FD90 :                     		                                ;   RECALL TOP PAGE IS USED BY MONITOR SO
    2304/    FD90 :                     		                                ;   USER SHOULD NOT ACCESS IT 
    2305/    FD90 : 47                  	        MOV     B,A             ; SO MSB GOES IN B-REG
    2306/    FD91 : 3E C0                       MVI     A,USER & 0FFH ; LSB IN A-REG
    2307/    FD93 : C9                  	        RET                     ; AB POINTS TO BASE OF USER STACK IN SECOND
    2308/    FD94 :                     		                                ;   FROM TOP PAGE OF RAM
    2309/    FD94 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2310/    FD94 :                     		; 'IODEF ' - EXTERNALLY REFERENCED ROUTINE                                      ;
    2311/    FD94 :                     		; PROCESS: DEFINE USER I/O ENTRY POINTS                                         ;
    2312/    FD94 :                     		; INPUT: SELECTION CODE IN C-REG, USER ENTRY POINT ADDRESS IN D,E               ;
    2313/    FD94 :                     		; OUTPUT:                                                                       ;
    2314/    FD94 :                     		; MODIFIED: A, FLAGS                                                            ;
    2315/    FD94 :                     		; STACK USAGE: 8 BYTES                                                          ;
    2316/    FD94 :                     		; EXPLANATION: POINT HL TO TABLE OF USER ENTRY POINTS IN TOP OF RAM;            ;
    2317/    FD94 :                     		;   SUBSTITUTE IN THERE THE ADDRESS GIVEN BY THE USER IN DE REGISTERS           ; 
    2318/    FD94 :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2319/    FD94 :                     		IODEF: 
    2320/    FD94 : E5                  	        PUSH    H               ; SAVE H & L
    2321/    FD95 : C5                  	        PUSH    B               ; SAVE B & C
    2322/    FD96 : 2A 04 00                    LHLD    MEMTOP          ; GET XTBL+1`
    2323/    FD99 : 2E E9                       MVI     L,(XTBL+1) & 0FFH; HL NOW POINTS TO XTBL+1 IN TOP PAGE OF RAM 
    2324/    FD9B : 79                  	        MOV     A,C             ; A := LOGICAL DEVICE CATEGORY
    2325/    FD9C : FE 08                       CPI     UCS+1
    2326/    FD9E : D2 47 F8                    JNC     ERROR           ; INVALID SELECTION CODE
    2327/    FDA1 : 81                  	        ADD     C               ; DOUBLE INDEX
    2328/    FDA2 : 81                  	        ADD     C               ; TRIPLE INDEX
    2329/    FDA3 : 4F                  	        MOV     C,A
    2330/    FDA4 : 06 00                       MVI     B,0
    2331/    FDA6 : 09                  	        DAD     B               ; COMPUTE PROPER INDEX INTO XTBL
    2332/    FDA7 : 73                  	        MOV     M,E             ; STORE BRANCH OPERAND IN INSTRUCTION
    2333/    FDA8 : 23                  	        INX     H
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 40 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2334/    FDA9 : 72                  	        MOV     M,D             ; STORE THE USER-DEFINED I/O ENTRY ROUTINE
    2335/    FDAA :                     		                                ;   ADDRESS IN THE PROPER PLACE IN XTBL,
    2336/    FDAA :                     		                                ;   SO IT LOOKS LIKE:
    2337/    FDAA :                     		                                ;   JMP <USER-DEFINED ADDRESS>
    2338/    FDAA : C1                  	        POP     B               ; RESTORE B & C
    2339/    FDAB : E1                  	        POP     H               ; RESTORE H & L
    2340/    FDAC : C9                  	        RET
    2341/    FDAD :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2342/    FDAD :                     		; 'UI' - EXTERNALLY REFERENCED ROUTINE                                          ;
    2343/    FDAD :                     		; PROCESS: INPUT A CHARACTER FROM THE UPP                                       ;
    2344/    FDAD :                     		; INPUT: B CONTAINS MSB OF PROM ADDRESS                                         ;
    2345/    FDAD :                     		;        C CONTAINS LSB OF PROM ADDRESS                                         ;
    2346/    FDAD :                     		; OUTPUT: DATA IN A-REG                                                         ;
    2347/    FDAD :                     		; MODIFIED:A,FLAGS                                                              ;
    2348/    FDAD :                     		; STACK USAGE: 6 BYTES                                                          ;
    2349/    FDAD :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2350/    FDAD :                     		UI:
    2351/    FDAD :                     		                                ; IT IS ASSUMED THE 'UPPS' ROUTINE HAS BEEN
    2352/    FDAD :                     		                                ; CALLED AND THAT THE UPP UNIT IS READY
    2353/    FDAD : C5                  	        PUSH    B               ; SAVE B,C
    2354/    FDAE : 06 17                       MVI     B,RPPC          ; LOAD THE READ PROM COMMAND
    2355/    FDB0 :                     		                                ; C CONTAINS PROM LOW ADDRESS
    2356/    FDB0 : CD CE FF                    CALL    PIODR3          ; OUTPUT READ PROM COMMAND
    2357/    FDB3 :                     		                                ; OUTPUT PROM LOW ADDRESS
    2358/    FDB3 : C1                  	        POP     B               ; RESTORE B,C; B CONTAINS PROM HIGH ADDRESS
    2359/    FDB4 : C5                  	        PUSH    B               ; SAVE B,C
    2360/    FDB5 : 48                  	        MOV     C,B             ; C CONTAINS PROM HIGH ADDRESS
    2361/    FDB6 : CD D1 FF                    CALL    PIODR4          ; OUTPUT PROM HIGH ADDRESS
    2362/    FDB9 : C1                  	        POP     B               ; RESTORE B,C
    2363/    FDBA : CD B8 FF                    CALL    PIODR2          ; INPUT PROM DATA
    2364/    FDBD : C9                  	        RET
    2365/    FDBE :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2366/    FDBE :                     		; 'UO' - EXTERNALLY REFERENCED ROUTINE                                          ;
    2367/    FDBE :                     		; PROCESS: OUTPUT A CHARACTER TO THE UPP                                        ;
    2368/    FDBE :                     		; INPUT: C CONTAINS THE CHARACTER TO BE WRITTEN INTO THE PROM                   ;
    2369/    FDBE :                     		;        D CONTAINS THE MSB OF THE PROM ADDRESS                                 ;
    2370/    FDBE :                     		;        E CONTAINS THE LSB OF THE PROM ADDRESS                                 ;
    2371/    FDBE :                     		; OUTPUT:                                                                       ;
    2372/    FDBE :                     		; MODIFIED:A,FLAGS                                                              ;
    2373/    FDBE :                     		; STACK USAGE: 8 BYTES                                                          ;
    2374/    FDBE :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2375/    FDBE :                     		UO:
    2376/    FDBE :                     		                                ; IT IS ASSUMED THE 'UPPS' ROUTINE HAS BEEN
    2377/    FDBE :                     		                                ; CALLED AND THAT THE UPP UNIT IS READY
    2378/    FDBE : C5                  	        PUSH    B               ; SAVE B,C
    2379/    FDBF : 06 16                       MVI     B,WPPC          ; LOAD WRITE PROM COMMAND
    2380/    FDC1 : 4B                  	        MOV     C,E             ; LOAD PROM LOW ADDRESS
    2381/    FDC2 : CD CE FF                    CALL    PIODR3          ; OUTPUT WRITE PROM COMMAND
    2382/    FDC5 :                     		                                ; OUTPUT PROM LOW ADDRESS
    2383/    FDC5 : 4A                  	        MOV     C,D             ; LOAD PROM HIGH ADDRESS
    2384/    FDC6 : CD D1 FF                    CALL    PIODR4          ; OUTPUT PROM HIGH ADDRESS
    2385/    FDC9 : C1                  	        POP     B               ; RESTORE B,C; C CONTAINS THE DATA TO BE
    2386/    FDCA :                     		                                ;   WRITTEN TO THE PROM
    2387/    FDCA : CD D1 FF                    CALL    PIODR4          ; OUTPUT DATA TO PROM
    2388/    FDCD : C9                  	        RET
    2389/    FDCE :                     		        
    2390/    FDCE :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2391/    FDCE :                     		; 'UPPS' - EXTERNALLY REFERENCED ROUTINE                                        ;
    2392/    FDCE :                     		; PROCESS: INPUT THE UPP STATUS BYTE                                            ;
    2393/    FDCE :                     		; INPUT:                                                                        ;
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 41 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2394/    FDCE :                     		; OUTPUT: A-REG CONTAINS THE UPP STATUS BYTE                                    ;
    2395/    FDCE :                     		; MODIFIED:                                                                     ;
    2396/    FDCE :                     		; STACK USAGE: 8 BYTES                                                          ;
    2397/    FDCE :                     		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2398/    FDCE :                     		UPPS:
    2399/    FDCE : C5                  	        PUSH    B               ; SAVE BC
    2400/    FDCF : 06 18                       MVI     B,RPSTC         ; B CONTAINS STATUS COMMAND
    2401/    FDD1 : CD B5 FF                    CALL    PIODR1          ; GET UPP STATUS BYTE
    2402/    FDD4 : F5                  	        PUSH    PSW             ; SAVE IT ON THE STACK
    2403/    FDD5 : CD B8 FF                    CALL    PIODR2          ; GET PIO DEVICE STATUS BYTE AND IGNORE IT
    2404/    FDD8 : F1                  	        POP     PSW             ; A NOW CONTAINS UPP STATUS BYTE
    2405/    FDD9 : C1                  	        POP     B               ; RESTORE. BC
    2406/    FDDA : C9                  	        RET
    2407/    FDDB :                     		;********************************************************************************
    2408/    FDDB :                     		;*                                                                              *
    2409/    FDDB :                     		;* END OF I/O SUBROUTINES, BEGINNING OF MONITOR SUBROUTINES                     *
    2410/    FDDB :                     		;*                                                                              *
    2411/    FDDB :                     		;********************************************************************************
    2412/    FDDB :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    2413/    FDDB :                     		; 'BYTE' - ENTERED VIA CALL FROM 'R' COMMAND
    2414/    FDDB :                     		; PROCESS: READ TWO 8-BIT ASCII CHARACTERS, DECODE INTO ONE 8-BIT BINARY WORD
    2415/    FDDB :                     		; INPUT: D CONTAINS RUNNING CHECKSUM
    2416/    FDDB :                     		; OUTPUT: DECODED BYTE IN A-REG, RUNNING CHECKSUM IN D-REG, ZERO BIT SET OR RESET
    2417/    FDDB :                     		; MODIFIED: A,F,C,D
    2418/    FDDB :                     		; STACK USAGE:
    2419/    FDDB :                     		BYTE:
    2420/    FDDB : C5                  	        PUSH    B               ; SAVE B,C
    2421/    FDDC : CD 58 FF                    CALL    RIX             ; READ ONE ASCII CHAR FROM TAPE, PUT IN A-REG
    2422/    FDDF : CD 98 FE                    CALL    NIBBLE          ; CONVERT 8-BIT ASCII TO 4-BIT HEXADECIMAL VALUE
    2423/    FDE2 : 07                  	        RLC                     ; SHIFT FOUR PLACES TO THE LEFT
    2424/    FDE3 : 07                  	        RLC 
    2425/    FDE4 : 07                  	        RLC
    2426/    FDE5 : 07                  	        RLC                     ; MOVE HEX CHAR TO 4 MSB OF A-REG
    2427/    FDE6 : 4F                  	        MOV     C,A             ; STORE TEMPORARILY IN C
    2428/    FDE7 : CD 58 FF                    CALL    RIX             ; GET ANOTHER ASCII CHAR FROM READER
    2429/    FDEA : CD 98 FE                    CALL    NIBBLE          ; CONVERT TO 4 BIT HEX; NOW LSBOF A-REG
    2430/    FDED : B1                  	        ORA     C               ; ASSEMBLE IT ALL TOGETHER
    2431/    FDEE : 4F                  	        MOV     C,A             ; STORE IT TEMPORARILY IN C
    2432/    FDEF : 82                  	        ADD     D               ; UPDATE CHECKSUM (ZERO BIT IS SET/RESET)
    2433/    FDF0 : 57                  	        MOV     D,A             ; D CONTAINS UPDATED CHECKSUM
    2434/    FDF1 : 79                  	        MOV     A,C             ; LOAD THE CONVERTED WORD
    2435/    FDF2 : C1                  	        POP B   
    2436/    FDF3 : C9                  	        RET                     ; RETURN
    2437/    FDF4 :                     		;////////////////////////////////////////////////////////////////////////////
    2438/    FDF4 :                     		; 'CONV' - ENTERED VIA CALLS FROM 'DBYTE','HXD','PBYTE' ROUTINES
    2439/    FDF4 :                     		; PROCESS: CONVERT 4 BIT HEX VALUE TO ASCII CHARACTER
    2440/    FDF4 :                     		; INPUT: 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E, OR F IN HEX IN A-REG
    2441/    FDF4 :                     		; OUTPUT: 30H, ��� ,39H,41H, ��� ,46H IN C-REG
    2442/    FDF4 :                     		; MODIFIED: A, FLAGS, C
    2443/    FDF4 :                     		; STACK USAGE:
    2444/    FDF4 :                     		;
    2445/    FDF4 :                     		CONV:
    2446/    FDF4 : E6 0F                       ANI     0FH             ; ONLY 4 LSB ARE SIGNIFICANT, SO MASK 4 MSB
    2447/    FDF6 : C6 90                       ADI     90H             ; SET UP A-REG SO THAT A-F CAUSE CARRY
    2448/    FDF8 : 27                  	        DAA
    2449/    FDF9 : CE 40                       ACI     40H             ; ADD IN CARRY AND ADJUST UPPER NIBBLE
    2450/    FDFB : 27                  	        DAA
    2451/    FDFC : 4F                  	        MOV     C,A             ; STORE CONVERTED RESOLT IN C-REG
    2452/    FDFD : C9                  	        RET                     ; RETURN
    2453/    FDFE :                     		;////////////////////////////////////////////////////////////////////////////
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 42 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2454/    FDFE :                     		; 'CRLF' - ENTERED VIA CALLS FROM 'G','H','Q','R','W','X' COMMANDS AND
    2455/    FDFE :                     		;          'START' ROUTINE
    2456/    FDFE :                     		; PROCESS: TYPE CARRIAGE RETURN AND LINE FEED ON LOCAL CONSOLE
    2457/    FDFE :                     		; INPUT:
    2458/    FDFE :                     		; OUTPUT:
    2459/    FDFE :                     		; MODIFIED:
    2460/    FDFE :                     		; STACK USAGE:
    2461/    FDFE :                     		CRLF:
    2462/    FDFE : CD DE FC                    CALL    COMC            ; OUTPUT <CR> ON CONSOLE
    2463/    FE01 : 0D                  	        DB      CR
    2464/    FE02 : CD DE FC                    CALL    COMC            ; OUTPUT <LF> ON CONSOLE
    2465/    FE05 : 0A                  	        DB      LF
    2466/    FE06 : C9                  	        RET
    2467/    FE07 :                     		;////////////////////////////////////////////////////////////////////////////
    2468/    FE07 :                     		; 'DADR' - ENTERED VIA CALL FROM 'D' COMMAND
    2469/    FE07 :                     		; PROCESS: PRINT CONTENTS OF HL IN HEX FORMAT ON LIST DEVICE
    2470/    FE07 :                     		; INPUT: HL CONTAINS <LOW ADDRESS) OF 'D' COMMAND
    2471/    FE07 :                     		; OUTPUT:
    2472/    FE07 :                     		; MODIFIED: A
    2473/    FE07 :                     		; STACK USAGE:
    2474/    FE07 :                     		DADR:
    2475/    FE07 : 7C                  	        MOV     A,H             ; PRINT MSB OF LOW ADDRESS
    2476/    FE08 : CD 0C FE                    CALL    DBYTE
    2477/    FE0B : 7D                  	        MOV     A,L             ; PRINT LSB OF LOW ADDRESS
    2478/    FE0C :                     		;*******JMP     DBYTE
    2479/    FE0C :                     		;////////////////////////////////////////////////////////////////////////////
    2480/    FE0C :                     		; 'DBYTE' - ENTERED VIA CALLS FROM 'D' COMMAND AND 'DADR' ROUTINE
    2481/    FE0C :                     		;           ENTERED VIA FALL-THRU FROM 'DADR' ROUTINE
    2482/    FE0C :                     		; PROCESS: LIST A BYTE ON THE LIST DEVICE AS TWO ASCII CHARACTERS
    2483/    FE0C :                     		; INPUT: A CONTAINS THE BYTE TO BE LISTED
    2484/    FE0C :                     		; OUTPUT:
    2485/    FE0C :                     		; MODIFIED:
    2486/    FE0C :                     		; STACK USAGE:
    2487/    FE0C :                     		DBYTE:
    2488/    FE0C : F5                  	        PUSH    PSW             ; SAVE A COPY OF A-REG
    2489/    FE0D : 0F                  	        RRC
    2490/    FE0E : 0F                  	        RRC
    2491/    FE0F : 0F                  	        RRC
    2492/    FE10 : 0F                  	        RRC                     ; WANT TO LOOK ONLY AT BITS 4-7 OF A-REG
    2493/    FE11 : CD F4 FD                    CALL    CONV            ; CONVERT 4 MSB OF ORIGINAL A-REG TO 1 ASCII CHAR
    2494/    FE14 : CD 14 FD                    CALL    LOM             ; OUTPUT ON LIST DEVICE
    2495/    FE17 : F1                  	        POP     PSW             ; RETRIEVE ORIGINAL VALUE
    2496/    FE18 : CD F4 FD                    CALL    CONV            ; CONVERT 4 LSB OF ORIGINAL A-REG TO 1 ASCII CHAR
    2497/    FE1B : C3 14 FD                    JMP     LOM             ; OUTPUT ON LIST DEVICE
    2498/    FE1E :                     		;///////////////////////////////////////////////////////////////////////////////
    2499/    FE1E :                     		; 'DELAY' - ENTERED VIA CALL FROM 'RI' ROUTINE
    2500/    FE1E :                     		; PROCESS: 1.0 MS. DELAY
    2501/    FE1E :                     		; INPUT: ONEMS
    2502/    FE1E :                     		; OUTPUT: ROUTINE IDLES FOR 1.0 MS.
    2503/    FE1E :                     		; MODIFIED: C, FLAGS
    2504/    FE1E :                     		; STACK USAGE: 2 BYTES
    2505/    FE1E :                     		DELAY:
    2506/    FE1E : 0E 70                       MVI     C,ONEMS         ; LOAD 1 MS.CONSTANT (USE 3BH IN ICE ENVIRONMENT)
    2507/    FE20 :                     		DLY1:
    2508/    FE20 : 0D                  	        DCR     C               ; DECREMENT COUNTER
    2509/    FE21 : C2 20 FE                    JNZ     DLY1            ; JUMP IF NOT EXPIRED
    2510/    FE24 : C9                  	        RET                     ; RETURN
    2511/    FE25 :                     		;////////////////////////////////////////////////////////////////////////////
    2512/    FE25 :                     		; 'DREG' - ENTERED VIA CALL FROM 'X' COMMAND
    2513/    FE25 :                     		; PROCESS: DISPLAY THE CONTENTS OF A USER REGISTER
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 43 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2514/    FE25 :                     		; INPUT: HL POINtS TO CHARACTER IN ACTBL OF 'X' COMMAND
    2515/    FE25 :                     		; OUTPUT: HL POINTS TO NEXT CHARACTER IN ACTBL,
    2516/    FE25 :                     		;         DE CONTAINS ADDRESS OF REGISTER LOCATION
    2517/    FE25 :                     		;         B CONTAINS REGISTER PRECISION
    2518/    FE25 :                     		; MODIFIED:
    2519/    FE25 :                     		; STACK USAGE:
    2520/    FE25 :                     		DREG:
    2521/    FE25 : 23                  	        INX     H               ; HL POINTS TO LOCATION ENTRY IN ACTBL OF 'X' COMMAND
    2522/    FE26 : 5E                  	        MOV     E,M             ; INCREMENT HL TO POINT AT DISPLACEMENT
    2523/    FE27 : 3A 05 00                    LDA     MEMTOP+1
    2524/    FE2A : 57                  	        MOV     D,A             ; D := MSB OF ADDRESS OF TOP PAGE OF MEMORY
    2525/    FE2B :                     		                                ; DE POINTS TO THAT PART OF THE EXIT TEMPLATE
    2526/    FE2B :                     		                                ;   CONTAINING SAVED REGISTER VALUES
    2527/    FE2B : 23                  	        INX     H               ; HL POINTS TO PRECISION IN ACTBL
    2528/    FE2C : 46                  	        MOV     B,M             ; PRECISION, 0=8 BITS, 1=16 BITS
    2529/    FE2D : 23                  	        INX     H               ; POINT AT NEXT REGISTER IDENTIFIER
    2530/    FE2E : 1A                  	        LDAX    D               ; 8/16 BIT DISPLAY AND MODIFICATION
    2531/    FE2F : CD 5B FE                    CALL    LBYTE           ; MSB OF 16 BIT REG, ALL OF 8 BIT REG
    2532/    FE32 : 05                  	        DCR     B               ; TEST PRECISION
    2533/    FE33 : F8                  	        RM                      ; 8 BIT DISPLAY, RETURN
    2534/    FE34 : 1B                  	        DCX     D
    2535/    FE35 : 1A                  	        LDAX    D
    2536/    FE36 : C3 5B FE                    JMP     LBYTE           ; LSB OF 16 BIT REG
    2537/    FE39 :                     		;///////////////////////////////////////////////////////////////////////////////
    2538/    FE39 :                     		; 'EXPR' - ENTERED VIA CALLS FROM 'D','E','F','H','M','R','W' COMMANDS
    2539/    FE39 :                     		; PROCESS: EVALUATE EXPRESSION "<EXPR>,<EXPR>,<EXPR>"
    2540/    FE39 :                     		; INPUT: C-REG CONTAINS THE NUMBER OF PARAMETERS REQUIRED (1,2, OR 3)
    2541/    FE39 :                     		; OUTPUT: STACK CONTAINS THE PARAMETERS IN REVERSE ORDER
    2542/    FE39 :                     		; MODIFIED: F,C,H,L,SP
    2543/    FE39 :                     		; STACK USAGE:
    2544/    FE39 :                     		EXPR:
    2545/    FE39 : CD 74 FE                    CALL    PARAM           ; GET A HEXADECIMAL PARAMETER, RETURNED IN HL
    2546/    FE3C : E3                  	        XTHL                    ; PUT THE PARAMETER IN THE STACK; HL NOW
    2547/    FE3D :                     		                                ;   CONTAINS RETURN ADDRESS OF CALL TO 'EXPR'
    2548/    FE3D : E5                  	        PUSH    H               ; PUT RETURN ADDRESS ON TOP OF STACK
    2549/    FE3E : 0D                  	        DCR     C               ; DECREMENT PARAMETER COUNT; CARRY BIT UNAFFECTED
    2550/    FE3F : D2 46 FE                    JNC     EX0             ; JUMP IF COMMA ENTERED (PARAM CALLS PCHK)
    2551/    FE42 : C2 47 F8                    JNZ     ERROR           ; INCORRECT PARAM COUNT
    2552/    FE45 : C9                  	        RET
    2553/    FE46 :                     		EX0:
    2554/    FE46 : C2 39 FE                    JNZ     EXPR            ; GET ANOTHER PARAMETER
    2555/    FE49 : C3 47 F8                    JMP     ERROR           ; NOT TERMINATED WITH CR
    2556/    FE4C :                     		;///////////////////////////////////////////////////////////////////////////////
    2557/    FE4C :                     		; 'HILO' - ENTERED VIA CALLS FROM 'D','F','M','W' COMMANDS
    2558/    FE4C :                     		; PROCESS: COMPARE HL WITH DE
    2559/    FE4C :                     		; INPUT: ADDRESS VALUES IN HL AND DE
    2560/    FE4C :                     		; OUTPUT: IF HL (= DE THE~ CARRY 121;
    2561/    FE4C :                     		;         IF HL > DE THEN CARRY = 1
    2562/    FE4C :                     		; MODIFIED: HL,A,F
    2563/    FE4C :                     		; STACK USAGE:
    2564/    FE4C :                     		HILO:
    2565/    FE4C : 23                  	        INX     H               ; INCREMENT HL ADDRESS
    2566/    FE4D : 7C                  	        MOV     A,H             ; TEST FOR HL = 0
    2567/    FE4E : B5                  	        ORA     L               ; ZERO BIT SET IF H=L=00, I.E. HL MUST
    2568/    FE4F :                     		                                ;   HAVE BEEN FFFFH
    2569/    FE4F : 37                  	        STC                     ; CARRY := 1
    2570/    FE50 : C8                  	        RZ
    2571/    FE51 : 7B                  	        MOV     A,E             ; DE - HL, SET/RESET CARRY
    2572/    FE52 : 95                  	        SUB     L               ; (LSB OF HIGH ADDR) - (MSB OF LOW ADDR)
    2573/    FE53 : 7A                  	        MOV     A,D
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 44 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2574/    FE54 : 9C                  	        SBB     H               ; (MSB OF HIGH ADDR) - (MSB OF LOW.ADDR)
    2575/    FE55 : C9                  	        RET                     ; RETURN
    2576/    FE56 :                     		;////////////////////////////////////////////////////////////////////////////
    2577/    FE56 :                     		; 'LADR' - ENTERED VIA CALLS FROM 'H' COMMAND AND 'RESTART' ROUTINE
    2578/    FE56 :                     		; PROCESS: PRINT CONTENTS OF HL IN HEX ON LOCAL CONSOLE DEVICE
    2579/    FE56 :                     		; INPUT: HL CONTAINS THE HEX VALUE TO BE OUTPUT(16 BITS)
    2580/    FE56 :                     		; OUTPUT:
    2581/    FE56 :                     		; MODIFIED: H,L,A
    2582/    FE56 :                     		; STACK USAGE:
    2583/    FE56 :                     		LADR:
    2584/    FE56 : 7C                  	        MOV     A,H
    2585/    FE57 : CD 5B FE                    CALL    LBYTE           ; PRINT 8 MSB OF HEX VALUE ON CONSOLE
    2586/    FE5A : 7D                  	        MOV     A,L
    2587/    FE5B :                     		;*******JMP     LBYTE           ; PRINT 8 LSB OF HEX VALUE ON CONSOLE
    2588/    FE5B :                     		;////////////////////////////////////////////////1///////////////////////////
    2589/    FE5B :                     		; 'LBYTE' - ENTERED VIA CALLS FROM'S' COMMAND AND 'DREG','LADR' ROUTINES
    2590/    FE5B :                     		;           ENTERED VIA JUMP FROM 'DREG' ROUTINE
    2591/    FE5B :                     		;           ENTERED VIA FALL-THRU FROM 'LADR' ROUTINE
    2592/    FE5B :                     		; PROCESS: LIST A BYTE AS TWO ASCII CHARACTERS
    2593/    FE5B :                     		; INPUT: A-REG CONTAINS THE 8 BITS TO BE CONVERTED TO ASCII
    2594/    FE5B :                     		; OUTPUT:
    2595/    FE5B :                     		; MODIFIED: A,F
    2596/    FE5B :                     		; STACK USAGE: 6 BYTES
    2597/    FE5B :                     		LBYTE:
    2598/    FE5B : F5                  	        PUSH    PSW             ; SAVE A-REG
    2599/    FE5C : 0F                  	        RRC
    2600/    FE5D : 0F                  	        RRC
    2601/    FE5E : 0F                  	        RRC
    2602/    FE5F : 0F                  	        RRC                     ; LOOK ONLY AT 4 MSB OF THE BYTE VALUE
    2603/    FE60 : CD 64 FE                    CALL    HXD             ; CONVERT IT TO ONE ASCII CHAR AND OUTPUT IT
    2604/    FE63 : F1                  	        POP     PSW             ; RETRIEVE ORIGINAL VALUE
    2605/    FE64 :                     		;*******JMP      HXD             ; CONVERT 4 LSB OF BYTE TO ASCII AND OUTPUT IT
    2606/    FE64 :                     		;////////////////////////////////////////////////1///////////////////////////
    2607/    FE64 :                     		; 'HXD' - ENTERED VIA CALL FROM 'LBYTE' ROUTINE
    2608/    FE64 :                     		;         ENTERED VIA FALL-THRU FROM 'LBYTE' ROUTINE
    2609/    FE64 :                     		; PROCESS: CONVERT 4 LSB IN A-REG INTO ONE ASCII CHAR IN A-REG, PRINT IT
    2610/    FE64 :                     		;          ON LOCAL CONSOLE DEVICE
    2611/    FE64 :                     		; INPUT: NIBBLE TO BE CONVERTED IS IN BITS 0-3 OF A-REG
    2612/    FE64 :                     		; OUTPUT:
    2613/    FE64 :                     		; MODIFIED: A-REG
    2614/    FE64 :                     		; STACK USAGE:
    2615/    FE64 :                     		HXD:
    2616/    FE64 : CD F4 FD                    CALL    CONV            ; CONVERT 4 BITS TO ONE 8-BIT ASCII CHAR
    2617/    FE67 : C3 95 FC                    JMP     COM             ; OUTPUT ON LOCAL CONSOLE
    2618/    FE6A :                     		;/////////////////////////////////////////////////////////////////////////////
    2619/    FE6A :                     		; 'LCRLF' - ENTERED VIA CALL FROM 'D' COMMAND
    2620/    FE6A :                     		; PROCESS: PRINT <CR>,<LF> ON LIST DEVICE
    2621/    FE6A :                     		; INPUT:
    2622/    FE6A :                     		; OUTPUT:
    2623/    FE6A :                     		; MODIFIED: C
    2624/    FE6A :                     		; STACK USAGE: 4 BYTES
    2625/    FE6A :                     		LCRLF:
    2626/    FE6A : 0E 0D                       MVI     C,CR
    2627/    FE6C : CD 14 FD                    CALL    LOM             ; OUTPUT <CR> TO LIST DEVICE
    2628/    FE6F : 0E 0A                       MVI     C,LF
    2629/    FE71 : C3 14 FD                    JMP     LOM             ; OUTPUT <LF) TO LIST DEVICE
    2630/    FE74 :                     		;///////////////////////////////////////////////////////////////////////////////
    2631/    FE74 :                     		; 'PARAM' - ENTERED VIA CALLS FROM 'G','S' COMMANDS AND 'EXPR' ROUTINE
    2632/    FE74 :                     		; 'PA0' - ENTERED VIA CALLS FROM 'G','S','X' COMMANDS
    2633/    FE74 :                     		; PROCESS: COLLECT A HEXADECIMAL PARAMETER
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 45 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2634/    FE74 :                     		; INPUT:
    2635/    FE74 :                     		; OUTPUT: HEXADECIMAL PARAMETER IN HL
    2636/    FE74 :                     		; MODIFIED: A,F,B,H,L
    2637/    FE74 :                     		; STACK USAGE:
    2638/    FE74 :                     		PARAM:
    2639/    FE74 : CD C5 FE                    CALL    PCHK            ; GET FIRST CHARACTER
    2640/    FE77 : CA 47 F8                    JZ      ERROR           ; DISALLOW NULL PARAMETERS
    2641/    FE7A :                     		PA0:
    2642/    FE7A : 21 00 00                    LXI     H,0             ; INTIALIZE HL := 0000
    2643/    FE7D :                     		PA1:
    2644/    FE7D : 47                  	        MOV     B,A             ; SAVE CHAR IN CASE IT'S A DELIMITER
    2645/    FE7E : CD 98 FE                    CALL    NIBBLE          ; CONVERT THE ASCII CHARACTER TO HEXi MUST BE
    2646/    FE81 :                     		                                ;   0-9,A-Fi IF NOT THE CARRY BIT IS SET
    2647/    FE81 : DA 90 FE                    JC      PA2             ; NOT LEGAL CHAR, TREAT AS DELIMITER
    2648/    FE84 : 29                  	        DAD     H               ; *2
    2649/    FE85 : 29                  	        DAD     H               ; *4
    2650/    FE86 : 29                  	        DAD     H               ; *8
    2651/    FE87 : 29                  	        DAD     H               ; *16 --- SHIFT THE OLD HEX VALUES 4 PLACES TO LEFT
    2652/    FE88 : B5                  	        ORA     L               ; PUT NEW HEX VALUE IN 4 LSB OF L-REG
    2653/    FE89 : 6F                  	        MOV     L,A
    2654/    FE8A : CD 61 FF                    CALL    TI              ; GET SUBSEQUENT CHARACTERS
    2655/    FE8D : C3 7D FE                    JMP     PA1             ;  DECODE NEXT CHARACTER
    2656/    FE90 :                     		PA2:
    2657/    FE90 : 78                  	        MOV     A,B             ; A := B := DELIMITER CHARACTER
    2658/    FE91 : CD C8 FE                    CALL    P2C             ; IS IT A VALID DELIMITER?
    2659/    FE94 : C2 47 F8                    JNZ     ERROR           ; JUMP TO ERROR IF IT ISN'T
    2660/    FE97 : C9                  	        RET
    2661/    FE98 :                     		;////////////////////////////////////////////////////////////////////
    2662/    FE98 :                     		; 'NIBBLE' - ENTERED VIA CALLS FROM 'BYTE','PARAM','PA0' ROUTINES
    2663/    FE98 :                     		; PROCESS: DECODE 8-BIT ASCII CHAR IN A-REG INTO 4-BIT HEX DIGIT IN A-REG,
    2664/    FE98 :                     		;          FILTER OUT ALL CHARACTERS NOT IN THE ASCII CODING SEQUENCE
    2665/    FE98 :                     		;          0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F.
    2666/    FE98 :                     		; INPUT: 8-BIT ASCII CHAR IN A-REG
    2667/    FE98 :                     		; OUTPUT: VALID HEX EQUIVALENT IN A-REG AND CARRY = 0, OTHERWISE
    2668/    FE98 :                     		; GARBAGE IN A-REG AND CARRY = 1 (INDICATING ILLEGAL CHARACTER)
    2669/    FE98 :                     		; MODIFIED: A, FLAGS
    2670/    FE98 :                     		; STACK USAGE: 2 BYTES
    2671/    FE98 :                     		NIBBLE:
    2672/    FE98 : D6 30                       SUI     '0'             ; IF THE ASCII CHAR IS BETWEEN 00 AND 2FH,
    2673/    FE9A : D8                  	        RC                      ;   THEN RETURN WITH CARRY = 1
    2674/    FE9B : C6 E9                       ADI     '0' - 'G'       ; IF THE ASCII CHAR IS GREATER THAN 46H,
    2675/    FE9D : D8                  	        RC                      ;   THEN RETURN WITH CARRY = 1
    2676/    FE9E : C6 06                       ADI     6               ; ORIGINAL ASCII CHAR WAS BETWEEN 30H AND 46H INCL.
    2677/    FEA0 : F2 A6 FE                    JP      NI0             ; JUMP IF IT WAS 41H THRU 46H (I.E. A-F)
    2678/    FEA3 : C6 07                       ADI     7               ; ORIGINAL ASCII CHAR WAS BETWEEN 30H AND 40H INCL
    2679/    FEA5 : D8                  	        RC                      ; RETURN WITH CARRY = 1 IF ASCII CHAR WAS
    2680/    FEA6 :                     		                                ;   BETWEEN 3AH AND 40H INCLUSIVE
    2681/    FEA6 :                     		NI0:                            ; VALID VALUE: 30H-39H,41H-46H
    2682/    FEA6 : C6 0A                       ADI     10              ; A-REG NOW CONTAINS HEX EQUIV. (0-9,A-F)
    2683/    FEA8 : B7                  	        ORA     A               ; CLEAR ERROR FLAG (I.E. RESET CARRY BIT)
    2684/    FEA9 : C9                  	        RET                     ; RETURN WITH VALID VALUE
    2685/    FEAA :                     		;//////////////////////////////////////////////////////////////////////
    2686/    FEAA :                     		; 'PADR' - ENTERED VIA CALLS FROM 'E','W' COMMANDS
    2687/    FEAA :                     		; PROCESS: PUNCH CONTENTS OF HL IN HEX ON PUNCH DEVICE
    2688/    FEAA :                     		; INPUT: HL CONTAINS 8-BIT LOAD ADDRESS
    2689/    FEAA :                     		; OUTPUT:
    2690/    FEAA :                     		; MODIFIED: A
    2691/    FEAA :                     		; STACK USAGE: 4 BYTES
    2692/    FEAA :                     		PADR:
    2693/    FEAA : 7C                  	        MOV     A,H             ; A := MSB OF LOAD ADDRESS
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 46 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2694/    FEAB : CD AF FE                    CALL    PBYTE           ; EMIT FRAMES 3 & 4
    2695/    FEAE : 7D                  	        MOV     A,L             ; A := LSB OF LOAD ADDRESS
    2696/    FEAF :                     		;*******JMP     PBYTE           ; EMIT FRAMES 5 & 6
    2697/    FEAF :                     		;////////////////////////////////////////////////////1///////////////////
    2698/    FEAF :                     		; 'PBYTE' - ENTERED VIA CALLS FROM 'E','W' COMMANDS AND 'PADR' ROUTINE
    2699/    FEAF :                     		;           ENTERED VIA FALL-THRU FROM 'PADR' ROUTINE
    2700/    FEAF :                     		; PROCESS: PUNCH A BYTE AS 2 ASCII CHARACTERS
    2701/    FEAF :                     		; INPUT: A-REG CONTAINS BYTE TO BE CONVERTED, D CONTAINS RUNNING CHECKSUM
    2702/    FEAF :                     		; OUTPUT: D CONTAINS UPDATED CHECKSUM
    2703/    FEAF :                     		; MODIFIED: A,F,D,E
    2704/    FEAF :                     		; STACK USAGE:
    2705/    FEAF :                     		PBYTE:
    2706/    FEAF : 5F                  	        MOV     E,A             ; SAVE BYTE TO BE CONVERTED IN E-REG
    2707/    FEB0 : 0F                  	        RRC
    2708/    FEB1 : 0F                  	        RRC
    2709/    FEB2 : 0F                  	        RRC
    2710/    FEB3 : 0F                  	        RRC                     ; LOOK ONLY AT 4 MSB OF THE BYTE
    2711/    FEB4 : CD F4 FD                    CALL    CONV            ; CONVERT IT TO 1 ASCII CHARACTER
    2712/    FEB7 : CD E9 FC                    CALL    PO              ; PUNCH IT
    2713/    FEBA : 7B                  	        MOV     A,E             ; NOW LOOK ONLY AT 4 LSB OF BYTE
    2714/    FEBB : CD F4 FD                    CALL    CONV            ; CONVERT IT TO ONE ASCII CHAR
    2715/    FEBE : CD E9 FC                    CALL    PO              ; PUNCH IT
    2716/    FEC1 : 7B                  	        MOV     A,E
    2717/    FEC2 : 82                  	        ADD     D               ; UPDATE THE RUNNING CHECKSUM
    2718/    FEC3 : 57                  	        MOV     D,A             ; STORE IT BACK IN THE D-REG
    2719/    FEC4 : C9                  	        RET                     ; RETURN
    2720/    FEC5 :                     		;///////////////////////////////////////////////////////////////////////////////
    2721/    FEC5 :                     		; 'PCHK' - ENTERED VIA CALLS FROM 'G','S','X' COMMANDS AND 'PARAM' ROUTINE
    2722/    FEC5 :                     		; 'P2C' - ENTERED VIA CALLS FROM 'PARAM','PA0' ROUTINES
    2723/    FEC5 :                     		; PROCESS: TEST FOR NULL INPUT PARAMETER (LOOK FOR SPACE,COMMA,OR (CR�
    2724/    FEC5 :                     		; INPUT:
    2725/    FEC5 :                     		; OUTPUT: CHARACTER IN A-REG
    2726/    FEC5 :                     		;         IF SPACE OR COMMA, THEN ZERO = 1 & CARRY = 0
    2727/    FEC5 :                     		;         IF <CR>,           THEN ZERO = 1 & CARRY = 1
    2728/    FEC5 :                     		;         IF NONE OF ABOVE,  THEN ZERO = 0 & CARRY = 0
    2729/    FEC5 :                     		; MODIFIED: A, FLAGS
    2730/    FEC5 :                     		; STACK USAGE: 4 BYTES
    2731/    FEC5 :                     		PCHK:
    2732/    FEC5 : CD 61 FF                    CALL    TI              ; GET A CHARACTER
    2733/    FEC8 :                     		P2C:
    2734/    FEC8 : FE 20                       CPI     ' '
    2735/    FECA : C8                  	        RZ                      ; IF SPACE, THEN ZERO = 1 & CARRY = 0
    2736/    FECB : FE 2C                       CPI     ','
    2737/    FECD : C8                  	        RZ                      ; IF COMMA, THEN ZERO = 1 & CARRY = 0
    2738/    FECE : FE 0D                       CPI     CR
    2739/    FED0 : 37                  	        STC
    2740/    FED1 : C8                  	        RZ                      ; IF <CR>, THEN ZERO = 1 & CARRY = 1
    2741/    FED2 : 3F                  	        CMC
    2742/    FED3 : C9                  	        RET                     ; IF NONE OF THE THREE, THEN ZERO=CARRY=0
    2743/    FED4 :                     		;///////////////////////////////////////////////////////////////////////////////
    2744/    FED4 :                     		;/ 'RESTART' - ENTERED VIA JUMP FROM LOCATION 0                                 /
    2745/    FED4 :                     		;/ PROCESS: BREAKPOINT/INTERRUPT/RESTART PROCESSING                             /
    2746/    FED4 :                     		;/ INPUT:                                                                       /
    2747/    FED4 :                     		;/ OUTPUT:                                                                      /
    2748/    FED4 :                     		;/ MODIFIED:                                                                    /
    2749/    FED4 :                     		;/ EXPLANATION:                                                                 /
    2750/    FED4 :                     		;/ THIS ROUTINE IS ENTERED VIA A RESTART 0 (RST 0) INSTRUCTION. THE             /
    2751/    FED4 :                     		;/ INSTRUCTION IS ENCOUNTERED EITHER IN THE USER PROGRAM (AS A BREAKPOINT)      /
    2752/    FED4 :                     		;/ OR IS INPUT VIA A LOCAL CONSOLE INTERRUPT (I.E. USER HAS ACTIVATED THE       /
    2753/    FED4 :                     		;/ INTERRUPT 0 SWITCH). THIS ROUTINE SAVES THE STATE OF THE CALLING             /
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 47 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2754/    FED4 :                     		;/ PROCESS AND TURNS CONTROL OVER TO THE MONITOR. THIS IS DONE IN THE           /
    2755/    FED4 :                     		;/ FOLLOWING MANNER:                                                            /
    2756/    FED4 :                     		;/    1. THE USER ENVIRONMENT IS SAVED BY PUSHING THE REGISTERS ON TOP          /
    2757/    FED4 :                     		;/       OF THE USER'S OWN WORK STACK.                                          /
    2758/    FED4 :                     		;/    2. PROGRAM THE 8259 WITH THE MONITOR'S OWN INTERRUPT MASK REGISTER.       /
    2759/    FED4 :                     		;/    3. THE MONITOR'S EXIT TEMPLATE IS FOUND AND THE REGISTER VALUES           /
    2760/    FED4 :                     		;/       REPRESENTING THE USER'S STATE ARE POPPED OFF THE USER WORK STACK       /
    2761/    FED4 :                     		;/       AND STORED IN THE APPROPRIATE PLACES IN THE EXIT TEMPLATE.             /
    2762/    FED4 :                     		;/    4. TEST TO SEE IF THE POINT AT WHICH USER PROGRAM INTERRUPTION            /
    2763/    FED4 :                     		;/       OCCURRED (VALUE OF PROGRAM COUNTER) COINCIDES WITH A BREAKPOINT        /
    2764/    FED4 :                     		;/       ADDRESS.                                                               /
    2765/    FED4 :                     		;/       A. IF IT DOESN'T, THEN RESTART CODE WAS ENTERED VIA A CONSOLE          /
    2766/    FED4 :                     		;/          INTERRUPT SO SEND EOI TO THE 8259.                                  /
    2767/    FED4 :                     		;/       B. IF IT DOES, THEN PROGRAM THE EXIT CODE TO 1) LOAD THE CORRECT       /
    2768/    FED4 :                     		;/          HAND L VALUES AND TO 2) JUMP TO THE ADDRESS INDICATED BY THE PC     /
    2769/    FED4 :                     		;/          (PUSHED ON STACK AT TIME OF RST 13 INSTRUCTION OR WHEN CONSOLE      /
    2770/    FED4 :                     		;/          INTERRUPT). ALSO, RESTORE THE TRAP VALUES AT THE PROPER             /
    2771/    FED4 :                     		;/          TRAP ADDRESSES.                                                     /
    2772/    FED4 :                     		;/    5. RETURN CONTROL TO THE MONITOR (BY JUMPING TO START).                   /
    2773/    FED4 :                     		;/                                                                              /
    2774/    FED4 :                     		;///////////////////////////////////////////////////////////////////////////////
    2775/    FED4 :                     		RESTART:
    2776/    FED4 : F3                  	        DI                      ; DISABLE IF SOFTWARE TRAP
    2777/    FED5 :                     		                                ; SAVE USER'S ENVIRONMENT
    2778/    FED5 : E5                  	        PUSH    H               ; SAVE H,L
    2779/    FED6 : D5                  	        PUSH    D               ; SAVE D,E
    2780/    FED7 : C5                  	        PUSH    B               ; SAVE B,C
    2781/    FED8 : F5                  	        PUSH    PSW             ; SAVE A,FLAGS
    2782/    FED9 : D1                  	        POP     D               ; TEMPORARILY SAVE PSW IN D & E
    2783/    FEDA : E5                  	        PUSH    H               ; DUMMY PUSH TO RESERVE SPACE IN STACK FOR
    2784/    FEDB :                     		                                ;   CURRENT INTERRUPT MASK AND CONFIGURATION
    2785/    FEDB :                     		                                ;   BYTE
    2786/    FEDB : 2A 04 00                    LHLD    MEMTOP
    2787/    FEDE : 2E CC                       MVI     L,(ILOC-1) & 0FFH; HL NOW POINTS TO CONFIGURATION BYTE IN
    2788/    FEE0 :                     		                                ;   EXIT CODE IN TOP PAGE OF RAM
    2789/    FEE0 : 6E                  	        MOV     L,M             ; L NOW CONTAINS THIS CONFIGURATION BYTE
    2790/    FEE1 : DB FC                       IN      SOCP1           ; INPUT CURRENT INTERRUPT MASK REGISTER --
    2791/    FEE3 :                     		                                ;   THIS MASK IS THE USER'S, SO SAVE IT
    2792/    FEE3 : 67                  	        MOV     H,A             ; H NOW CONTAINS THIS INTERRUPT MASK
    2793/    FEE4 : E3                  	        XTHL                    ; THE INTERRUPT MASK AND CONFIGURATION BYTE
    2794/    FEE5 :                     		                                ;   ARE NOW ON TOP OF THE USER STACK
    2795/    FEE5 : D5                  	        PUSH    D               ; NOW PUT THE ORIGINAL PSW ON TOP OF THE STACK
    2796/    FEE6 : 3E FE                       MVI     A,~ INT0      ; SET MONITOR'S DEFAULT INTERRUPT MASK
    2797/    FEE8 : D3 FC                       OUT     SOCP1           ; OUTPUT NEW MASK
    2798/    FEEA : 2A 04 00                    LHLD    MEMTOP
    2799/    FEED : 2E D2                       MVI     L,EXIT & 0FFH ; HL NOW POINTS TO EXIT CODE AT TOP OF RAM
    2800/    FEEF : EB                  	        XCHG                    ; SO NOW DE POINTS TO EXIT CODE AT TOP OF RAM
    2801/    FEF0 : 21 0C 00                    LXI     H,12            ; H := 00, L := 0C (DECIMAL VALUE 12)
    2802/    FEF3 : 39                  	        DAD     SP              ; EFFECT OF THIS IS TO CUT BACK THE USER'S
    2803/    FEF4 :                     		                                ;   STACK TO WHAT IT WAS BEFORE ENTERING
    2804/    FEF4 :                     		                                ;   THIS RESTART ROUTINE AND BEFORE THE PC
    2805/    FEF4 :                     		                                ;   WAS PUSHED ON BY RST 0 OR INTERRUPT.
    2806/    FEF4 :                     		                                ;   HL CONTAINS THIS 'OLD' STACK ADDRESS.
    2807/    FEF4 : 06 05                       MVI     B,5             ; COUNT FOR TRANSFER OF MACHINE STATE
    2808/    FEF6 :                     		                                ;   TO EXIT TEMPLATE STORAGE (MOVE THE STACK) 
    2809/    FEF6 : EB                  	        XCHG                    ; HL NOW POINTS TO EXIT CODE AT TOP OF RAM
    2810/    FEF7 :                     		                                ; DE NOW POINTS TO USER STACK AS IT WAS
    2811/    FEF7 :                     		                                ;   PRIOR TO RST 0 OR CONSOLE INTERRUPT.
    2812/    FEF7 :                     		;       ---------------------------------------------------------------------
    2813/    FEF7 :                     		RST0:                           ; MOVE THE MACHINE STATE FROM THE USER'S STACK 
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 48 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2814/    FEF7 :                     		                                ; TO THE RESERVED AREA IN THE EXIT TEMPLATE
    2815/    FEF7 :                     		                                ; IN TOP PAGE OF RAM.
    2816/    FEF7 :                     		                                ;    B=5     !   B=4  !   B=3  !  B=2 ! B=1
    2817/    FEF7 :                     		                                ;------------!--------!--------!------!------
    2818/    FEF7 : 2B                  	        DCX     H               ;            !        !        !      !
    2819/    FEF8 : 72                  	        MOV     M,D             ;BLOC=MSB(SP)!ALOC=A  !ILOC=INT!BLOC=B!DLOC=D
    2820/    FEF9 : 2B                  	        DCX     H               ;            !        !        !      !
    2821/    FEFA : 73                  	        MOV     M,E             ;    =LSB(SP)!FLOC=FLG!    =FLG!CLOC=C!ELOC=E
    2822/    FEFB : D1                  	        POP     D               ;DE=AF       !DE=INT,F!DE=BC   !DE=DE !DE=HL
    2823/    FEFC : 05                  	        DCR     B               ;B=4         !B=3     !B=2     !B=1   !B=0
    2824/    FEFD : C2 F7 FE                    JNZ     RST0
    2825/    FF00 :                     		;       ---------------------------------------------------------------------
    2826/    FF00 :                     		                                ; AT THIS POINT, HL POINTS TO THE BASE OF
    2827/    FF00 :                     		                                ; THE MONITOR STACK (TOS) IN TOP PAGE OF
    2828/    FF00 :                     		                                ; RAM. DE CONTAINS THE H & L VALUES THE
    2829/    FF00 :                     		                                ; USER HAD PRIOR TO ENTERING THE RESTART
    2830/    FF00 :                     		                                ; ROUTINE.
    2831/    FF00 : C1                  	        POP     B               ; BC = OLD PC (PUSHED ON USER STACK BY
    2832/    FF01 :                     		                                ;   RST 0 OR INTERRUPT)
    2833/    FF01 : 0B                  	        DCX     B               ; DECREMENT TO POINT AT TRAPPED CODE
    2834/    FF02 : F9                  	        SPHL                    ; SP NOW POINTS TO TOS (BASE OF MONITOR STACK)
    2835/    FF03 : 2A 04 00                    LHLD    MEMTOP
    2836/    FF06 : 2E E2                       MVI     L,TLOC & 0FFH ; HL NOW POINTS TO TLOC IN TOP PAGE OF RAM
    2837/    FF08 :                     		                                ;   I.E. LSB OF TRAP 1 ADDRESS
    2838/    FF08 : 7E                  	        MOV     A,M             ; TEST IF THIS IS A PROGRAMMED RESTART OR A
    2839/    FF09 : 91                  	        SUB     C               ;   LOCAL CONSOLE INTERRUPT BY COMPARING THE
    2840/    FF0A :                     		                                ;   PC VALUE WITH TRAP 1 ADDRESS
    2841/    FF0A :                     		                                ;   A := LSB OF TRAP 1 ADDRESS
    2842/    FF0A : 23                  	        INX     H               ; HL POINTS TO MSB OF TRAP 1 ADDRESS
    2843/    FF0B : C2 13 FF                    JNZ     RSTA            ; PC DID NOT MATCH TRAP 1 ADDRESS
    2844/    FF0E : 7E                  	        MOV     A,M             ; A := MSB OF TRAP 1 ADDRESS
    2845/    FF0F : 98                  	        SBB     B
    2846/    FF10 : CA 25 FF                    JZ      RST1            ; PC MATCHES TRAP 1 --- A PROGRAMMED RESTART
    2847/    FF13 :                     		RSTA:                           ; REPEAT SAME STEPS AS ABOVE BUT SEE IF PC
    2848/    FF13 :                     		                                ;   MATCHES 2ND BREAKPOINT (TRAP 2 ADDRESS)
    2849/    FF13 : 23                  	        INX     H               ; HL POINTS TO TRAP 1 OPCODE VALUE
    2850/    FF14 : 23                  	        INX     H               ; HL POINTS TO LSB OF TRAP 2 ADDRESS
    2851/    FF15 : 7E                  	        MOV     A,M             ; A := LSB OF TRAP 2 ADDRESS
    2852/    FF16 : 91                  	        SUB     C
    2853/    FF17 : 23                  	        INX     H               ; HL POINTS TO MSB OF TRAP 2 ADDRESS
    2854/    FF18 : C2 20 FF                    JNZ     RSTB            ; PC DID NOT MATCH TRAP 2 ADDRESS
    2855/    FF1B : 7E                  	        MOV     A,M             ; A := MSB OF TRAP 2 ADDRESS
    2856/    FF1C : 98                  	        SBB     B
    2857/    FF1D : CA 25 FF                    JZ      RST1            ; PC MATCHES TRAP 2 --- A PROGRAMMED RESTART
    2858/    FF20 :                     		RSTB:                           ; NOT A PROGRAMMED RESTART, BUT A
    2859/    FF20 : 3E 20                       MVI     A,EOI           ;   CONSOLE INTERRUPT SO SEND EOI TO 8259
    2860/    FF22 : D3 FD                       OUT     SOCP0
    2861/    FF24 : 03                  	        INX     B               ; ADJUST PC FOR LOCAL CONSOLE RESTART
    2862/    FF25 :                     		                                ;   I.E. GET READY TO POINT PC TO
    2863/    FF25 :                     		                                ;   RESUMPTION POINT IN CODE IT WAS
    2864/    FF25 :                     		                                ;   EXECUTING WHEN INTERRUPTED
    2865/    FF25 :                     		                                ;   BC POINTS TO NEXT INSTR TO BE EXECUTED
    2866/    FF25 :                     		                                ;   WHEN CONTROL IS RETURNED TO USER PROGRAM
    2867/    FF25 :                     		RST1:                           ; PROGRAMMED RESTART AT A BREAKPOINT (TRAP)
    2868/    FF25 :                     		                                ;   ALSO FALLTHROUGH FROM CONSOLE INTERRUPT
    2869/    FF25 : 2A 04 00                    LHLD    MEMTOP
    2870/    FF28 : 2E DC                       MVI     L,LLOC & 0FFH ; HL NOW POINTS TO LLOC IN EXIT CODE IN TOP OF RAM
    2871/    FF2A : 73                  	        MOV     M,E             ; USER'S L VALUE PRIOR TO RESTART IS STORED IN LLOC
    2872/    FF2B : 23                  	        INX     H
    2873/    FF2C : 72                  	        MOV     M,D             ; USER'S H VALUE PRIOR TO RESTART IS STORED IN HLOC
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 49 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2874/    FF2D :                     		;       ---------------------------------------------------------------------
    2875/    FF2D : 2E E0                       MVI     L,(PLOC-1) & 0FFH; HL POINTS TO LSB OF JMP INSTR IN EXIT CODE
    2876/    FF2F : 71                  	        MOV     M,C             ; SAVE LSB OF USER'S PC
    2877/    FF30 : 23                  	        INX     H
    2878/    FF31 : 70                  	        MOV     M,B             ; SAVE MSB OF USER'S PC. EFFECT IS TO LOAD THE
    2879/    FF32 :                     		                                ; PROPER ADDRESS INTO THE EXIT TEMPLATE FOR THE
    2880/    FF32 :                     		                                ; JUMP BACK TO THE USER'S PROGRAM.
    2881/    FF32 :                     		;       ---------------------------------------------------------------------
    2882/    FF32 : C5                  	        PUSH    B
    2883/    FF33 : CD DE FC                    CALL    COMC
    2884/    FF36 : 23                  	        DB      '#'
    2885/    FF37 : E1                  	        POP     H               ; RETRIEVE OLD PC FOR DISPLAY
    2886/    FF38 : CD 56 FE                    CALL    LADR            ; DISPLAY PC
    2887/    FF3B :                     		;       ---------------------------------------------------------------------
    2888/    FF3B :                     		                                ; CLEAR TRAPS
    2889/    FF3B : 2A 04 00                    LHLD    MEMTOP
    2890/    FF3E : 2E E2                       MVI     L,TLOC & 0FFH ; HL NOW POINTS TO TLOC IN TOP PAGE OF RAM
    2891/    FF40 : 16 02                       MVI     D,2             ; SET COUNT FOR TWO TRAPS
    2892/    FF42 :                     		RST2:
    2893/    FF42 : 4E                  	        MOV     C,M             ; C := LSB OF TRAP ADDRESS
    2894/    FF43 : AF                  	        XRA     A
    2895/    FF44 : 77                  	        MOV     M,A             ; ZERO OUT LSB OF TRAP ADDRESS
    2896/    FF45 : 23                  	        INX     H
    2897/    FF46 : 46                  	        MOV     B,M             ; B := MSB OF TRAP ADDRESS
    2898/    FF47 : 77                  	        MOV     M,A             ; ZERO OUT MSB OF TRAP ADDRESS
    2899/    FF48 : 23                  	        INX     H               ; HL NOW POINTS TO TRAP VALUE
    2900/    FF49 : 79                  	        MOV     A,C             ; BC CONTAINS THE TRAP ADDRESS
    2901/    FF4A : B0                  	        ORA     B               ; TEST FOR VALID TRAP
    2902/    FF4B : CA 50 FF                    JZ      RST3            ; TRAP ADDRESS IS 0, SO NO TRAP TO RESTORE
    2903/    FF4E : 7E                  	        MOV     A,M             ; GET OPCODE BYTE, I.E. TRAP VALUE
    2904/    FF4F : 02                  	        STAX    B               ; PUT IT BACK IN CORRECT PLACE IN USER PROGRAM,
    2905/    FF50 :                     		                                ;   I.E. REPLACE THE RST 0 INSTR WITH ORIGINAL
    2906/    FF50 :                     		                                ;   OPCODE.
    2907/    FF50 :                     		RST3:
    2908/    FF50 : 23                  	        INX     H               ; POINT TO TRAP 2 ADDRESS IF D=2
    2909/    FF51 : 15                  	        DCR     D
    2910/    FF52 : C2 42 FF                    JNZ     RST2            ; REPEAT FOR TRAP 2
    2911/    FF55 : C3 55 F8                    JMP     START           ; ENTER MONITOR (INTERRUPTS STILL DISABLED)
    2912/    FF58 :                     		;///////////////////////////////////////////////////////////////////////////////
    2913/    FF58 :                     		; 'RIX' - ENTERED VIA CALLS FROM 'R' COMMAND AND 'BYTE' ROUTINE
    2914/    FF58 :                     		; PROCESS: GET A CHARACTER FROM READER, MASK OFF P~RITY BIT
    2915/    FF58 :                     		; INPUT:
    2916/    FF58 :                     		; OUTPUT: CHARACTER IN A-REG, BIT 7 IS 0
    2917/    FF58 :                     		; MODIFIED: A,F
    2918/    FF58 :                     		; STACK USAGE:
    2919/    FF58 :                     		RIX:
    2920/    FF58 : CD 0F FC                    CALL    RI              ; GET CHARACTER FROM READER DEVICE
    2921/    FF5B : DA 47 F8                    JC      ERROR           ; READER TIMEOUT ERROR
    2922/    FF5E : E6 7F                       ANI     7FH             ; MASK OUT THE PARITY BIT
    2923/    FF60 : C9                  	        RET                     ; RETURN
    2924/    FF61 :                     		;/////////////////////////////////////I/////////////////////////////////////////
    2925/    FF61 :                     		; 'TI' - ENTERED VIA CALLS FROM 'A','N','Q' COMMANDS AND 'START','PARAM'
    2926/    FF61 :                     		;        'PA0','PCHK' ROUTINES
    2927/    FF61 :                     		;        ENTERED VIA JUMP FROM 'BREAK'
    2928/    FF61 :                     		; PROCESS: INPUT FROM LOCAL CONSOLE, ECHO, RETURN IN A-REG
    2929/    FF61 :                     		; INPUT:
    2930/    FF61 :                     		; OUTPUT: CHARACTER IN A-REG
    2931/    FF61 :                     		; MODIFIED: A,F
    2932/    FF61 :                     		; STACK USAGE:
    2933/    FF61 :                     		TI:
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 50 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2934/    FF61 : C5                  	        PUSH    B               ; SAVE STATE OF B- & C-REGS
    2935/    FF62 : CD BE FB                    CALL    CI              ; GET A CHARACTER FROM THE CONSOLE
    2936/    FF65 : E6 7F                       ANI     7FH             ; MASK OFF PARITY BIT
    2937/    FF67 : CD 76 FF                    CALL    UC              ; CONVERT TO UPPER CASE
    2938/    FF6A : FE 03                       CPI     ETX             ; TEST FOR BREAK
    2939/    FF6C : CA 47 F8                    JZ      ERROR           ; ABORT COMMAND
    2940/    FF6F : 4F                  	        MOV     C,A             ; MOVE INPUT CHARACTER TO C-REG
    2941/    FF70 : CD 9F FC                    CALL    CO              ; ECHO IT
    2942/    FF73 : 79                  	        MOV     A,C
    2943/    FF74 : C1                  	        POP     B               ; RESTORE STATE OF B & C
    2944/    FF75 : C9                  	        RET                     ; RETURN
    2945/    FF76 :                     		;//////////////////////////////////////////////////////////////////////////////
    2946/    FF76 :                     		; 'UC' - ENTERED VIA CALL FROM 'TI' ROUTINE
    2947/    FF76 :                     		; PROCESS: CONVERT CHARACTER IN A-REG FROM LOWER CASE TO UPPER CASE
    2948/    FF76 :                     		; INPUT: LOWER OR UPPER CASE CHAR IN A-REG
    2949/    FF76 :                     		; OUTPUT: UPPER CASE CHARACTER IN A-REG
    2950/    FF76 :                     		; MODIFIED: A,F
    2951/    FF76 :                     		; STACK USAGE:
    2952/    FF76 :                     		UC:
    2953/    FF76 : FE 61                       CPI     'A'+20H
    2954/    FF78 : F8                  	        RM                      ; CHAR < LC(A) , I.E. IF THE CHAR IN A-REG
    2955/    FF79 :                     		                                ;   IS NOT LOWER CASE, THEN IT HAS VALUE
    2956/    FF79 :                     		                                ;   < 61H, SO A - 61H WILL BE MINUS. IF
    2957/    FF79 :                     		                                ;   IT IS IN LOWER CASE, THE RESULT WILL
    2958/    FF79 :                     		                                ;   BE POSITIVE.
    2959/    FF79 : FE 7B                       CPI     'Z'+20H+1
    2960/    FF7B : F0                  	        RP                      ; CHAR > LC(Z) , I.E. WE KNOW THE A-REG IS
    2961/    FF7C :                     		                                ;   UPPER CASE OR SPECIAL CHAR. IF IT IS A
    2962/    FF7C :                     		                                ;   SPECIAL CHAR, A - 78H WILL BE 0 OR
    2963/    FF7C :                     		                                ;   GREATER SO RETURN.
    2964/    FF7C : E6 DF                       ANI     ~ 20H         ; FORCE UPPER CASE
    2965/    FF7E : C9                  	        RET
    2966/    FF7F :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    2967/    FF7F :                     		;*                                                                     *
    2968/    FF7F :                     		;*      I/O CONTROLLER INTERFACE DRIVERS                               *
    2969/    FF7F :                     		;*                                                                     *
    2970/    FF7F :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    2971/    FF7F :                     		; 'IOCDR1' - ENTERED VIA CALLS FROM 'CI','CSTS' ROUTINES
    2972/    FF7F :                     		; PROCESS: GET DEVICE STATUS OR GET DATA FROM PERIPHERAL
    2973/    FF7F :                     		; INPUT: B CONTAINS THE COMMAND (STATUS REQUEST OR INPUT DATA REQUEST)
    2974/    FF7F :                     		; OUTPUT: A CONTAINS THE REQUESTED INFORMATION
    2975/    FF7F :                     		; MODIFIED: A,FLAGS,B
    2976/    FF7F :                     		; STACK USAGE:
    2977/    FF7F :                     		IOCDR1:
    2978/    FF7F : CD A6 FF                    CALL    IOCCOM          ; OUTPUT 'GET DEVICE STATUS COMMAND' OR
    2979/    FF82 :                     		                                ;   'INPUT DATA COMMAND' TO IOC CONTROL
    2980/    FF82 :                     		                                ;   PORT
    2981/    FF82 :                     		IOCXXX:
    2982/    FF82 : DB C1                       IN      IOCS            ; INPUT DBB STATUS
    2983/    FF84 : E6 07                       ANI     IBF | OBF | F0; MASK OFF STATUS FLAGS
    2984/    FF86 : FE 01                       CPI     OBF             ; TEST FOR SLAVE DONE; SOMETHING FOR THE MASTER
    2985/    FF88 : C2 82 FF                    JNZ     IOCXXX          ; IF NOT, CONTINUE TO LOOP
    2986/    FF8B : DB C0                       IN      IOCI            ; OTHERWISE, INPUT THE DATA FROM THE DBB
    2987/    FF8D : F5                  	        PUSH    PSW             ; SAVE A-REG
    2988/    FF8E : 3E 05                       MVI     A,ENABL         ; ENABLE INTERRUPTS
    2989/    FF90 : D3 FF                       OUT     CPUC
    2990/    FF92 : F1                  	        POP     PSW             ; RESTORE A-REG
    2991/    FF93 : C9                  	        RET
    2992/    FF94 :                     		;------------------------------------------------------------------------------
    2993/    FF94 :                     		; 'IOCDR2' - ENTERED VIA CALLS FROM 'BLK','COM','CO','CRTOUT' ROUTINES
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 51 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    2994/    FF94 :                     		; PROCESS: OUTPUT DATA TO THE PERIPHERAL DEVICE
    2995/    FF94 :                     		; INPUT: B CONTAINS THE COMMAND TO OUTPUT THE DATA
    2996/    FF94 :                     		; C CONTAINS THE DATA TO BE OUTPUT
    2997/    FF94 :                     		; OUTPUT:
    2998/    FF94 :                     		; MODIFIED: A,FLAGS,B,C
    2999/    FF94 :                     		; STACK USAGE:
    3000/    FF94 :                     		IOCDR2:
    3001/    FF94 : CD A6 FF                    CALL    IOCCOM          ; OUTPUT 'OUTPUT DATA COMMAND' TO IOC
    3002/    FF97 :                     		                                ;   CONTROL PORT
    3003/    FF97 :                     		IOCYYY:
    3004/    FF97 : DB C1                       IN      IOCS            ; INPUT DBB STATUS
    3005/    FF99 : E6 07                       ANI     IBF | F0 | OBF; TEST FOR SLAVE PROCESSOR READY
    3006/    FF9B : C2 97 FF                    JNZ     IOCYYY          ; CONTINUE TO LOOP UNTIL IT IS READY
    3007/    FF9E : 79                  	        MOV     A,C             ; LOAD DATA TO BE WRITTEN
    3008/    FF9F : D3 C0                       OUT     IOCO            ; OUTPUT DATA TO THE DBB
    3009/    FFA1 : 3E 05                       MVI     A,ENABL         ; ENABLE INTERRUPTS
    3010/    FFA3 : D3 FF                       OUT     CPUC
    3011/    FFA5 : C9                  	        RET
    3012/    FFA6 :                     		;-------------------------------------------------------------------------
    3013/    FFA6 :                     		; 'IOCCOM' - COMMON ROUTINE TO IOC DRIVERS
    3014/    FFA6 :                     		;            ENTERED VIA CALLS FROM 'IOCDRl' AND 'IOCDR2'
    3015/    FFA6 :                     		; PROCESS: OUTPUT COMMAND TO THE IOC
    3016/    FFA6 :                     		; INPUT: B CONTAINS THE COMMAND
    3017/    FFA6 :                     		; OUTPUT:
    3018/    FFA6 :                     		; MODIFIED: A,FLAGS
    3019/    FFA6 :                     		; STACK USAGE:
    3020/    FFA6 :                     		IOCCOM:
    3021/    FFA6 : 3E 0D                       MVI     A,DISABL        ; BLOCK ALL INTERRUPTS
    3022/    FFA8 : D3 FF                       OUT     CPUC
    3023/    FFAA :                     		IOCZZZ:
    3024/    FFAA : DB C1                       IN      IOCS            ; INPUT DBB STATUS
    3025/    FFAC : E6 07                       ANI     F0 | IBF | OBF; TEST FOR SLAVE PROCESSOR IDLE
    3026/    FFAE : C2 AA FF                    JNZ     IOCZZZ          ; LOOP UNTIL IT IS IDLE
    3027/    FFB1 : 78                  	        MOV     A,B             ; LOAD COMMAND
    3028/    FFB2 : D3 C1                       OUT     IOCC            ; OUTPUT COMMAND TO IOC CONTROL PORT
    3029/    FFB4 : C9                  	        RET
    3030/    FFB5 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    3031/    FFB5 :                     		;*                                                                   *
    3032/    FFB5 :                     		;*      PARALLEL I/O INTERFACE DRIVERS                               *
    3033/    FFB5 :                     		;*                                                                   *
    3034/    FFB5 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    3035/    FFB5 :                     		; 'PIODR1' - ENTERED VIA CALLS FROM 'RI','PO','POC','LO','UPPS'
    3036/    FFB5 :                     		; 'PIODR2' - ENTERED VIA CALLS FROM 'ur','uPPS' ROUTINES
    3037/    FFB5 :                     		; PROCESS: GET DEVICE STATUS OR GET DATA FROM A PERIPHERAL
    3038/    FFB5 :                     		; INPUT: B CONTAINS THE COMMAND (STATUS REQUEST OR INPUT DATA REQUEST)
    3039/    FFB5 :                     		; OUTPUT: A CONTAINS THE REQUESTED INFORMATION
    3040/    FFB5 :                     		; MODIFIED: A, FLAGS, B
    3041/    FFB5 :                     		; STACK USAGE:
    3042/    FFB5 :                     		PIODR1:
    3043/    FFB5 : CD E4 FF                    CALL    PIOCOM          ; OUTPUT 'GET DEVICE STATUS COMMAND' OR
    3044/    FFB8 :                     		                                ;   'INPUT DATA COMMAND' OR OTHER SUCH
    3045/    FFB8 :                     		                                ;   COMMAND TO THE PIO CONTROL PORT
    3046/    FFB8 :                     		PIODR2:
    3047/    FFB8 : 3E 0D                       MVI     A,DISABL        ; BLOCK ALL INTERRUPTS
    3048/    FFBA : D3 FF                       OUT     CPUC
    3049/    FFBC : DB F9                       IN      PIOS            ; INPUT DBB STATUS
    3050/    FFBE : E6 07                       ANI     F0 | IBF | OBF; MASK OFF STATUS FLAGS
    3051/    FFC0 : FE 01                       CPI     OBF             ; TEST FOR SLAVE DONE; SOMETHING FOR THE MASTER
    3052/    FFC2 : C2 B8 FF                    JNZ     PIODR2          ; LOOP UNTIL SLAVE IS READY
    3053/    FFC5 : DB F8                       IN      PIOI            ; OTHERWISE INPUT THE DATA FROM THE DBB
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 52 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


    3054/    FFC7 : F5                  	        PUSH    PSW             ; SAVE A-REG
    3055/    FFC8 : 3E 05                       MVI     A,ENABL         ; ENABLE INTERRUPTS
    3056/    FFCA : D3 FF                       OUT     CPUC
    3057/    FFCC : F1                  	        POP     PSW             ; RESTORE A-REG
    3058/    FFCD : C9                  	        RET
    3059/    FFCE :                     		;-----------------------------------------------------------------------
    3060/    FFCE :                     		; 'PIODR3' - ENTERED VIA CALLS FROM 'POC','PO','LO','UI','UO J ROUTlNES
    3061/    FFCE :                     		; 'PIODR4' - ENTERED VIA CALLS FROM 'UI','UO'
    3062/    FFCE :                     		; PROCESS: OUTPUT DATA TO A PERIPHERAL DEVICE
    3063/    FFCE :                     		; INPUT: B CONTAINS THE COMMAND TO OUTPUT THE DATA
    3064/    FFCE :                     		;        C CONTAINS THE DATA TO BE OUTPUT
    3065/    FFCE :                     		; OUTPUT:
    3066/    FFCE :                     		; MODIFIED: A,FLAGS,B, C
    3067/    FFCE :                     		; STACK USAGE:
    3068/    FFCE :                     		PIODR3:
    3069/    FFCE : CD E4 FF                    CALL    PIOCOM          ; OUTPUT 'OUTPUT DATA COMMAND' TO PIO
    3070/    FFD1 :                     		PIODR4:
    3071/    FFD1 : 3E 0D                       MVI     A,DISABL        ; BLOCK ALL INTERRUPTS
    3072/    FFD3 : D3 FF                       OUT     CPUC
    3073/    FFD5 : DB F9                       IN      PIOS            ; INPUT DBB STATUS
    3074/    FFD7 : E6 07                       ANI     F0 | IBF | OBF; TEST FOR SLAVE PROCESSOR READY
    3075/    FFD9 : C2 D1 FF                    JNZ     PIODR4          ; LOOP UNTIL IT IS READY
    3076/    FFDC : 79                  	        MOV     A,C             ; LOAD DATA TO BE WRITTEN
    3077/    FFDD : D3 F8                       OUT     PIOO            ; OUTPUT DATA TO THE DBB
    3078/    FFDF : 3E 05                       MVI     A,ENABL         ; ENABLE INTERRUPTS
    3079/    FFE1 : D3 FF                       OUT     CPUC
    3080/    FFE3 : C9                  	        RET 
    3081/    FFE4 :                     		;------------------------------------------------------------------- 
    3082/    FFE4 :                     		; 'PIOCOM' - COMMON ROUTINE OF PIO DRIVERS
    3083/    FFE4 :                     		;            ENTERED VIA CALLS FROM 'PIODR1', 'PIODR3', 'RI' ROUTINES
    3084/    FFE4 :                     		; INPUT: B CONTAINS THE COMMAND
    3085/    FFE4 :                     		; OUTPUT:
    3086/    FFE4 :                     		; MODIFIED: A,FLAGS
    3087/    FFE4 :                     		; STACK USAGE:
    3088/    FFE4 :                     		PIOCOM:
    3089/    FFE4 : 3E 0D                       MVI     A,DISABL        ; BLOCK ALL INTERRUPTS
    3090/    FFE6 : D3 FF                       OUT     CPUC
    3091/    FFE8 :                     		PIOZZZ:
    3092/    FFE8 : DB F9                       IN      PIOS            ; INPUT DBB STATUS
    3093/    FFEA : E6 07                       ANI     F0 | IBF | OBF; TEST FOR SLAVE PROCESSOR IDLE
    3094/    FFEC : C2 E8 FF                    JNZ     PIOZZZ          ; LOOP UNTIL IT IS IDLE
    3095/    FFEF : 78                  	        MOV     A,B             ; LOAD THE COMMAND
    3096/    FFF0 : D3 F8                       OUT     PIOO            ; OUTPUT THE COMMAND TO THE PIO CONTROL PORT
    3097/    FFF2 : 3E 05                       MVI     A,ENABL         ; ENABLE INTERRUPTS
    3098/    FFF4 : D3 FF                       OUT     CPUC
    3099/    FFF6 : C9                  	        RET
    3100/    FFF7 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
    3101/    FFFD :                             ORG     0FFFDH
    3102/    FFFD : 6C                  	MNCKSM: DB      06CH            ; CHKSUM MONITOR TO 01EH
    3103/    FFFE : 00                  	        DB      00              ; UNUSED BYTE
    3104/    FFFF : 01                  	        DB      01              ; 0, IF SERIES I MONITOR
    3105/   10000 :                     		                                ; 1, IF SERIES II MONITOR
    3106/   10000 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    3107/   10000 :                     		;
    3108/   10000 :                     		; END OF PROGRAM
    3109/   10000 :                     		;
    3110/   10000 :                     		;*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    3111/   10000 :                     	        END
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 53 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


  Symbol Table (* = unused):
  --------------------------

*ACHRM :                         7F - |  ACT :                        0F913 C |
 ACTBL :                      0FB81 C |  ALOC :                       0EACF C |
 ALT :                        0F92B C |  ALUP1 :                      0F8D3 C |
 ALUP2 :                      0F8DB C |  ALUP3 :                      0F8F2 C |
 APT :                        0F923 C |
*ARCHITECTURE :                                        "i386-unknown-win32" - |
 ART :                        0F91B C |  AS0 :                        0F8BE C |
 AS1 :                        0F8CD C |  AS2 :                        0F8E5 C |
 AS3 :                        0F8F2 C |  ASSIGN :                     0F8B6 C |
 B0110 :                        2BA - |  B2400 :                         20 - |
*B9600 :                          7 - |  BASE :                       0F800 - |
 BATCH :                          2 - |  BBASE :                      0E800 - |
*BCDC :                           1 - |  BDLY :                       0EA23 C |
 BDLY1 :                      0EA25 C |  BEGIN :                      0F800 C |
 BLK :                        0FC93 C |  BLOC :                       0EACB C |
 BOVROF :                         1 - | *BOVRON :                         9 - |
 BREAK :                      0FC07 C |  BS0 :                        0E806 C |
 BS1 :                        0E83B C |  BS10 :                       0E913 C |
 BS11 :                       0E920 C |  BS12 :                       0E94E C |
 BS13 :                       0E959 C |  BS14 :                       0E97B C |
 BS1X :                       0E84F C |  BS2 :                        0E862 C |
 BS3 :                        0E86A C |  BS4 :                        0E8AC C |
 BS5 :                        0E8C0 C |  BS6 :                        0E8C6 C |
 BS7 :                        0E8DC C |  BS8 :                        0E8E2 C |
 BS9 :                        0E8EA C |  BSX1 :                       0E98E C |
 BSX10 :                      0EA18 C |  BSX2 :                       0E9A4 C |
 BSX3 :                       0E9B2 C |  BSX4 :                       0E9BD C |
 BSX5 :                       0E9CC C |  BSX6 :                       0E9EA C |
 BSX8 :                       0E9FE C |  BSX9 :                       0EA0D C |
*BTCKSM :                     0EA64 C |  BTDGOF :                         4 - |
 BTDGON :                        0C - |  BYTE :                       0FDDB C |
*CASESENSITIVE :                  0 - |  CCRT :                           1 - |
 CI :                         0FBBE C |  CI0 :                        0FBD0 C |
 CI1 :                        0FBE1 C |  CI2 :                        0FBEB C |
 CI3 :                        0FBEC C |  CI4 :                        0FBFD C |
 CILOC :                      0EAE8 C | *CL5 :                            0 - |
*CL6 :                            4 - | *CL7 :                            8 - |
 CL8 :                           0C - | *CLERR :                         10 - |
 CLOC :                       0EACA C |  CMSK :                         0FC - |
*CNOTD :                          8 - |  CO :                         0FC9F C |
 CO0 :                        0FCB2 C |  COLOC :                      0EAEB C |
 COM :                        0FC95 C |  COMC :                       0FCDE C |
 COMD :                          25 - | *COMPMODE :                       0 - |
*CONC :                         0C1 - | *CONI :                         0C0 - |
*CONO :                         0C0 - | *CONS :                         0C1 - |
*CONSTPI :        3.141592653589793 - |  CONV :                       0FDF4 C |
 COP :                        0F809 - |  CPUC :                         0FF - |
*CPUS :                         0FE - |  CR :                            0D - |
 CRLF :                       0FDFE C |  CRTC :                          10 - |
 CRTOT1 :                     0FCCA C |  CRTOT2 :                     0FCD5 C |
 CRTOUT :                     0FCBE C |  CRTS :                          11 - |
 CS0 :                        0FD53 C |  CS1 :                        0FD6B C |
 CS2 :                        0FD74 C |  CS3 :                        0FD79 C |
 CSLOC :                      0EAFD C | *CSMEM :                          8 - |
 CSTS :                       0FD44 C |  CTBL :                       0F882 C |
 CTR0P :                        0F0 - |  CTR0S :                          0 - |
 CTR1P :                        0F1 - |  CTR1S :                         40 - |
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 54 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


 CTR2P :                        0F2 - |  CTR2S :                         80 - |
 CTTY :                           0 - |  CUSE :                           3 - |
 DADR :                       0FE07 C |  DATC :                         103 - |
*DATE :                 "6/15/2023" - |  DBYTE :                      0FE0C C |
*DECHO :                          7 - |  DELAY :                      0FE1E C |
 DI0 :                        0F938 C |  DI1 :                        0F93E C |
 DI2 :                        0F956 C |  DIAGBT :                     0EB03 - |
 DIAGMN :                     0EB00 - |  DISABL :                        0D - |
*DISAXP :                         0 - |  DISP :                       0F933 C |
 DLOC :                       0EAC9 C |  DLY1 :                       0FE20 C |
 DPRNT :                          8 - |  DREG :                       0FE25 C |
*DSR :                           80 - | *DSTAT :                          3 - |
 DSTS :                          78 - |  DTR :                            2 - |
 ELOC :                       0EAC8 C |  ENABL :                          5 - |
 ENAXP :                          8 - | *ENDX :                       0EB00 C |
*ENHM :                          80 - |  EOF :                        0F95F C |
 EOI :                           20 - | *ERESET :                         1 - |
 ERMSG :                      0EA56 C |  ERROR :                      0F847 C |
 ETX :                            3 - |  EX0 :                        0FE46 C |
 EXIT :                       0EAD2 C |  EXPR :                       0FE39 C |
 F0 :                             4 - | *FALSE :                          0 - |
*FDOC :                           4 - |  FI0 :                        0F984 C |
 FILL :                       0F97D C |  FLOC :                       0EACE C |
*FRDY :                           1 - |  FSTOP :                        0E7 - |
*FSTP :                         0F7 - |  GO0 :                        0F9A4 C |
 GO1 :                        0F9AA C |  GO2 :                        0F9BA C |
 GO3 :                        0F9C2 C |  GO4 :                        0F9D1 C |
 GOTO :                       0F98C C | *HAS64 :                          0 - |
 HEXN :                       0F9D5 C |  HI :                            7A - |
 HILO :                       0FE4C C |  HLOC :                       0EADD - |
 HMSK :                         0FF - |  HXD :                        0FE64 C |
 IBF :                            2 - |  ICFG :                          41 - |
 ICNP :                           1 - | *ICRTI :                         20 - |
*ICRTO :                         10 - |  ICW1 :                          12 - |
 ICW2 :                           0 - |  IICP0 :                        0F8 - |
 IICP1 :                        0FA - |  ILOC :                       0EACD C |
*ILPT :                          40 - | *INIT :                       0E803 C |
 INITIO :                         6 C |  INT0 :                           1 - |
*INT1 :                           2 - | *INT2 :                           4 - |
*INT3 :                           8 - | *INT4 :                          10 - |
*INT5 :                          20 - | *INT6 :                          40 - |
*INT7 :                          80 - |  INTA :                           0 - |
 IOBYT :                          3 C |  IOCC :                         0C1 - |
 IOCCOM :                     0FFA6 C |  IOCDP1 :                     0F821 - |
 IOCDP2 :                     0F844 - |  IOCDR1 :                     0FF7F C |
 IOCDR2 :                     0FF94 C |  IOCHK :                      0FD83 C |
 IOCI :                         0C0 - |  IOCO :                         0C0 - |
*IOCP0 :                        0FB - |  IOCP1 :                        0FA - |
 IOCS :                         0C1 - |  IOCXXX :                     0FF82 C |
 IOCYYY :                     0FF97 C |  IOCZZZ :                     0FFAA C |
 IODEF :                      0FD94 C |  IOPB :                       0EA34 C |
 IOSET :                      0FD87 C | *IPTP :                           4 - |
*IPTR :                           8 - |  ITCP :                         0F3 - |
 ITIMO :                        0FF - | *ITTYI :                          2 - |
*ITTYO :                          1 - |  KEYC :                          12 - |
*KINT :                          14 - |  KRDY :                           1 - |
 KSTS :                          13 - |  LADR :                       0FE56 C |
 LBMK :                         0FF - |  LBYTE :                      0FE5B C |
 LCRLF :                      0FE6A C |  LCRT :                          40 - |
 LCT :                           1A - | *LCTR :                           0 - |
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 55 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


 LERM :                          0E - |  LF :                            0A - |
 LILOC :                      0EAFA C | *LISTON :                         1 - |
 LLOC :                       0EADC - |  LLPT :                          80 - |
 LMSK :                          3F - |  LO :                         0FD1E C |
 LOM :                        0FD14 C |  LOWW :                          79 - |
 LP0 :                        0FD33 C |  LPTC :                          14 - |
 LPTRY :                          1 - |  LSTC :                          15 - |
*LSTE :                          40 - |  LTBL :                       0F903 C |
 LTTY :                           0 - |  LUSE :                         0C0 - |
 LVER :                          1B - | *MACEXP :                         7 - |
 MEMCHK :                     0FD8C C |  MEMTOP :                         4 C |
*MENB :                          80 - |  MFALSE :                         0 - |
 MLP :                        0E902 C | *MNCKSM :                     0FFFD C |
*MODE0 :                          0 - | *MODE2 :                          4 - |
 MODE3 :                          6 - | *MODE4 :                          8 - |
*MODE5 :                         0A - | *MODEL :                          2 - |
*MOMCPU :                      8080 - | *MOMCPUNAME :                "8080" - |
 MOVBOT :                         2 - |  MOVE :                       0F9F0 C |
 MTRUE :                  0FFFFFFFF - |  MUSER :                      0FC8C C |
 MV0 :                        0F9F7 C |  NCMSK :                          3 - |
*NESTMAX :                      100 - |  NI0 :                        0FEA6 C |
 NIBBLE :                     0FE98 C |  NLEADX :                     0FA0B C |
 NPMSK :                         30 - |  NREGS :                         0C - |
 NRMSK :                         0C - |  NU0 :                        0FA09 C |
 NULL :                       0FA01 C |  OBF :                            1 - |
*OCW3 :                          0B - |  ONEMS :                         70 - |
 OPCPL :                          4 - |  P1LOC :                      0EAF4 C |
 P2C :                        0FEC8 C |  P2LOC :                      0EAF7 C |
 PA0 :                        0FE7A C |  PA1 :                        0FE7D C |
 PA2 :                        0FE90 C | *PACIFY :                         0 - |
 PADR :                       0FEAA C |  PARAM :                      0FE74 C |
 PARML :                          4 - |  PBYTE :                      0FEAF C |
 PCHK :                       0FEC5 C | *PCOMP :                          2 - |
*PENB :                          10 - | *PEVEN :                         20 - |
*PGRDY :                          1 - | *PIOC :                         0F9 - |
 PIOCOM :                     0FFE4 C |  PIODR1 :                     0FFB5 C |
 PIODR2 :                     0FFB8 C |  PIODR3 :                     0FFCE C |
 PIODR4 :                     0FFD1 C |  PIOI :                         0F8 - |
 PIOO :                         0F8 - |  PIOS :                         0F9 - |
 PIOZZZ :                     0FFE8 C |  PLOC :                       0EAE1 - |
 PMSK :                         0CF - | *PNIB :                          10 - |
 PO :                         0FCE9 C |  PO0 :                        0FCF7 C |
 PO1 :                        0FD08 C |  POC :                        0FCE5 C |
 PPTP :                          10 - |  PRTM :                       0EA2A C |
*PSOCK :                         20 - |  PSTC :                          13 - |
 PTPRY :                          1 - |  PTRADV :                        40 - |
 PTRDY :                          1 - | *PTRREV :                        60 - |
 PTTY :                           0 - |  PUNC :                          12 - |
 PUSE1 :                         20 - |  PUSE2 :                         30 - |
 Q0 :                         0FA21 C |  Q2 :                         0FA48 C |
 QL :                         0FA3D C |  QUERY :                      0FA14 C |
 R16X :                           2 - |  R1LOC :                      0EAEE C |
*R1X :                            1 - |  R2LOC :                      0EAF1 C |
*R64X :                           3 - |  RADCT :                         30 - |
 RDBC :                          19 - | *RDBCC :                         1A - |
 RDRC :                          10 - |  RDSTS :                         1C - |
 READ :                       0FA52 C |  RED0 :                       0FA59 C |
 RED1 :                       0FA7B C |  RED2 :                       0FA93 C |
 RED3 :                       0FA9E C |  RED4 :                       0FAB3 C |
*RELAXED :                        0 - |  RESET :                          0 C |
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 56 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


 RESTART :                    0FED4 C | *RFR :                           20 - |
 RI :                         0FC0F C |  RI0 :                        0FC1F C |
 RI1 :                        0FC2C C |  RI2 :                        0FC39 C |
 RI3 :                        0FC47 C |  RI4 :                        0FC4C C |
 RI4B :                       0FC4F C |  RI5 :                        0FC58 C |
 RI6 :                        0FC65 C |  RI7 :                        0FC79 C |
 RI8 :                        0FC82 C |  RIX :                        0FF58 C |
*RLLB :                          10 - |  RLLM :                          30 - |
*RLMB :                          20 - |  RMSK :                         0F3 - |
*ROV :                           10 - | *RPAR :                           8 - |
 RPPC :                          17 - |  RPSTC :                         18 - |
 RPTR :                           4 - |  RRDY :                           2 - |
 RRSTS :                         1B - |  RST0 :                       0FEF7 C |
 RST1 :                       0FF25 C |  RST2 :                       0FF42 C |
 RST3 :                       0FF50 C |  RSTA :                       0FF13 C |
 RSTB :                       0FF20 C |  RSTC :                          11 - |
 RSTS :                          7B - |  RTCC :                         4CD - |
 RTOCT :                        0FA - |  RTS :                           20 - |
 RTTY :                           0 - |  RUSE1 :                          8 - |
 RUSE2 :                         0C - |  RXEN :                           4 - |
*SBCH :                           8 - |  SICP0 :                        0FD - |
 SICP1 :                        0FC - | *SINT :                          0A - |
 SLOC :                       0EAD1 C |  SOCP0 :                        0FD - |
 SOCP1 :                        0FC - | *SRQ :                            6 - |
*SRQACK :                         5 - | *SRQDAK :                         4 - |
*ST1 :                           40 - | *ST15 :                          80 - |
 ST2 :                          0C0 - |  START :                      0F855 C |
 START0 :                     0F851 C |  SU0 :                        0FAC3 C |
 SU1 :                        0FAD9 C |  SUBS :                       0FABF C |
*SYNC :                           0 - | *SYND :                          40 - |
*SYSTAT :                         2 - |  TADV :                          27 - |
 TI :                         0FF61 C | *TIME :                  "19:49:10" - |
 TLOC :                       0EAE2 C |  TOS :                        0EAC8 C |
 TOUT :                         0FA - | *TRAM :                           9 - |
 TRDY :                           1 - |  TRK0 :                        3000 - |
 TRKL :                        0D00 - | *TRUE :                           1 - |
 TTYC :                         0F5 - |  TTYI :                         0F4 - |
 TTYIN :                      0FBC6 C |  TTYO :                         0F4 - |
 TTYOUT :                     0FCA7 C |  TTYS :                         0F5 - |
 TXBE :                           4 - |  TXEN :                           1 - |
 UC :                         0FF76 C | *UCI :                            0 - |
*UCO :                            1 - |  UCS :                            7 - |
 UI :                         0FDAD C | *UL1 :                            6 - |
 UO :                         0FDBE C | *UP1 :                            4 - |
*UP2 :                            5 - |  UPPS :                       0FDCE C |
*UR1 :                            2 - | *UR2 :                            3 - |
 USCC :                         0F7 - |  USCI :                         0F6 - |
 USCO :                         0F6 - |  USCS :                         0F7 - |
 USER :                       0EAC0 - | *USRST :                         40 - |
 VER :                           0D - |  VERH :                          13 - |
 VERS :                       0EA3B C | *VERSION :                     142F - |
*WDBC :                          17 - | *WDBCC :                         18 - |
 WPBC :                          15 - |  WPBCC :                         16 - |
 WPPC :                          16 - |  WR0 :                        0FAE5 C |
 WR1 :                        0FAED C |  WR2 :                        0FAF8 C |
 WR3 :                        0FB07 C |  WRITE :                      0FADD C |
 X :                          0FB26 C |  X0 :                         0FB31 C |
 X1 :                         0FB3F C |  X2 :                         0FB42 C |
 X3 :                         0FB5F C |  X4 :                         0FB60 C |
 X5 :                         0FB6A C |  X6 :                         0FB6D C |
 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 57 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


 XTBL :                       0EAE8 C |  Z :                          0FBA6 C |
*Z80SYNTAX :                      0 - |

    475 symbols
    108 unused symbols

 AS V1.42 Beta [Bld 234] - Source File monIIv13_as.asm - Page 58 - 6/15/2023 19:49:10
 INTELLEC SERIES II MONITOR, VERSION 1.3, 1 MARCH 1979 


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.05 seconds assembly time

   3112 lines source file
      2 passes
      0 errors
      0 warnings
